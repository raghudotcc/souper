%0:i8 = var
%1:i32 = zext %0
%2:i32 = subnsw 116:i32, %1
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 116:i8, %0
result %4
%0:i64 = zext 0:i32
infer %0
result 0:i64
%0 = block 2
%1 = block 2
%2 = block 4
%3 = block 2
%4:i64 = var
%5:i64 = var
%6:i64 = phi %3, %4, %5
%7:i64 = phi %2, %6, 0:i64, 0:i64, 0:i64
%8:i64 = phi %1, %7, 0:i64
%9:i64 = phi %0, %8, 0:i64
%10:i1 = ne 0:i64, %9
pc %10 1:i1
%11:i1 = eq 0:i64, %9
infer %11
%12:i1 = ult %7, %6
result %12
%0:i32 = zext 0:i1
%1:i8 = trunc %0 (hasExternalUses)
%2:i32 = zext %1
%3:i1 = ne 0:i32, %2
infer %3
result 0:i1
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 255:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 7:i32
%5:i32 = phi %0, %4, 0:i32
%6:i32 = and %2, %5
infer %6
%7:i32 = and %1, %5
result %7
%0:i32 = var
%1:i32 = var
%2:i1 = sle %0, %1
pc %2 1:i1
%3:i32 = addnsw 1:i32, %1 (hasExternalUses)
%4:i64 = sext %3
%5:i64 = mul 40:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 40:i32, %3
result %7
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 48:i32, %1
pc %2 1:i1
%3:i1 = ne 49:i32, %1
pc %3 1:i1
%4:i1 = ne 50:i32, %1
pc %4 1:i1
%5:i1 = ne 51:i32, %1
pc %5 1:i1
%6:i1 = ne 52:i32, %1
pc %6 1:i1
%7:i1 = ne 53:i32, %1
pc %7 1:i1
%8:i1 = ne 54:i32, %1
pc %8 1:i1
%9:i1 = ne 55:i32, %1
pc %9 1:i1
%10:i1 = ne 56:i32, %1
pc %10 1:i1
%11:i1 = ne 57:i32, %1
pc %11 1:i1
%12:i1 = eq 46:i32, %1
infer %12
%13:i1 = eq 46:i8, %0
result %13
%0:i32 = select 1:i1, 16:i32, 2:i32
infer %0 (demandedBits=00000000000000001111111111011111)
result 16:i32
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (nonNegative) (range=[0,2147483643))
%1:i64 = udiv %0, 2:i64
infer %1
%2:i64 = ashr %0, 1:i64
result %2
%0:i32 = var (range=[0,2))
%1 = block 1
%2:i32 = var
%3:i32 = phi %1, %2
%4:i32 = xor %0, %3
infer %4
%5:i32 = xor %0, %2
result %5
%0 = block 3
%1 = block 1
%2:i32 = var
%3:i32 = phi %1, %2
%4:i32 = phi %0, 0:i32, 0:i32, %3
%5:i32 = and 1:i32, %4
%6:i1 = ne 0:i32, %5
infer %6
%7:i1 = trunc %4
result %7
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 192:i32, %1
%3:i1 = eq 128:i32, %2
infer %3
%4:i1 = slt %0, 192:i8
result %4
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 48:i32, %1
pc %2 0:i1
%3 = block 1
%4:i8 = phi %3, %0
%5:i32 = sext %4
infer %5
result %1
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = var
%4:i32 = mulnw 0:i32, %3
%5:i32 = addnw %0, %4
%6:i64 = sext %5
infer %6
%7:i64 = sext %0
result %7
%0:i16 = var
%1:i32 = zext %0
%2:i32 = sdiv %1, 4:i32
%3:i32 = subnsw %2, 8:i32
%4:i8 = var
%5:i32 = zext %4
%6:i32 = shlnuw %5, 24:i32
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 16:i32
%10:i32 = or %6, %9
%11:i8 = var
%12:i32 = zext %11
%13:i32 = shlnw %12, 8:i32
%14:i32 = or %10, %13
%15:i8 = var
%16:i32 = zext %15
%17:i32 = or %14, %16 (hasExternalUses)
%18:i1 = sle %3, %17
pc %18 0:i1
%19:i1 = slt %17, 0:i32
pc %19 0:i1
%20:i32 = addnw 1:i32, %17 (hasExternalUses)
%21:i32 = lshr %20, 24:i32
infer %21 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4 (hasExternalUses)
%6:i8 = trunc %5
infer %6
result %3
%0:i32 = var
%1:i64 = zext %0 (hasExternalUses)
%2:i64 = and 18374686479671623680:i64, %1
%3:i1 = ne 0:i64, %2
infer %3
result 0:i1
%0 = block 2
%1 = block 2
%2:i8 = var
%3:i8 = phi %1, 100:i8, %2
%4:i8 = phi %0, 99:i8, %3
%5:i32 = zext %4
%6:i32 = subnsw %5, 97:i32
%7:i32 = addnsw 138:i32, %6
%8:i8 = trunc %7
infer %8
%9 = block 2
%10 = block 2
%11:i8 = phi %10, 100:i8, %2
%12:i8 = phi %9, 99:i8, %11
%13:i8 = add 41:i8, %12
result %13
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 48:i32, 16:i32
%3:i32 = or 64:i32, %2
%4:i32 = or 64:i32, %2
%5:i32 = phi %0, %3, %4
%6:i16 = trunc %5
infer %6
%7:i16 = trunc %4
result %7
%0 = block 1
%1:i32 = var (range=[-2147483647,-2147483648))
%2:i32 = phi %0, %1
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i32 = addnsw 4:i32, %2
infer %4
%5:i32 = add 4:i32, %1
result %5
%0 = block 2
%1:i8 = var
%2:i8 = phi %0, %1, 0:i8
%3:i32 = zext %2
%4:i1 = eq 0:i32, %3
infer %4
%5 = block 2
%6:i8 = phi %5, %1, 0:i8
%7:i1 = eq 0:i8, %6
result %7
%0:i32 = var
%1:i64 = zext %0 (hasExternalUses)
%2:i64 = and 18374686479671623680:i64, %1
%3:i1 = ne 0:i64, %2
pc %3 1:i1
%4:i64 = lshr %1, 8:i64 (hasExternalUses)
%5:i64 = lshr %4, 7:i64 (hasExternalUses)
%6:i64 = lshr %5, 7:i64 (hasExternalUses)
%7:i64 = and 127:i64, %6
%8:i64 = or 128:i64, %7
infer %8 (demandedBits=0000000000000000000000000000000000000000000000000000000011111111)
result %1
%0:i32 = select 0:i1, 16:i32, 2:i32
%1:i32 = or 32:i32, %0 (hasExternalUses)
%2:i32 = select 0:i1, 128:i32, 64:i32
%3:i32 = or %1, %2
infer %3 (demandedBits=00000000000000001111111111111111)
result 98:i32
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
pc %7 1:i1
%8:i32 = and 63:i32, %5
%9:i32 = shl %8, 10:i32
infer %9
result %4
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
%2:i64 = zext %1
%3:i64 = mulnw 24:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 24:i32, %1
result %5
%0:i16 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = slt 0:i32, %1
pc %2 1:i1
%3:i1 = slt 1:i32, %1
%4:i32 = select %3, %1, 1:i32
%5:i64 = zext %4
infer %5
%6:i64 = sext %0
result %6
%0:i32 = var (knownBits=000000000000000000000000xxxxxxxx) (nonNegative) (signBits=24) (range=[1,256))
%1:i32 = and 128:i32, %0
%2:i1 = ne 0:i32, %1
infer %2
%3:i1 = ult 127:i32, %0
result %3
%0 = block 2
%1:i32 = var (range=[-2147483647,-2147483648))
%2:i32 = phi %0, %1, 0:i32
%3:i1 = slt 0:i32, %2
pc %3 1:i1
%4:i64 = zext %2
infer %4
%5:i64 = sext %1
result %5
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 0:i32, %1
infer %2
result 0:i32
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294966911:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 96:i32, %4
%6:i16 = trunc %5
infer %6
%7:i16 = or 96:i16, %3
result %7
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, 29:i32, %1
%3:i1 = eq 29:i32, %2
%4:i32 = select %3, 1:i32, 2:i32
%5:i8 = trunc %4
infer %5
%6 = block 2
%7:i32 = phi %6, 29:i32, %1
%8:i1 = eq 29:i32, %7
%9:i8 = select %8, 1:i8, 2:i8
result %9
%0 = block 3
%1:i64 = var
%2:i64 = phi %0, %1, %1, %1
%3:i64 = var
%4:i64 = sub %2, %3
infer %4
%5:i64 = sub %1, %3
result %5
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = ne 4294967290:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3 (hasExternalUses)
%5:i1 = ne 0:i8, %4
%6:i1 = xor 1:i1, %5
infer %6
%7:i1 = eq 250:i8, %0
result %7
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64 (hasExternalUses)
%14:i64 = lshr %13, 7:i64 (hasExternalUses)
%15:i64 = lshr %14, 7:i64 (hasExternalUses)
%16:i64 = lshr %15, 7:i64
%17:i64 = or 128:i64, %16
%18:i8 = trunc %17
infer %18
result 255:i8
%0 = block 2
%1 = block 1
%2:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%3:i64 = phi %1, %2
%4:i32 = trunc %3
%5 = block 1
%6:i64 = addnw 1:i64, %2
%7:i64 = phi %5, %6
%8:i32 = trunc %7
%9:i32 = phi %0, %4, %8
%10:i1 = slt %9, 0:i32
infer %10
result 0:i1
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
%5:i32 = or 0:i32, %4
%6:i32 = lshr %5, 1:i32
%7:i64 = sext %6
infer %7
%8:i64 = sext %3
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 3:i32, %1
%3:i32 = select %2, 16:i32, 0:i32
%4:i32 = or %3, %1
infer %4
%5:i32 = select %2, 19:i32, %1
result %5
%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, %1
%3:i64 = var
%4:i64 = sub %2, %3
infer %4
%5:i64 = sub %1, %3
result %5
%0:i32 = var (range=[1,5))
%1:i32 = add 4294967295:i32, %0 (hasExternalUses)
%2:i1 = slt %1, 0:i32
%3:i32 = select %2, %1, 0:i32
infer %3
result 0:i32
%0:i32 = var
%1:i64 = zext %0
%2:i64 = mul 40:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 40:i32, %0
result %4
%0 = block 2
%1:i32 = var
%2:i32 = mulnw 2:i32, %1
%3:i32 = phi %0, %2, 256:i32
%4:i64 = zext %3
%5:i64 = mulnw 8:i64, %4
%6:i32 = trunc %5
infer %6
%7 = block 2
%8:i32 = phi %7, %2, 256:i32
%9:i32 = mul 8:i32, %8
result %9
%0:i8 = var
%1:i32 = sext %0
%2:i1 = sle 0:i32, %1
infer %2
%3:i1 = ult %0, 128:i8
result %3
%0 = block 2
%1 = block 3
%2 = block 2
%3:i64 = var
%4:i64 = var
%5:i64 = phi %2, %3, %4
%6:i64 = var
%7:i64 = phi %1, %5, %6, %6
%8 = block 1
%9:i64 = var
%10:i64 = phi %8, %9
%11:i64 = phi %0, %7, %10
%12:i64 = sub %11, %11
infer %12 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result 0:i64
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 48:i32, %1
infer %2
%3:i1 = eq 48:i8, %0
result %3
%0:i32 = var
%1 = block 5
%2:i8 = var
%3:i32 = zext %2
%4:i8 = var
%5:i32 = sext %4
%6:i32 = add %3, %5
%7:i8 = trunc %6
%8:i8 = phi %1, 98:i8, %7, 99:i8, 99:i8, 98:i8
%9:i32 = zext %8
%10:i32 = or %0, %9
%11:i8 = trunc %10
%12:i32 = zext %11
infer %12 (demandedBits=00000000000000000000000011111111)
result %10
%0:i16 = var
%1:i32 = zext %0
%2:i16 = var
%3:i32 = zext %2 (hasExternalUses)
%4:i32 = or %1, %3
%5:i32 = and 1:i32, %4
%6:i1 = ne 0:i32, %5
pc %6 0:i1
%7:i32 = and 4:i32, %3
%8:i1 = ne 0:i32, %7
pc %8 0:i1
%9:i32 = and 8:i32, %3
%10:i1 = ne 0:i32, %9
pc %10 0:i1
%11:i32 = and 18:i32, %3
%12:i1 = ne 0:i32, %11
pc %12 1:i1
%13:i32 = or 2:i32, %3
%14:i16 = trunc %13
infer %14
%15:i16 = or 2:i16, %2
result %15
%0:i8 = var
%1:i1 = ne 0:i8, %0
pc %1 1:i1
%2:i32 = sext %0
%3:i1 = eq 37:i32, %2
infer %3
%4:i1 = eq 37:i8, %0
result %4
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967231:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 256:i32, %4
infer %5 (demandedBits=00000000000000001111111111111111)
%6:i32 = or 256:i32, %2
result %6
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967291:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = and 65531:i16, %0
result %4
%0:i64 = var
%1:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000) (nonZero)
%2:i64 = sub %0, %1
%3:i32 = trunc %2 (hasExternalUses)
%4:i32 = var
%5:i1 = slt %3, %4
pc %5 1:i1
%6:i32 = subnsw %4, %3 (hasExternalUses)
%7:i1 = sle %6, %4
pc %7 1:i1
%8:i64 = sext %4 (hasExternalUses)
%9:i64 = add 18446744073709551615:i64, %8
%10:i64 = sext %3
%11:i64 = sub %9, %10
%12:i64 = addnsw 18446744073709551615:i64, %8
%13:i1 = slt %11, %12
%14:i64 = select %13, %11, %12
%15:i64 = sub %8, %14 (hasExternalUses)
%16:i1 = ult %15, 4:i64
pc %16 0:i1
%17:i64 = var
%18:i64 = sub %9, %14
%19:i65 = umul.with.overflow 1:i64, %18
%20:i64 = extractvalue %19, 0:i32
%21:i64 = sub %17, %20
%22:i1 = ult %17, %21
%23:i64 = add %17, %20
%24:i1 = ult %23, %17
%25:i1 = select 1:i1, %22, %24
%26:i1 = extractvalue %19, 1:i32
%27:i1 = or %25, %26
infer %27
result %22
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3 = block 1
%4:i8 = trunc %1
%5:i8 = phi %3, %4
infer %5
result %0
%0:i8 = var (range=[1,0))
%1:i32 = sext %0
%2:i1 = eq 39:i32, %1
infer %2
%3:i1 = eq 39:i8, %0
result %3
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, %1
infer %2
result %1
%0 = block 1
%1:i64 = var (nonZero)
%2:i64 = phi %0, %1
infer %2 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %1
%0 = block 2
%1 = block 2
%2:i32 = select 1:i1, 16:i32, 2:i32
%3:i32 = or 32:i32, %2
%4:i32 = phi %1, %3, 16:i32
%5:i32 = or 64:i32, %4
%6:i32 = select 0:i1, 128:i32, 64:i32
%7:i32 = or %4, %6
%8:i32 = phi %0, %5, %7
%9:i16 = trunc %8
infer %9
%10:i16 = trunc %5
result %10
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 4294966911:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 64:i32, %4
infer %5 (demandedBits=00000000000000001111111111111111)
%6:i32 = or 64:i32, %2
result %6
%0:i32 = var
%1:i32 = and 256:i32, %0
%2:i1 = ne 0:i32, %1
pc %2 0:i1
%3:i32 = and 512:i32, %0
%4:i1 = ne 0:i32, %3
pc %4 0:i1
%5:i32 = and 8192:i32, %0
%6:i1 = ne 0:i32, %5
pc %6 1:i1
%7:i32 = and 65536:i32, %0
%8:i1 = ne 0:i32, %7
%9:i32 = zext %8
infer %9
%10:i32 = ashr %7, 16:i32
result %10
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
infer %5 (demandedBits=00000000000000001111111100000000)
result %2
%0 = block 2
%1:i32 = var
%2 = block 3
%3:i32 = var (range=[0,2147483647))
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = var
%6:i32 = subnsw %5, 1:i32
%7:i32 = phi %2, %3, %4, %6
%8:i32 = phi %0, %1, %7
%9:i32 = addnsw 1:i32, %8
%10:i32 = mulnsw 4294967295:i32, %9
infer %10
%11 = block 2
%12 = block 3
%13:i32 = phi %12, %3, %4, %6
%14:i32 = phi %11, %1, %13
%15:i32 = sub 4294967295:i32, %14
result %15
%0:i32 = var
%1:i1 = ne 0:i32, %0
pc %1 1:i1
%2:i32 = add 1:i32, %0 (hasExternalUses)
%3:i16 = var
%4:i32 = zext %3
%5:i32 = sdiv 1073741824:i32, %4
%6:i32 = addnw 1:i32, %5
%7:i1 = eq %2, %6
infer %7
%8:i1 = eq %0, %5
result %8
%0 = block 2
%1 = block 2
%2:i8 = var
%3:i32 = zext %2
%4:i8 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, %5
%7:i32 = subnw %6, 69:i32
%8:i32 = xor 2:i32, %7
%9:i32 = addnsw 69:i32, %8
%10:i8 = trunc %9
%11:i32 = zext %10
%12:i32 = phi %0, %6, %11
%13:i1 = eq 64:i32, %12
pc %13 0:i1
%14:i1 = eq 65:i32, %12
infer %14
%15 = block 2
%16:i32 = phi %15, %3, %5
%17:i1 = eq 65:i32, %16
result %17
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3:i1 = ne 10:i32, %1
pc %3 1:i1
%4:i1 = ne 13:i32, %1
pc %4 1:i1
%5:i8 = var
%6:i32 = sext %5
%7:i1 = eq %1, %6
infer %7
%8:i1 = eq %0, %5
result %8
%0 = block 2
%1:i32 = var (range=[0,4))
%2:i32 = phi %0, %1, %1
%3:i1 = slt %2, 0:i32
infer %3
result 0:i1
%0:i64 = var
%1:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000) (nonZero)
%2:i64 = sub %0, %1
%3:i32 = trunc %2 (hasExternalUses)
%4:i32 = var
%5:i1 = slt %3, %4
pc %5 1:i1
%6:i32 = subnsw %4, %3 (hasExternalUses)
%7:i1 = sle %6, %4
pc %7 1:i1
%8:i64 = sext %4 (hasExternalUses)
%9:i64 = add 18446744073709551615:i64, %8
%10:i64 = sext %3
%11:i64 = sub %9, %10
%12:i64 = addnsw 18446744073709551615:i64, %8
%13:i1 = slt %11, %12
%14:i64 = select %13, %11, %12
%15:i64 = sub %8, %14 (hasExternalUses)
%16:i1 = ult %15, 4:i64
pc %16 0:i1
%17:i64 = sub %9, %14
%18:i65 = umul.with.overflow 1:i64, %17 (hasExternalUses)
%19:i1 = extractvalue %18, 1:i32
infer %19
result 0:i1
%0:i32 = var (range=[0,100))
%1:i8 = trunc %0
%2:i8 = udiv %1, 10:i8
%3:i32 = zext %2
infer %3 (demandedBits=00000000000000000000000011111111)
%4:i32 = udiv %0, 10:i32
result %4
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 34:i32, %1
infer %2
%3:i1 = eq 34:i8, %0
result %3
%0 = block 3
%1:i8 = var
%2:i32 = zext %1
%3:i32 = and 127:i32, %2
%4:i32 = shlnw %3, 7:i32
%5:i8 = var
%6:i32 = zext %5
%7:i32 = or %4, %6
%8 = block 1
%9:i8 = var
%10:i32 = zext %9
%11:i32 = and 127:i32, %10
%12:i32 = var
%13:i32 = shl %12, 7:i32
%14:i32 = or %11, %13
%15:i32 = phi %8, %14
%16:i32 = phi %0, %2, %7, %15
%17:i1 = ule 12:i32, %16
pc %17 1:i1
%18:i32 = subnuw %16, 12:i32
%19:i32 = udiv %18, 2:i32
infer %19
%20 = block 3
%21 = block 1
%22:i32 = phi %21, %14
%23:i32 = phi %20, %2, %7, %22
%24:i32 = subnuw %23, 12:i32
%25:i32 = lshr %24, 1:i32
result %25
%0:i16 = var
%1:i32 = zext %0
%2:i32 = addnw 0:i32, %1
infer %2
result %1
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
%3:i32 = select %2, 2:i32, 1:i32
%4:i8 = trunc %3
infer %4
%5:i8 = select %2, 2:i8, 1:i8
result %5
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 45:i32, %1
infer %2
%3:i1 = eq 45:i8, %0
result %3
%0 = block 1
%1:i16 = var
%2:i16 = add 1:i16, %1
%3:i16 = phi %0, %2
%4:i32 = sext %3
infer %4
%5:i32 = sext %2
result %5
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 42:i32, %1
infer %2
%3:i1 = eq 42:i8, %0
result %3
%0:i16 = var
%1:i32 = zext %0
%2:i32 = or 16:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = or 16:i16, %0
result %4
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = sub %0, %2
%4:i32 = add 0:i32, %3
infer %4
result %3
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = sle 48:i32, %1
%3:i1 = sle %1, 57:i32
%4:i1 = and %2, %3
pc %4 0:i1
%5 = block 1
%6:i8 = phi %5, %0
%7:i32 = sext %6
infer %7
result %1
%0 = block 2
%1 = block 2
%2:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%3:i32 = addnsw 1:i32, %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
%6:i1 = slt %5, 2:i32
pc %6 0:i1
%7:i8 = var
%8:i32 = zext %7
%9:i32 = mulnw 3:i32, %8
%10:i8 = var
%11:i32 = zext %10 (hasExternalUses)
%12:i32 = mulnw 4:i32, %11
%13:i32 = xor %9, %12
%14:i32 = xor %5, %13
infer %14
%15:i32 = xor %3, %13
result %15
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64
infer %11 (demandedBits=0000000000000000000000000000000000000000000111111111111111111111)
result 2097151:i64
%0 = block 1
%1:i32 = phi %0, 21:i32
infer %1
result 21:i32
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 32:i32, %1
infer %2
%3:i1 = eq 32:i8, %0
result %3
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
infer %5 (demandedBits=00000000000000001111111100000000)
result %2
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 4294967290:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3
infer %4
%5:i8 = zext %2
result %5
%0:i32 = lshr 1:i32, 8:i32
infer %0 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4 (hasExternalUses)
%6:i1 = slt 0:i32, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i8 = var
%11:i32 = zext %10
%12:i32 = or %9, %11 (hasExternalUses)
%13:i1 = slt %5, %12
%14:i1 = and %6, %13
pc %14 0:i1
%15:i8 = trunc %12
infer %15
result %10
%0 = block 2
%1 = block 5
%2:i64 = var
%3:i64 = phi %1, %2, 0:i64, 0:i64, 0:i64, 0:i64
%4:i64 = var
%5:i64 = phi %0, %3, %4
%6:i1 = eq 0:i64, %5
pc %6 0:i1
infer %6
%7:i1 = ult %2, %3
result %7
%0:i32 = select 0:i1, 16:i32, 2:i32
%1:i32 = or 32:i32, %0
%2:i32 = select 1:i1, 128:i32, 64:i32
%3:i32 = or %1, %2
%4:i16 = trunc %3
infer %4
result 162:i16
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 254:i32, %1
infer %2
%3:i1 = eq 254:i8, %0
result %3
%0:i64 = var
%1:i1 = eq 0:i64, %0
pc %1 0:i1
%2:i64 = var
%3:i64 = sub %2, %0
%4:i32 = trunc %3
%5:i32 = and 2147483647:i32, %4
infer %5 (demandedBits=01111111111111111111111111111111)
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 103:i32, %1
infer %2
%3:i1 = eq 103:i8, %0
result %3
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 114:i32
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 114:i8, %0
result %4
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = addnw 1:i32, %1
%3:i32 = phi %0, %2
%4:i1 = slt 0:i32, %3
pc %4 1:i1
%5:i64 = zext %3
%6:i64 = mulnw 8:i64, %5
%7:i32 = trunc %6
infer %7
%8:i32 = mul 8:i32, %2
result %8
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
infer %7
%8:i1 = ult %1, 7:i64
result %8
%0:i32 = var
%1:i64 = zext %0
%2:i64 = or 0:i64, %1
%3:i64 = and 4294967295:i64, %2
infer %3 (demandedBits=1111111111111111111111110000000011111111111111111111111111111111)
result %1
%0:i32 = var
%1:i32 = and 65536:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
%5:i32 = select %4, 3:i32, 2:i32
%6:i8 = trunc %5
infer %6
%7:i8 = select %2, 3:i8, 2:i8
result %7
%0:i16 = var
%1:i32 = zext %0
%2:i32 = or 8:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = or 8:i16, %0
result %4
%0 = block 4
%1:i32 = var
%2:i32 = phi %0, %1, 255:i32, 255:i32, 255:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 7:i32
%5:i32 = phi %0, %4, 0:i32, 0:i32, 0:i32
%6:i32 = and %2, %5
infer %6
%7:i32 = and %1, %5
result %7
%0:i8 = var (signBits=7) (range=[0,2))
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
infer %2
%3:i1 = trunc %0
result %3
%0:i32 = select 1:i1, 1:i32, 2:i32
infer %0
result 1:i32
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnuw %1, 24:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %2, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i32 = or %6, %9
%11:i8 = var
%12:i32 = zext %11
%13:i32 = or %10, %12
%14:i1 = eq 0:i32, %13
infer %14
%15:i1 = eq %10, %12
result %15
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = sle 48:i32, %1
pc %2 0:i1
%3 = block 1
%4:i8 = phi %3, %0
infer %4
result %0
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32767))
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i16 = var
%3:i32 = sext %2
%4:i1 = slt %1, %3
pc %4 0:i1
%5 = block 1
%6:i16 = phi %5, %2
infer %6
result %2
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i16 = var
%3:i32 = zext %2 (hasExternalUses)
%4:i32 = addnsw %0, %3
%5:i32 = addnsw 2:i32, %4
%6:i32 = var
%7:i16 = var
%8:i32 = zext %7
%9:i32 = addnw 2:i32, %8
%10:i32 = subnsw %6, %9 (hasExternalUses)
%11:i1 = sle %5, %10
pc %11 0:i1
%12 = block 1
%13:i32 = phi %12, %0
infer %13
result %0
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 0:i1
%5:i32 = mul 37:i32, %1
%6:i64 = zext %5
%7:i32 = trunc %6
%8:i32 = urem %7, 124:i32
infer %8
%9:i32 = urem %5, 124:i32
result %9
%0:i8 = var (range=[1,0))
%1:i32 = sext %0
%2:i1 = ne 59:i32, %1
pc %2 1:i1
%3:i1 = ne 32:i32, %1
pc %3 1:i1
%4:i1 = ne 13:i32, %1
pc %4 1:i1
%5:i1 = ne 9:i32, %1
pc %5 1:i1
%6:i1 = ne 10:i32, %1
pc %6 1:i1
%7:i1 = ne 12:i32, %1
pc %7 1:i1
%8:i1 = ne 47:i32, %1
pc %8 1:i1
%9:i1 = ne 45:i32, %1
pc %9 1:i1
%10:i1 = ne 91:i32, %1
pc %10 1:i1
%11:i1 = ne 96:i32, %1
pc %11 1:i1
%12:i1 = ne 34:i32, %1
pc %12 1:i1
%13:i1 = ne 39:i32, %1
pc %13 1:i1
%14:i32 = zext %0 (hasExternalUses)
%15:i32 = and 128:i32, %14
%16:i1 = ne 0:i32, %15
infer %16
%17:i1 = ult 127:i8, %0
result %17
%0:i32 = var
%1:i32 = var
%2:i1 = sle %0, %1
pc %2 1:i1
%3:i32 = addnsw 1:i32, %1 (hasExternalUses)
%4:i64 = sext %3
%5:i64 = mulnsw 40:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 40:i32, %3
result %7
%0:i32 = var
%1:i1 = slt 2:i32, %0
pc %1 1:i1
%2:i1 = slt 3:i32, %0
%3:i32 = select %2, %0, 3:i32
infer %3
result %0
%0:i32 = var
%1:i1 = slt 1000000000:i32, %0
%2:i32 = zext %1
%3:i1 = ne 0:i32, %2
infer %3
result %1
%0:i32 = var (range=[1,5))
%1:i32 = add 4294967295:i32, %0
%2:i1 = slt %1, 0:i32
%3:i32 = select %2, %1, 0:i32
%4:i32 = sub %1, %3
%5:i64 = zext %4
%6:i64 = addnw 1:i64, %5 (hasExternalUses)
%7:i1 = ult %6, 8:i64
pc %7 0:i1
%8:i64 = urem %6, 8:i64
%9:i64 = sub %6, %8 (hasExternalUses)
%10:i32 = trunc %9
%11:i32 = sub %0, %10
infer %11
result %0
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1 (hasExternalUses)
%3:i1 = slt %0, %2
pc %3 1:i1
%4:i8 = var
%5:i32 = sext %4
%6:i1 = ne 0:i32, %5
%7:i32 = select %6, 1:i32, 0:i32 (hasExternalUses)
%8:i32 = addnw 6:i32, %7 (hasExternalUses)
%9:i32 = addnsw %0, %8 (hasExternalUses)
%10:i1 = sle %9, %2
pc %10 1:i1
%11:i64 = sext %2 (hasExternalUses)
%12:i64 = addnsw 1:i64, %11
%13:i64 = zext %8 (hasExternalUses)
%14:i64 = sub %13, 6:i64
%15:i64 = add 7:i64, %14
%16:i64 = zext %0 (hasExternalUses)
%17:i64 = add %15, %16
%18:i1 = slt %12, %17
%19:i64 = select %18, %17, %12
%20:i64 = add 18446744073709551610:i64, %19
%21:i64 = sub %20, %14
%22:i64 = sub %21, %16 (hasExternalUses)
%23:i1 = ult %22, 8:i64
pc %23 0:i1
%24:i64 = add 18446744073709551609:i64, %19
infer %24
%25:i64 = add 18446744073709551610:i64, %11
result %25
%0 = block 2
%1:i32 = var
%2:i32 = addnsw 2:i32, %1
%3:i32 = phi %0, %2, %2
%4:i32 = var
%5:i1 = slt %3, %4
pc %5 1:i1
%6:i64 = zext %3
infer %6
%7:i64 = zext %2
result %7
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 4:i32, %1
infer %2
%3:i1 = eq 4:i8, %0
result %3
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 0:i1
%4:i32 = or 64:i32, %1
%5:i16 = trunc %4
infer %5
%6:i16 = add 64:i16, %0
result %6
%0:i32 = var
%1:i1 = slt 0:i32, %0
pc %1 0:i1
%2:i32 = addnw 0:i32, %0
infer %2
result %0
%0:i1 = ult 0:i64, 32:i64
%1:i32 = var
%2:i64 = sext %1
%3:i1 = slt 0:i64, %2
%4:i1 = and %0, %3
infer %4
%5:i1 = slt 0:i32, %1
result %5
%0:i32 = lshr 0:i32, 8:i32
infer %0 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 102:i32, %1
infer %2
%3:i1 = eq 102:i8, %0
result %3
%0:i32 = var
%1:i1 = ne 0:i32, %0
%2:i32 = zext %1
%3:i8 = trunc %2
infer %3
%4:i8 = zext %1
result %4
%0:i32 = var
%1:i32 = shl %0, 16:i32
%2:i64 = zext %1
%3:i64 = or 0:i64, %2
%4:i64 = and 4294967295:i64, %3
%5:i64 = or 71776119061217280:i64, %4
infer %5
%6:i64 = add 71776119061217280:i64, %2
result %6
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967231:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
infer %4 (demandedBits=00000000000000001111111101111111)
result %2
%0:i32 = var
%1 = block 5
%2:i8 = var
%3:i32 = zext %2
%4:i8 = var
%5:i32 = sext %4
%6:i32 = addnsw %3, %5
%7:i8 = trunc %6
%8:i8 = phi %1, 98:i8, %7, 99:i8, 99:i8, 98:i8
%9:i32 = zext %8
%10:i32 = or %0, %9
%11:i8 = trunc %10
%12:i32 = zext %11
%13:i8 = trunc %12
infer %13
result %11
%0:i32 = var (range=[0,100))
%1:i8 = trunc %0
%2:i8 = udiv %1, 10:i8
%3:i32 = zext %2
%4:i32 = addnw 48:i32, %3
%5:i8 = trunc %4
infer %5
%6:i8 = add 48:i8, %2
result %6
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
pc %7 1:i1
%8:i32 = and 960:i32, %5
%9:i32 = add 64:i32, %8
%10:i32 = shl %9, 10:i32
infer %10
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 92:i32, %1
infer %2
%3:i1 = eq 92:i8, %0
result %3
%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i1 = eq 0:i32, %2
%4:i32 = select %3, 16:i32, 2:i32
%5:i32 = or 32:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = and 32:i32, %6
%8:i1 = ne 0:i32, %7
pc %8 1:i1
%9 = block 2
%10:i64 = var
%11:i32 = trunc %10
%12:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (range=[0,-1))
%13:i32 = trunc %12
%14:i32 = phi %9, %11, %13
%15:i32 = var
%16:i32 = phi %0, %14, %15
%17:i1 = eq 1:i32, %2
%18:i32 = select %17, 1:i32, 2:i32
%19:i32 = addnsw %16, %18
infer %19
%20:i32 = add %14, %18
result %20
%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
%5:i32 = shlnuw %4, 1:i32
infer %5
%6:i32 = add %3, %3
result %6
%0:i32 = var
%1:i1 = ne 0:i32, %0
%2:i32 = select %1, 1:i32, 0:i32
%3:i8 = trunc %2
infer %3
%4:i8 = zext %1
result %4
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = addnsw %0, %2 (hasExternalUses)
%4:i64 = sext %3
%5:i1 = ult 170:i64, %4
pc %5 1:i1
%6:i64 = sext %0 (hasExternalUses)
%7:i64 = subnsw 200:i64, %6
%8:i32 = trunc %7
infer %8
%9:i32 = sub 200:i32, %0
result %9
%0:i32 = var
%1:i64 = zext %0
%2:i64 = mulnw 24:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 24:i32, %0
result %4
%0:i32 = var
%1:i32 = add 0:i32, %0
infer %1
result %0
%0 = block 3
%1:i32 = var
%2:i32 = and 4294967040:i32, %1
%3:i1 = eq 2048:i32, %2
%4:i1 = phi %0, 0:i1, 1:i1, %3
%5:i32 = zext %4
%6:i1 = ne 0:i32, %5
infer %6
result %4
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64 (hasExternalUses)
%14:i64 = lshr %13, 7:i64 (hasExternalUses)
%15:i64 = lshr %14, 7:i64 (hasExternalUses)
%16:i64 = and 127:i64, %15
%17:i64 = or 128:i64, %16
%18:i8 = trunc %17
infer %18
result 255:i8
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i1 = sle 0:i32, %0
pc %1 1:i1
%2:i32 = var
%3:i32 = shlnuw 1:i32, %0
%4:i1 = sle 32:i32, %0
%5:i32 = select %4, 4294967295:i32, 0:i32
%6:i32 = or %3, %5
%7:i32 = or %2, %6
infer %7
%8:i32 = or %2, %3
result %8
%0:i64 = var
%1:i32 = trunc %0
%2:i32 = and 2147483647:i32, %1
%3:i32 = shlnuw %2, 1:i32
infer %3 (demandedBits=11111111111111111111111111111110)
%4:i32 = add %1, %1
result %4
%0:i16 = var
%1:i32 = zext %0
%2:i1 = slt 0:i32, %1
%3:i32 = select %2, 1:i32, 0:i32
%4:i8 = trunc %3
infer %4
%5:i8 = zext %2
result %5
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3:i8 = trunc %1
infer %3
result %0
%0:i8 = var
%1:i1 = ne 0:i8, %0
pc %1 1:i1
%2:i32 = zext %0
%3:i1 = eq 39:i32, %2
infer %3
%4:i1 = eq 39:i8, %0
result %4
%0:i32 = var
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i1 = sle 100:i32, %1
pc %2 1:i1
%3:i32 = addnsw 4294967295:i32, %1
infer %3
result %0
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32767))
%2:i64 = phi %0, %1
%3:i32 = trunc %2
%4:i64 = sext %3
infer %4
result %1
%0 = block 2
%1:i32 = var
%2:i32 = addnw 1:i32, %1
%3:i32 = addnsw 1:i32, %1
%4:i32 = phi %0, %2, %3
%5:i32 = var
%6:i1 = slt %4, %5
pc %6 1:i1
%7:i64 = zext %4
infer %7
%8:i64 = zext %3
result %8
%0:i32 = var
%1:i32 = mul 37:i32, %0
%2:i64 = zext %1
%3:i32 = trunc %2
%4:i32 = urem %3, 124:i32
infer %4
%5:i32 = urem %1, 124:i32
result %5
%0:i64 = var
%1:i1 = ne 0:i64, %0 (hasExternalUses)
%2:i32 = zext %1
%3:i1 = ne 0:i32, %2
infer %3
result %1
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i32 = or 0:i32, %2
infer %3 (demandedBits=00000000000000001111111100000000)
result %2
%0:i64 = var (nonZero)
%1 = block 2
%2 = block 2
%3 = block 1
%4:i64 = var
%5:i64 = phi %3, %4
%6:i64 = phi %2, %5, %5
%7:i64 = phi %1, %6, %5
%8:i64 = sub %0, %7
infer %8 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%9:i64 = sub %0, %4
result %9
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4 (hasExternalUses)
%6:i1 = slt 0:i32, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i8 = var
%11:i32 = zext %10
%12:i32 = or %9, %11 (hasExternalUses)
%13:i1 = slt %5, %12
%14:i1 = and %6, %13
pc %14 0:i1
%15:i8 = trunc %5
infer %15
result %3
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = zext %1
infer %2 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %0
%0:i16 = var
%1:i32 = zext %0
%2:i16 = var
%3:i32 = zext %2
%4:i32 = or %1, %3
%5:i32 = and 1:i32, %4
%6:i1 = ne 0:i32, %5
infer %6
%7:i1 = trunc %4
result %7
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 109:i32, %1
infer %2
%3:i1 = eq 109:i8, %0
result %3
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 8:i32, %1
%3:i1 = eq 8:i32, %2
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
infer %5
result %3
%0:i64 = var
%1:i64 = var
%2:i1 = ult %0, %1
%3:i64 = var
%4:i64 = var
%5:i1 = ult %3, %4
%6:i1 = and %2, %5
%7:i1 = and 1:i1, %6
infer %7
result %6
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4:i32 = addnsw 1:i32, %3
%5:i32 = phi %1, %2, %4
%6:i32 = phi %0, %5, %5
infer %6
result %5
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3:i32 = and 128:i32, %1
%4:i1 = ne 0:i32, %3
infer %4
%5:i1 = ult 127:i8, %0
result %5
%0 = block 2
%1:i1 = phi %0, 1:i1, 0:i1
%2:i32 = zext %1
%3:i8 = trunc %2
infer %3
%4:i8 = zext %1
result %4
%0:i32 = var
%1:i1 = sle 5:i32, %0
pc %1 1:i1
%2:i32 = add 4294967291:i32, %0
%3:i64 = zext %2
%4:i64 = addnw 1:i64, %3 (hasExternalUses)
%5:i1 = ult %4, 8:i64
pc %5 0:i1
%6:i64 = urem %4, 8:i64
%7:i64 = sub %4, %6
infer %7
%8:i64 = and 2147483640:i64, %4
result %8
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 115:i32, %1
infer %2
%3:i1 = eq 115:i8, %0
result %3
%0 = block 2
%1 = block 2
%2:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%3:i32 = addnsw 1:i32, %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
%6:i1 = slt %5, 2:i32
pc %6 0:i1
%7:i1 = slt 0:i32, %5
infer %7
%8:i1 = ult %2, %3
result %8
%0:i32 = and 0:i32, 1:i32
%1 = block 2
%2:i64 = var
%3:i64 = phi %1, %2, 0:i64
%4:i32 = trunc %3
%5:i32 = and 2147483647:i32, %4
%6:i32 = shlnuw %5, 1:i32
%7:i32 = or %0, %6
infer %7 (demandedBits=11111111111111111111111111111110)
%8:i32 = add %4, %4
result %8
%0:i32 = var (range=[-350,0))
%1:i32 = addnsw 1:i32, %0
%2:i1 = slt %1, 0:i32
infer %2
%3:i1 = slt %0, 4294967295:i32
result %3
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 4294966911:i32, %1
%3:i16 = trunc %2
infer %3 (demandedBits=1111111110111111)
%4:i16 = and 65087:i16, %0
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i32 = zext 0:i8
%4:i32 = or %2, %3
%5:i32 = ashr %4, 8:i32
infer %5 (demandedBits=00000000000000000000000011111111)
result %1
%0:i32 = var
%1:i1 = slt 0:i32, %0
%2:i32 = zext %1
%3:i8 = trunc %2
infer %3
%4:i8 = zext %1
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 19:i32, %1
infer %2
%3:i1 = eq 19:i8, %0
result %3
%0 = block 2
%1 = block 2
%2:i8 = var
%3:i32 = zext %2
%4:i1 = eq 0:i32, %3
%5:i32 = select %4, 16:i32, 2:i32
%6:i32 = or 32:i32, %5
%7:i32 = phi %1, %6, %5
%8:i32 = or 64:i32, %7
%9:i64 = var
%10:i1 = eq 0:i64, %9
%11:i32 = select %10, 128:i32, 64:i32
%12:i32 = or %7, %11
%13:i32 = phi %0, %8, %12
%14:i16 = trunc %13 (hasExternalUses)
%15:i32 = zext %14
%16:i32 = and 2048:i32, %15
infer %16
result 0:i32
%0:i32 = var
%1:i1 = eq 1:i32, %0
pc %1 0:i1
%2:i1 = slt 1:i32, %0
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
result %2
%0:i32 = var (knownBits=0000000000000000000000000000000x) (nonNegative) (signBits=31) (range=[0,2))
%1:i1 = ne 0:i32, %0
pc %1 0:i1
%2:i32 = var
%3:i1 = slt 0:i32, %2
pc %3 1:i1
%4:i32 = addnw %2, %0
infer %4
result %2
%0:i32 = var
%1:i1 = sle 1:i32, %0
pc %1 1:i1
%2:i1 = slt 0:i32, %0
pc %2 1:i1
%3:i32 = add 4294967295:i32, %0
%4:i64 = zext %3
%5:i64 = addnw 1:i64, %4
infer %5 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%6:i64 = sext %0
result %6
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1 (hasExternalUses)
%3:i32 = addnsw %0, %2
%4:i1 = slt 26:i32, %3
pc %4 1:i1
%5 = block 1
%6:i32 = phi %5, %0
infer %6
result %0
%0:i32 = var
%1:i32 = subnsw %0, 1:i32
%2:i32 = sdiv %1, 8:i32
%3:i32 = mulnsw 8:i32, %2
%4:i32 = addnsw 8:i32, %3
%5:i64 = sext %4
%6:i64 = mul 40:i64, %5
%7:i32 = trunc %6
infer %7
%8:i32 = mul 40:i32, %4
result %8
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 7:i32, %1
%3:i64 = sext %2
infer %3
result 7:i64
%0:i64 = var (range=[0,2147483647))
%1:i1 = eq 1:i64, %0
pc %1 0:i1
%2 = block 1
%3:i64 = phi %2, %0
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %0
%0:i16 = var
%1:i32 = zext %0
%2:i16 = var
%3:i32 = zext %2
%4:i32 = subnsw %1, %3 (hasExternalUses)
%5:i32 = subnsw %1, %4
infer %5 (demandedBits=00000000000000001111111111111111)
result %3
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 13:i32, %1
%3:i1 = eq 0:i32, %2
pc %3 1:i1
%4:i32 = and 8:i32, %1
%5:i1 = ne 0:i32, %4
infer %5
result 0:i1
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = addnsw 1:i32, %0
%4:i64 = sext %3
%5:i64 = mulnsw 8:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 8:i32, %3
result %7
%0 = block 2
%1:i8 = var
%2:i32 = sext %1
%3:i1 = eq 98:i32, %2
%4:i1 = phi %0, 1:i1, %3
%5:i32 = zext %4
%6:i1 = ne 0:i32, %5
infer %6
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 63:i32, %1
infer %2
%3:i1 = eq 63:i8, %0
result %3
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = and 127:i64, %10
infer %11 (demandedBits=0000000000000000000000000000000000000000000000000000000001111111)
result 127:i64
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3
%9:i32 = trunc %8 (hasExternalUses)
%10:i33 = umul.with.overflow 1:i32, %9 (hasExternalUses)
%11:i32 = extractvalue %10, 0:i32
%12:i32 = sub %5, %11
%13:i1 = ult %5, %12
%14:i32 = add %5, %11
%15:i1 = ult %14, %5
%16:i1 = select 1:i1, %13, %15
%17:i1 = ult 4294967295:i64, %8
%18:i1 = or %16, %17
infer %18
result 0:i1
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483648))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i32 = var
%3:i64 = sext %2
%4:i1 = sle %1, %3
pc %4 0:i1
%5 = block 1
%6:i32 = phi %5, %2
infer %6
result %2
%0:i64 = var
%1:i1 = ne 0:i64, %0
%2:i1 = xor 1:i1, %1
infer %2
%3:i1 = eq 0:i64, %0
result %3
%0:i32 = zext 0:i8
%1:i32 = shlnw %0, 8:i32
infer %1 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0 = block 2
%1 = block 12
%2:i8 = var
%3:i32 = zext %2
%4:i8 = var
%5:i32 = sext %4
%6:i32 = add %3, %5
%7:i8 = trunc %6
%8:i32 = zext %2
%9:i8 = var
%10:i32 = sext %9
%11:i32 = add %8, %10
%12:i8 = trunc %11
%13:i8 = phi %1, 98:i8, %7, 99:i8, 99:i8, 98:i8, %2, 98:i8, 98:i8, %12, 99:i8, 99:i8, 98:i8
%14:i32 = sext %13
%15:i1 = eq 98:i32, %14
%16:i1 = phi %0, 1:i1, %15
%17:i32 = zext %16
%18:i1 = ne 0:i32, %17
infer %18
result %16
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 34:i32, %1
infer %2
%3:i1 = eq 34:i8, %0
result %3
%0 = block 3
%1:i8 = var
%2:i8 = phi %0, 0:i8, 4:i8, %1
%3:i32 = zext %2
%4:i1 = sle 4:i32, %3
infer %4
%5 = block 3
%6:i8 = phi %5, 0:i8, 4:i8, %1
%7:i1 = ult 3:i8, %6
result %7
%0 = block 3
%1:i16 = var
%2:i16 = var
%3:i32 = zext %2
%4:i32 = and 4294965215:i32, %3
%5:i16 = trunc %4
%6:i16 = var
%7:i16 = phi %0, %1, %5, %6
%8:i32 = zext %7
%9:i32 = and 4294967293:i32, %8
%10:i16 = trunc %9
infer %10 (demandedBits=1111111111101111)
%11 = block 3
%12:i16 = phi %11, %1, %5, %6
%13:i16 = and 65517:i16, %12
result %13
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 47:i32, %1
infer %2
%3:i1 = eq 47:i8, %0
result %3
%0:i32 = var
%1:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1101) (nonZero)
%2:i64 = var (nonZero)
%3:i64 = sub %1, %2
%4:i32 = trunc %3
%5:i32 = subnsw %0, %4
%6:i1 = slt 0:i32, %5
infer %6
%7:i1 = slt %4, %0
result %7
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 0:i1
%5 = block 1
%6:i32 = phi %5, %1
%7:i32 = mul 37:i32, %6
%8:i64 = zext %7
%9:i32 = trunc %8
%10:i32 = urem %9, 124:i32
infer %10
%11 = block 1
%12:i32 = phi %11, %1
%13:i32 = mul 37:i32, %12
%14:i32 = urem %13, 124:i32
result %14
%0:i32 = var
%1:i32 = mulnsw 5:i32, %0 (hasExternalUses)
%2:i64 = sext %1
%3:i64 = mulnsw 48:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 240:i32, %0
result %5
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i1 = slt 0:i32, %1
pc %2 1:i1
%3:i32 = add 4294967295:i32, %1
%4:i64 = zext %3
%5:i64 = addnw 1:i64, %4
infer %5 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %0
%0:i64 = var (knownBits=00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (signBits=32) (range=[0,4294967295))
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = zext %1
%3:i64 = mulnw 24:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 24:i32, %1
result %5
%0:i32 = var
%1:i1 = sle 0:i32, %0
pc %1 1:i1
%2:i64 = sext %0
%3:i1 = ule 64:i64, %2
infer %3
%4:i1 = ult 63:i32, %0
result %4
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967039:i32, %1
%3:i16 = var
%4:i32 = zext %3 (hasExternalUses)
%5:i32 = and 256:i32, %4
%6:i16 = trunc %5
%7:i32 = zext %6
%8:i32 = or %2, %7
infer %8 (demandedBits=00000000000000001111111111111111)
%9:i32 = add %5, %2
result %9
%0:i32 = var
%1:i32 = and 127:i32, %0 (hasExternalUses)
%2:i32 = addnw 1:i32, %1
%3:i8 = trunc %2
%4:i32 = sext %3
%5:i32 = ashr %4, 1:i32
%6:i1 = slt 0:i32, %5
infer %6
%7:i1 = slt 1:i8, %3
result %7
%0:i32 = var
%1:i32 = lshr %0, 1:i32
%2:i1 = eq 0:i32, %1
infer %2
%3:i1 = ult %0, 2:i32
result %3
%0 = block 2
%1 = block 2
%2:i32 = select 0:i1, 16:i32, 2:i32
%3:i32 = or 32:i32, %2
%4:i32 = phi %1, %3, 2:i32
%5:i32 = or 64:i32, %4
%6:i32 = select 0:i1, 128:i32, 64:i32
%7:i32 = or %4, %6
%8:i32 = phi %0, %5, %7
infer %8 (demandedBits=00000000000000001111111111111111)
result %5
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = and 127:i64, %11
%13:i64 = or 128:i64, %12
%14:i8 = trunc %13
infer %14
result 255:i8
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, %1
%3:i8 = var
%4:i32 = zext %3
%5:i32 = shlnuw %4, 24:i32
%6:i8 = var
%7:i32 = zext %6
%8:i32 = shlnw %7, 16:i32
%9:i32 = or %5, %8
%10:i8 = var
%11:i32 = zext %10
%12:i32 = shlnw %11, 8:i32
%13:i32 = or %9, %12
%14:i8 = var
%15:i32 = zext %14
%16:i32 = or %13, %15
%17:i32 = phi %0, %16, %16
%18:i32 = subnsw %17, 1:i32 (hasExternalUses)
%19:i1 = slt %2, %18
pc %19 1:i1
%20:i32 = mulnsw 4:i32, %17
infer %20
%21:i32 = mul 4:i32, %16
result %21
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 105:i32
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 105:i8, %0
result %4
%0:i32 = var
%1:i64 = zext %0
%2:i64 = mulnw 16:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 16:i32, %0
result %4
%0:i8 = var (range=[1,0))
%1:i32 = zext %0
%2:i1 = eq 39:i32, %1
infer %2
%3:i1 = eq 39:i8, %0
result %3
%0 = block 2
%1:i8 = var
%2:i8 = phi %0, %1, 100:i8
%3:i32 = zext %2
%4:i32 = subnsw %3, 97:i32
%5:i32 = addnsw 138:i32, %4
%6:i8 = trunc %5
infer %6
%7 = block 2
%8:i8 = phi %7, %1, 100:i8
%9:i8 = add 41:i8, %8
result %9
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32768))
%1:i16 = var
%2:i32 = sext %1
%3:i1 = slt 0:i32, %2
%4:i32 = select %3, %2, 0:i32
%5:i64 = zext %4
%6:i1 = ne %0, %5
pc %6 1:i1
%7 = block 1
%8:i64 = phi %7, %0
%9:i32 = trunc %8 (hasExternalUses)
%10:i1 = sle 0:i32, %9
pc %10 1:i1
%11:i64 = zext %9
infer %11
result %0
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i1 = sle 0:i32, %0
pc %1 1:i1
%2:i1 = sle 32:i32, %0
%3:i32 = select %2, 4294967295:i32, 0:i32
infer %3
%4:i32 = sext %2
result %4
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i32 = var
%2:i64 = zext %1
%3:i1 = eq %0, %2
pc %3 0:i1
%4:i32 = var
%5:i32 = trunc %0 (hasExternalUses)
%6:i32 = shlnuw 1:i32, %5
%7:i32 = and %4, %6
%8:i1 = ne 0:i32, %7
pc %8 0:i1
%9:i1 = eq 4294967295:i32, %4
infer %9
result 0:i1
%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
infer %4 (demandedBits=01111111111111111111111111111111)
result %3
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
infer %5 (demandedBits=00000000000000000000000011111111)
result %4
%0:i32 = var
%1:i32 = shl %0, 8:i32
%2:i64 = zext %1
%3:i64 = or 0:i64, %2
%4:i64 = and 4294967295:i64, %3
%5:i64 = or 280375465082880:i64, %4
infer %5
%6:i64 = add 280375465082880:i64, %2
result %6
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = var
%4:i1 = eq %0, %3
pc %4 0:i1
%5:i32 = var
%6:i32 = shl 1:i32, %0
%7:i32 = and %5, %6
%8:i1 = ne 0:i32, %7
pc %8 0:i1
%9:i1 = eq 4294967295:i32, %5
infer %9
result 0:i1
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = addnw 1:i32, %1
%3:i32 = phi %0, %2
%4:i1 = slt 0:i32, %3
pc %4 1:i1
%5:i64 = zext %3
infer %5 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%6:i64 = sext %2
result %6
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 4:i32, %1
%3:i64 = sext %2
infer %3
result 4:i64
%0:i32 = zext 1:i1
%1:i8 = trunc %0 (hasExternalUses)
%2:i32 = zext %1
%3:i1 = ne 0:i32, %2
infer %3
result 1:i1
%0:i32 = var
%1:i1 = slt %0, 0:i32
pc %1 0:i1
%2:i32 = var
%3:i1 = slt %2, %0
pc %3 1:i1
%4 = block 1
%5:i32 = phi %4, %2
infer %5
result %2
%0:i16 = var
%1:i16 = add 65535:i16, %0 (hasExternalUses)
%2:i32 = sext %1
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 1:i16, %0
result %4
%0:i32 = var
%1:i32 = ashr %0, 8:i32
%2:i32 = and 255:i32, %1
infer %2 (demandedBits=00000000000000000000000011111111)
result %1
%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i1 = ne 0:i32, %2
%4:i1 = phi %0, 1:i1, %3
%5:i32 = zext %4
%6:i8 = trunc %5
infer %6
%7:i8 = zext %4
result %7
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i32 = subnsw %1, 1:i32
infer %2
result %0
%0 = block 5
%1 = block 2
%2:i32 = var
%3:i32 = var (range=[-2147483648,2147483647))
%4:i32 = phi %1, %2, %3
%5:i32 = phi %0, %4, %4, %4, %4, %4
%6:i32 = shlnuw 1:i32, %5
infer %6
%7 = block 2
%8:i32 = phi %7, %2, %3
%9:i32 = shl 1:i32, %8
result %9
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = zext %1
%3:i64 = addnw 32:i64, %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%4:i64 = add 32:i64, %0
result %4
%0:i32 = shlnw 1:i32, 1:i32
infer %0
result 2:i32
%0:i16 = var
%1:i32 = zext %0
%2:i16 = trunc %1
%3:i16 = udiv %2, 5:i16
%4:i32 = zext %3
infer %4
%5:i32 = udiv %1, 5:i32
result %5
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967293:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 16:i32, %4
%6:i16 = trunc %5
infer %6
%7:i16 = or 16:i16, %3
result %7
%0:i32 = var
%1:i1 = slt %0, 0:i32
%2:i32 = zext %1
%3:i8 = trunc %2
infer %3
%4:i8 = zext %1
result %4
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = and 2:i32, %4
%6:i1 = ne 0:i32, %5
infer %6
%7:i1 = eq %4, %3
result %7
%0:i32 = var
%1:i1 = sle 0:i32, %0
pc %1 1:i1
%2:i64 = zext %0
%3:i1 = ule 64:i64, %2
infer %3
%4:i1 = ult 63:i32, %0
result %4
%0:i32 = var
%1:i32 = and 16:i32, %0
%2:i1 = ne 0:i32, %1
%3:i1 = xor 1:i1, %2
%4:i32 = zext %3
infer %4
%5:i32 = ashr 1:i32, %1
result %5
%0:i32 = var
%1:i8 = trunc %0 (hasExternalUses)
%2:i32 = sext %1
infer %2 (demandedBits=00000000000000000000000011111111)
result %0
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i32 = addnw 0:i32, %1
%3:i32 = addnsw 1:i32, %2
%4:i32 = addnsw 2:i32, %3
infer %4
%5:i32 = add 3:i32, %1
result %5
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 105:i32, %1
infer %2
%3:i1 = eq 105:i8, %0
result %3
%0 = block 1
%1:i64 = var (nonZero) (range=[3,0))
%2:i64 = phi %0, %1
%3:i32 = trunc %2
infer %3
%4:i32 = trunc %1
result %4
%0:i32 = zext 1:i1
%1:i8 = trunc %0
infer %1
result 1:i8
%0:i32 = var
%1:i32 = var
%2:i1 = sle %0, %1
pc %2 1:i1
%3:i64 = sext %0
%4:i64 = mul 48:i64, %3
%5:i64 = mul 2:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 96:i32, %0
result %7
%0:i32 = lshr 0:i32, 24:i32
%1:i8 = trunc %0
infer %1
result 0:i8
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 114:i32, %1
infer %2
%3:i1 = eq 114:i8, %0
result %3
%0:i64 = var (knownBits=0000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (signBits=8) (range=[0,72057594037927936))
%1:i64 = and 127:i64, %0
infer %1 (demandedBits=0000000000000000000000000000000000000000000000000000000001111111)
result %0
%0:i32 = var
%1:i8 = trunc %0 (hasExternalUses)
%2:i32 = zext %1
%3:i8 = trunc %2
infer %3
result %1
%0:i64 = var
%1:i64 = var
%2:i1 = ule %0, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
result %2
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, 0:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i8 = trunc %2
infer %4
%5:i8 = trunc %1
result %5
%0:i1 = ult 0:i64, 32:i64
infer %0
result 1:i1
%0:i8 = var (range=[1,0))
%1:i32 = zext %0
%2:i1 = sle 192:i32, %1
infer %2
%3:i1 = ult 191:i8, %0
result %3
%0 = block 2
%1 = block 3
%2:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%3:i64 = addnw 1:i64, %2
%4:i32 = trunc %3
%5:i32 = trunc %2
%6:i32 = phi %1, %4, %5, 0:i32
%7:i32 = phi %0, 4293967296:i32, %6
%8:i1 = sle 0:i32, %7
pc %8 1:i1
%9:i32 = var
%10:i32 = shlnuw 1:i32, %7 (hasExternalUses)
%11:i32 = and %9, %10
%12:i1 = eq 0:i32, %11
pc %12 1:i1
%13:i64 = zext %7
infer %13
%14:i64 = sext %6
result %14
%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
%5:i32 = shlnuw %4, 1:i32
%6:i32 = or 0:i32, %5
%7:i32 = and 4294967294:i32, %6
infer %7
%8:i32 = add %3, %3
result %8
%0:i64 = var
%1 = block 4
%2 = block 2
%3:i64 = var
%4 = block 2
%5:i64 = var
%6:i64 = var
%7:i64 = phi %4, %5, %6
%8:i64 = phi %2, %3, %7
%9 = block 2
%10 = block 2
%11:i64 = var
%12:i64 = phi %10, %11, %0
%13:i64 = phi %9, %8, %12
%14 = block 4
%15:i64 = var
%16:i64 = var
%17:i64 = phi %14, %15, %16, %16, %16
%18:i64 = phi %1, %8, %13, %13, %17
%19:i1 = ule %0, %18
%20:i32 = zext %19
%21:i1 = ne 0:i32, %20
infer %21
result %19
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4:i32
%3:i32 = add 4294967295:i32, %2
%4:i1 = slt %3, 0:i32
%5:i32 = select %4, %3, 0:i32
%6:i32 = sub %3, %5
infer %6
%7 = block 2
%8:i32 = phi %7, %1, 4:i32
%9:i32 = add 4294967295:i32, %8
%10:i1 = slt %9, 0:i32
%11:i32 = select %10, 0:i32, %9
result %11
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = var
%4:i1 = slt %0, %3
pc %4 1:i1
%5:i1 = sle 0:i32, %0
pc %5 1:i1
%6:i32 = mulnw 0:i32, %3
%7:i32 = addnw %0, %6
%8:i64 = sext %7
infer %8
%9:i64 = sext %0
result %9
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i64 = urem %3, 8:i64
%5:i64 = sub %3, %4
infer %5
%6:i64 = and 120:i64, %2
result %6
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 13:i32, %1
%3:i1 = eq 0:i32, %2
pc %3 1:i1
%4:i32 = and 8:i32, %1
%5:i1 = ne 0:i32, %4
pc %5 0:i1
%6:i32 = and 4:i32, %1
infer %6
result 0:i32
%0 = block 4
%1:i32 = var
%2:i32 = phi %0, %1, %1, %1, %1
%3:i1 = slt 0:i32, %2
pc %3 1:i1
%4:i32 = addnsw 4294967295:i32, %2
%5:i1 = ult %4, 31:i32
%6:i32 = select %5, %4, 31:i32
%7:i32 = addnw 1:i32, %6
infer %7
%8 = block 4
%9:i32 = phi %8, %1, %1, %1, %1
%10:i32 = addnsw 4294967295:i32, %9
%11:i1 = ult %10, 31:i32
%12:i32 = select %11, %9, 32:i32
result %12
%0:i8 = var
%1:i32 = zext %0
%2:i1 = slt %1, 2:i32
infer %2
%3:i1 = ult %0, 2:i8
result %3
%0:i32 = var
%1:i32 = and 4294967294:i32, %0
%2:i32 = or 1:i32, %1 (hasExternalUses)
%3:i32 = and 1:i32, %2
%4:i64 = var
%5:i32 = trunc %4
%6:i32 = and 2147483647:i32, %5
%7:i32 = shl %6, 1:i32
%8:i32 = or %3, %7
infer %8
%9:i32 = add 1:i32, %7
result %9
%0:i32 = var
%1:i32 = subnsw %0, 1:i32
%2:i32 = sdiv %1, 8:i32
%3:i32 = mulnsw 8:i32, %2
%4:i32 = addnsw 8:i32, %3
%5:i64 = sext %4
%6:i64 = mulnsw 40:i64, %5
%7:i32 = trunc %6
infer %7
%8:i32 = mul 40:i32, %4
result %8
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 8:i32, %1
%3:i1 = eq 8:i32, %2
%4:i32 = zext %3
infer %4
%5:i32 = ashr %2, 3:i32
result %5
%0:i16 = var
%1:i32 = zext %0
%2:i32 = addnsw 2:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = add 2:i16, %0
result %4
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967293:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 16:i32, %4
infer %5 (demandedBits=00000000000000001111111111111111)
%6:i32 = or 16:i32, %2
result %6
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = var
%4:i32 = and 1:i32, %3
%5:i32 = phi %2, 0:i32, %4
%6:i32 = phi %1, 0:i32, %5
%7:i1 = ne 0:i32, %6
%8:i1 = phi %0, 0:i1, %7
%9:i32 = zext %8
%10:i8 = trunc %9
infer %10
%11:i8 = zext %8
result %11
%0:i32 = zext 0:i8
%1:i32 = shl %0, 8:i32
infer %1 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i32 = var (nonZero) (signBits=26) (range=[2,51))
%1:i32 = and 32:i32, %0
%2:i1 = ne 0:i32, %1
infer %2
%3:i1 = ult 31:i32, %0
result %3
%0:i32 = var (knownBits=0000000000000000xxxxxxxxxxxxxxxx) (nonNegative) (signBits=16) (range=[0,65536))
%1:i32 = and 4294967231:i32, %0
%2:i16 = trunc %1
%3:i32 = zext %2
%4:i32 = or 128:i32, %3
%5:i16 = trunc %4
infer %5
%6:i16 = or 128:i16, %2
result %6
%0:i32 = var (range=[0,100))
%1:i8 = trunc %0 (hasExternalUses)
%2:i8 = urem %1, 10:i8
%3:i32 = zext %2
%4:i32 = addnw 48:i32, %3
%5:i8 = trunc %4
infer %5
%6:i8 = add 48:i8, %2
result %6
%0 = block 2
%1:i32 = var
%2:i32 = addnsw 2:i32, %1
%3:i32 = phi %0, %2, %2
%4:i64 = zext %3
infer %4
%5:i64 = zext %2
result %5
%0:i32 = var
%1:i32 = lshr %0, 1:i32
%2:i32 = shlnuw %1, 1:i32
infer %2
%3:i32 = and 4294967294:i32, %0
result %3
%0:i8 = var
%1:i32 = zext %0
%2:i32 = or 0:i32, %1
infer %2 (demandedBits=00000000000000000000000011111111)
result %1
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 1:i32, %1
%3:i1 = eq 0:i32, %2
%4:i32 = zext %3
infer %4
%5:i32 = sub 1:i32, %2
result %5
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 0:i1
%5 = block 1
%6:i32 = phi %5, %1
%7:i32 = mul 37:i32, %6
infer %7
%8:i32 = mul 37:i32, %1
result %8
%0:i8 = var
%1:i1 = ne 0:i8, %0
pc %1 1:i1
%2:i32 = sext %0
%3:i1 = ne 59:i32, %2
pc %3 1:i1
%4:i1 = ne 32:i32, %2
pc %4 1:i1
%5:i1 = ne 13:i32, %2
pc %5 1:i1
%6:i1 = ne 9:i32, %2
pc %6 1:i1
%7:i1 = ne 10:i32, %2
pc %7 1:i1
%8:i1 = ne 12:i32, %2
pc %8 1:i1
%9:i1 = ne 47:i32, %2
pc %9 1:i1
%10:i1 = ne 45:i32, %2
pc %10 1:i1
%11:i1 = ne 91:i32, %2
pc %11 1:i1
%12:i1 = ne 96:i32, %2
pc %12 1:i1
%13:i1 = ne 34:i32, %2
pc %13 1:i1
%14:i1 = ne 39:i32, %2
pc %14 1:i1
%15:i32 = zext %0 (hasExternalUses)
%16:i32 = and 128:i32, %15
%17:i1 = ne 0:i32, %16
infer %17
%18:i1 = ult 127:i8, %0
result %18
%0 = block 2
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = addnw 1:i32, %1
%3:i32 = phi %0, %2, 0:i32
%4:i1 = slt 0:i32, %3
pc %4 1:i1
%5:i64 = zext %3
infer %5 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%6:i64 = sext %2
result %6
%0 = block 2
%1 = block 3
%2 = block 1
%3:i32 = var
%4:i32 = phi %2, %3
%5 = block 1
%6:i32 = phi %5, %3
%7 = block 1
%8:i32 = phi %7, %3
%9:i32 = phi %1, %4, %6, %8
%10 = block 1
%11:i32 = phi %10, %3
%12:i32 = phi %0, %9, %11
infer %12
result %3
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i32 = and 4294967294:i32, %1
infer %2
result 0:i32
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = select 1:i1, 1:i32, 2:i32
%2:i32 = addnsw %0, %1
infer %2
%3:i32 = add 1:i32, %0
result %3
%0:i32 = var
%1:i1 = ne 10:i32, %0
pc %1 1:i1
%2:i1 = ne 11:i32, %0
pc %2 1:i1
%3:i1 = ne 0:i32, %0
pc %3 1:i1
%4:i1 = ne 1:i32, %0
pc %4 1:i1
%5:i1 = ne 2:i32, %0
pc %5 1:i1
%6:i1 = ne 3:i32, %0
pc %6 1:i1
%7:i1 = ne 4:i32, %0
pc %7 1:i1
%8:i1 = ne 5:i32, %0
pc %8 1:i1
%9:i1 = ne 6:i32, %0
pc %9 1:i1
%10:i1 = ne 7:i32, %0
pc %10 1:i1
%11:i1 = ne 8:i32, %0
pc %11 1:i1
%12:i1 = ne 9:i32, %0
pc %12 1:i1
%13:i32 = and 1:i32, %0
%14:i1 = ne 0:i32, %13
infer %14
%15:i1 = trunc %0
result %15
%0:i16 = var
%1:i32 = zext %0
%2:i32 = or 256:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = or 256:i16, %0
result %4
%0 = block 3
%1:i64 = var
%2:i64 = phi %0, %1, %1, %1
infer %2
result %1
%0 = block 2
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2 = block 2
%3 = block 2
%4:i64 = var
%5:i32 = var
%6:i64 = sext %5
%7:i64 = addnsw %4, %6
%8:i32 = trunc %7
%9:i32 = var
%10:i32 = phi %3, %8, %9
%11:i32 = mulnsw 2:i32, %10
%12:i32 = phi %2, %11, 0:i32
%13:i32 = phi %0, %1, %12
%14:i32 = select 1:i1, 1:i32, 2:i32
%15:i32 = addnsw %13, %14
infer %15
%16 = block 2
%17 = block 2
%18 = block 2
%19:i32 = phi %18, %8, %9
%20:i32 = mulnsw 2:i32, %19
%21:i32 = phi %17, %20, 0:i32
%22:i32 = phi %16, %1, %21
%23:i32 = add 1:i32, %22
result %23
%0:i32 = select 1:i1, 4:i32, 3:i32
%1:i8 = trunc %0
infer %1
result 4:i8
%0:i64 = var (range=[0,2147483647))
%1:i1 = eq 1:i64, %0
pc %1 0:i1
%2 = block 1
%3:i64 = phi %2, %0
%4:i32 = trunc %3
infer %4
%5:i32 = trunc %0
result %5
%0:i32 = var
%1:i32 = mul 2:i32, %0
%2:i64 = zext %1
%3:i64 = mul 8:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 16:i32, %0
result %5
%0:i32 = var
%1:i1 = eq 145:i32, %0
pc %1 0:i1
%2 = block 1
%3:i32 = phi %2, %0
%4:i1 = eq 112:i32, %3
pc %4 0:i1
%5:i1 = eq 98:i32, %3
infer %5
%6:i1 = eq 98:i32, %0
result %6
%0 = block 2
%1 = block 1
%2:i64 = var
%3:i64 = addnuw 1:i64, %2
%4:i64 = phi %1, %3
%5:i32 = trunc %4
%6:i32 = phi %0, %5, 1:i32
%7:i1 = slt 0:i32, %6
pc %7 1:i1
%8:i32 = addnsw 4294967295:i32, %6
%9:i64 = zext %8
%10:i64 = addnw 1:i64, %9
infer %10 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%11:i64 = sext %6
result %11
%0:i32 = var (knownBits=00000000000000000000000000x00010) (nonNegative) (nonZero) (signBits=26) (range=[2,35))
%1:i32 = and 32:i32, %0
%2:i1 = ne 0:i32, %1
infer %2
%3:i1 = eq 34:i32, %0
result %3
%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i32 = var
%4:i32 = lshr %3, 1:i32
%5:i64 = zext %4
%6:i64 = addnsw %2, %5
%7:i32 = trunc %6
%8:i32 = and 2147483647:i32, %7
%9:i32 = shlnuw %8, 1:i32
%10:i32 = or 0:i32, %9
%11:i32 = lshr %10, 1:i32
infer %11
result %8
%0:i32 = var
%1:i32 = and 2147483647:i32, %0
%2:i32 = shlnuw %1, 1:i32
infer %2 (demandedBits=11111111111111111111111111111110)
%3:i32 = add %0, %0
result %3
%0:i64 = var
%1:i32 = trunc %0
%2:i32 = and 2147483647:i32, %1
%3:i32 = shlnuw %2, 1:i32
%4:i32 = or 0:i32, %3
infer %4 (demandedBits=11111111111111111111111111111110)
%5:i32 = add %1, %1
result %5
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = addnw %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 0:i1
%7:i1 = ult %5, 128:i32
pc %7 1:i1
%8:i8 = trunc %5
infer %8
result %3
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
%3:i8 = var
%4:i32 = sext %3 (hasExternalUses)
%5:i1 = ne %1, %4
%6:i1 = and %2, %5
%7:i8 = var
%8:i32 = sext %7
%9:i1 = ne %1, %8
%10:i1 = and %6, %9
%11:i8 = var
%12:i32 = sext %11
%13:i1 = ne %1, %12
%14:i1 = and %10, %13
pc %14 0:i1
%15 = block 1
%16:i8 = phi %15, %0
%17:i32 = zext %16
%18:i1 = eq 255:i32, %17
pc %18 0:i1
%19:i32 = sext %16
%20:i1 = eq %4, %19
infer %20
%21:i1 = eq %0, %3
result %21
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = and 1:i32, %4
%6:i1 = eq 0:i32, %5
%7:i32 = zext %6
infer %7
%8 = block 2
%9:i32 = phi %8, 1:i32, 0:i32
%10:i32 = sub 1:i32, %9
result %10
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i32 = phi %0, %1
%3:i1 = sle 0:i32, %2
infer %3
result 1:i1
%0 = block 1
%1:i32 = var
%2:i32 = phi %0, %1
%3:i32 = lshr %2, 16:i32
infer %3 (demandedBits=00000000000000000000000011111111)
%4:i32 = ashr %1, 16:i32
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
infer %5 (demandedBits=00000000000000000000000011111111)
result %4
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 0:i1
%5:i32 = mul 37:i32, %1
%6:i64 = zext %5
%7:i32 = trunc %6
infer %7
result %5
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i32 = ashr %5, 8:i32
%7:i8 = trunc %6
infer %7
result %0
%0:i32 = var
%1:i64 = zext %0
%2:i64 = or 0:i64, %1
infer %2 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %1
%0:i32 = var
%1 = block 5
%2:i8 = var
%3:i32 = sext %2
%4:i8 = var
%5:i32 = sext %4
%6:i32 = addnsw %3, %5
%7:i8 = trunc %6
%8:i8 = phi %1, 98:i8, %7, 99:i8, 99:i8, 98:i8
%9:i32 = sext %8
%10:i32 = or %0, %9
%11:i8 = trunc %10
%12:i32 = zext %11
infer %12 (demandedBits=00000000000000000000000011111111)
result %10
%0:i32 = select 0:i1, 4:i32, 3:i32
infer %0 (demandedBits=00000000000000000000000011111111)
result 3:i32
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i32 = mulnsw 3:i32, %1
%3:i64 = sext %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%4:i64 = mul 3:i64, %0
result %4
%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i32 = var
%4:i32 = lshr %3, 1:i32
%5:i64 = zext %4
%6:i64 = addnsw %2, %5
%7:i32 = trunc %6
%8:i32 = and 2147483647:i32, %7
%9:i32 = shlnuw %8, 1:i32
%10:i32 = or 0:i32, %9
infer %10 (demandedBits=11111111111111111111111111111110)
%11:i32 = add %7, %7
result %11
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i32 = phi %0, %1
%3:i1 = sle 0:i32, %2
pc %3 1:i1
%4:i32 = var
%5:i32 = shlnuw 1:i32, %2
%6:i1 = sle 32:i32, %2
%7:i32 = select %6, 4294967295:i32, 0:i32
%8:i32 = or %5, %7
%9:i32 = or %4, %8
infer %9
%10:i32 = or %4, %5
result %10
%0:i32 = var
%1:i32 = add 1:i32, %0 (hasExternalUses)
%2:i64 = zext %1
%3:i1 = eq 124:i64, %2
infer %3
%4:i1 = eq 123:i32, %0
result %4
%0 = block 2
%1 = block 3
%2:i32 = phi %1, 34:i32, 2:i32, 2:i32
%3:i32 = or 64:i32, %2
%4:i32 = or 64:i32, %2
%5:i32 = phi %0, %3, %4
%6:i16 = trunc %5
infer %6
%7:i16 = trunc %4
result %7
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 4294966911:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
infer %4 (demandedBits=00000000000000001111111110111111)
result %2
%0 = block 2
%1:i32 = var
%2:i8 = trunc %1
%3:i32 = zext %2
%4:i32 = phi %0, %3, %3
%5:i1 = eq 1:i32, %4
infer %5
%6:i1 = eq 1:i8, %2
result %6
%0:i32 = var
%1:i32 = lshr %0, 1:i32
%2:i32 = and 2147483647:i32, %1
infer %2 (demandedBits=01111111111111111111111111111111)
result %1
%0:i8 = var
%1:i1 = ne 0:i8, %0
%2:i1 = xor 1:i1, %1
%3:i32 = select %2, 1:i32, 2:i32
infer %3
%4:i32 = select %1, 2:i32, 1:i32
result %4
%0:i32 = var
%1:i32 = var
%2:i1 = eq %0, %1
%3:i16 = var
%4:i32 = zext %3
%5:i32 = sdiv 1073741824:i32, %4
%6:i32 = addnw 1:i32, %5 (hasExternalUses)
%7:i1 = eq %0, %6
%8:i1 = or %2, %7
pc %8 0:i1
%9 = block 1
%10:i32 = phi %9, %0
%11:i32 = var
%12:i1 = ule %10, %11
pc %12 1:i1
%13:i1 = eq 0:i32, %10
infer %13
%14:i1 = eq 0:i32, %0
result %14
%0:i32 = var
%1:i1 = eq 145:i32, %0
pc %1 0:i1
%2 = block 1
%3:i32 = phi %2, %0
infer %3
result %0
%0 = block 2
%1 = block 12
%2:i8 = var
%3:i32 = sext %2
%4:i8 = var
%5:i32 = sext %4
%6:i32 = addnsw %3, %5
%7:i8 = trunc %6
%8:i32 = sext %2
%9:i8 = var
%10:i32 = sext %9
%11:i32 = addnsw %8, %10
%12:i8 = trunc %11
%13:i8 = phi %1, 98:i8, %7, 99:i8, 99:i8, 98:i8, %2, 98:i8, 98:i8, %12, 99:i8, 99:i8, 98:i8
%14:i32 = sext %13
%15:i1 = eq 98:i32, %14
%16:i1 = phi %0, 1:i1, %15
%17:i32 = zext %16
%18:i1 = ne 0:i32, %17
infer %18
result %16
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = and 127:i64, %11
%13:i64 = or 128:i64, %12
infer %13 (demandedBits=0000000000000000000000000000000000000000000000000000000011111111)
result 255:i64
%0 = block 1
%1:i32 = var
%2:i32 = var
%3:i32 = and %1, %2
%4:i32 = phi %0, %3
%5:i32 = and 4194304:i32, %4
infer %5
%6:i32 = and 4194304:i32, %3
result %6
%0:i32 = var
%1:i32 = shl %0, 8:i32
%2:i64 = zext %1
%3:i64 = or 0:i64, %2
%4:i64 = and 4294967295:i64, %3
infer %4 (demandedBits=1111111111111111000000001111111111111111111111111111111111111111)
result %2
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1 (hasExternalUses)
%3:i32 = addnsw %0, %2
%4:i1 = slt 26:i32, %3
pc %4 1:i1
%5 = block 1
%6:i32 = phi %5, %0
%7:i64 = sext %6
infer %7
%8:i64 = sext %0
result %8
%0:i32 = var
%1:i64 = sext %0
%2:i1 = ult %1, 63:i64
infer %2
%3:i1 = ult %0, 63:i32
result %3
%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 1:i32
%3:i32 = subnsw %2, 3:i32
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = phi %0, %4, %4
%6:i1 = slt 0:i32, %5
pc %6 1:i1
%7:i64 = zext %5
infer %7
%8:i64 = sext %4
result %8
%0:i32 = var (signBits=25) (range=[-128,128))
%1:i1 = ne 45:i32, %0
pc %1 1:i1
%2:i1 = ne 43:i32, %0
pc %2 1:i1
%3:i1 = ne 32:i32, %0
pc %3 1:i1
%4:i1 = ne 35:i32, %0
pc %4 1:i1
%5:i1 = ne 33:i32, %0
pc %5 1:i1
%6:i1 = ne 48:i32, %0
pc %6 1:i1
%7 = block 1
%8:i32 = phi %7, %0
%9:i1 = eq 42:i32, %8
pc %9 0:i1
%10:i1 = sle 48:i32, %8
infer %10
%11:i1 = slt 48:i32, %0
result %11
%0:i32 = var
%1:i32 = var
%2:i1 = eq %0, %1
pc %2 1:i1
%3:i32 = add 1:i32, %1 (hasExternalUses)
%4:i16 = var
%5:i32 = zext %4
%6:i32 = sdiv 1073741824:i32, %5
%7:i32 = addnsw 1:i32, %6
%8:i1 = eq %3, %7
infer %8
%9:i1 = eq %1, %6
result %9
%0:i32 = var (range=[1,5))
%1:i32 = add 4294967295:i32, %0
%2:i1 = slt %1, 0:i32
%3:i32 = select %2, %1, 0:i32
%4:i32 = sub %1, %3
infer %4
result %1
%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i1 = eq 0:i32, %2
%4:i32 = select %3, 16:i32, 2:i32
%5:i32 = or 32:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = and 32:i32, %6
%8:i1 = ne 0:i32, %7
pc %8 1:i1
%9 = block 2
%10:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%11:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (nonNegative) (range=[0,2147483647))
%12:i32 = phi %9, %10, %11
%13:i32 = var
%14:i32 = phi %0, %12, %13
%15:i1 = eq 1:i32, %2
%16:i32 = select %15, 1:i32, 2:i32
%17:i32 = addnsw %14, %16
infer %17
%18:i32 = add %12, %16
result %18
%0:i32 = var
%1:i32 = add 4294967295:i32, %0 (hasExternalUses)
%2:i32 = udiv %1, 8:i32
infer %2
%3:i32 = lshr %1, 3:i32
result %3
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i16 = var
%3:i32 = zext %2 (hasExternalUses)
%4:i32 = addnsw %0, %3
%5:i32 = addnsw 2:i32, %4
%6:i32 = var
%7:i16 = var
%8:i32 = zext %7
%9:i32 = addnw 2:i32, %8
%10:i32 = subnsw %6, %9 (hasExternalUses)
%11:i1 = sle %5, %10
pc %11 0:i1
%12 = block 1
%13:i32 = phi %12, %6
infer %13
result %6
%0:i16 = var
%1:i32 = zext %0
%2:i32 = subnsw %1, 2:i32
%3:i16 = trunc %2
infer %3
%4:i16 = add 65534:i16, %0
result %4
%0 = block 3
%1 = block 4
%2:i32 = var
%3:i32 = phi %1, %2, %2, %2, %2
%4:i32 = phi %0, %3, 0:i32, %3
%5:i1 = ne 0:i32, %4
pc %5 1:i1
%6:i32 = var
%7:i1 = slt %6, %4
infer %7
%8:i1 = slt %6, %2
result %8
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i1 = sle 0:i32, %0
pc %3 1:i1
%4:i32 = addnw 0:i32, %0
infer %4
result %0
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = and 4294967231:i32, %1
%5:i16 = trunc %4
%6:i32 = zext %5
%7:i32 = or 256:i32, %6
infer %7 (demandedBits=00000000000000001111111111111111)
%8:i32 = or 256:i32, %4
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnuw %1, 24:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %2, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i32 = or %6, %9
%11:i8 = var
%12:i32 = zext %11
%13:i32 = or %10, %12 (hasExternalUses)
%14:i8 = trunc %13
infer %14
result %11
%0:i32 = var
%1:i1 = slt %0, 128:i32
pc %1 0:i1
%2:i32 = and 4294965248:i32, %0
%3:i1 = eq 55296:i32, %2
pc %3 0:i1
%4:i32 = and 4294967294:i32, %0
%5:i1 = eq 65534:i32, %4
pc %5 0:i1
%6:i1 = ule %0, 65535:i32
pc %6 0:i1
%7:i32 = and 255:i32, %0
infer %7 (demandedBits=00000000000000000000000011111111)
result %0
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 110:i32, %1
infer %2
%3:i1 = eq 110:i8, %0
result %3
%0:i32 = var
%1:i64 = sext %0
%2:i1 = ult %1, 50:i64
infer %2
%3:i1 = ult %0, 50:i32
result %3
%0:i32 = var
%1:i32 = var
%2:i1 = sle %0, %1
pc %2 1:i1
%3:i64 = sext %0
%4:i64 = mulnsw 48:i64, %3
%5:i64 = mulnsw 2:i64, %4
infer %5 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%6:i64 = mul 96:i64, %3
result %6
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 4:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 0:i1
%4:i32 = and 8:i32, %1
%5:i1 = ne 0:i32, %4
pc %5 0:i1
%6:i32 = and 18:i32, %1
%7:i1 = ne 0:i32, %6
pc %7 1:i1
%8:i32 = or 2:i32, %1
%9:i16 = trunc %8
infer %9
%10:i16 = or 2:i16, %0
result %10
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967293:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
infer %4 (demandedBits=00000000000000001111111111101111)
result %2
%0 = block 2
%1 = block 2
%2:i8 = var
%3:i32 = zext %2
%4:i1 = eq 0:i32, %3
%5:i32 = select %4, 16:i32, 2:i32
%6:i32 = or 32:i32, %5
%7:i32 = phi %1, %6, %5
%8:i32 = or 64:i32, %7
%9:i64 = var
%10:i1 = eq 0:i64, %9
%11:i32 = select %10, 128:i32, 64:i32
%12:i32 = or %7, %11
%13:i32 = phi %0, %8, %12
%14:i16 = trunc %13 (hasExternalUses)
%15:i32 = zext %14
infer %15 (demandedBits=00000000000000000000100000000000)
result 0:i32
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 0:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
%5:i1 = eq 0:i8, %0
result %5
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 2:i32, %1
infer %2
%3:i1 = eq 2:i8, %0
result %3
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, %1, 0:i32, 0:i32
%3 = block 2
%4:i32 = var
%5:i32 = phi %3, %4, 7:i32
%6:i32 = phi %0, %5, 0:i32, 0:i32
%7:i32 = and %2, %6
infer %7
%8:i32 = and %5, %2
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i32 = subnsw %1, 99:i32
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 99:i8, %0
result %4
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3 (hasExternalUses)
%9:i32 = trunc %8 (hasExternalUses)
%10:i33 = umul.with.overflow 1:i32, %9 (hasExternalUses)
%11:i32 = extractvalue %10, 0:i32 (hasExternalUses)
%12:i32 = sub %5, %11
infer %12
result 0:i32
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = sle 48:i32, %1
%3:i1 = sle %1, 57:i32
%4:i1 = and %2, %3
pc %4 0:i1
%5 = block 1
%6:i8 = phi %5, %0
infer %6
result %0
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = var
%4:i32 = mulnw 1:i32, %3
%5:i32 = addnsw %0, %4
infer %5
%6:i32 = add %0, %3
result %6
%0 = block 5
%1 = block 2
%2:i32 = var
%3:i32 = var (range=[-2147483648,2147483647))
%4:i32 = phi %1, %2, %3
%5:i32 = phi %0, %4, %4, %4, %4, %4
infer %5
result %4
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i1 = slt 0:i32, %1
pc %2 1:i1
%3:i32 = add 4294967295:i32, %1
%4:i64 = zext %3
infer %4 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%5:i64 = add 4294967295:i64, %0
result %5
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i1 = eq 0:i32, %1
pc %2 1:i1
%3:i32 = lshr %0, 1:i32
%4:i32 = shlnuw %3, 1:i32
infer %4
result %0
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 102:i32
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i32 = subnsw %1, 115:i32
%5:i1 = eq 0:i32, %4
pc %5 0:i1
%6:i32 = subnsw %1, 99:i32
%7:i1 = eq 0:i32, %6
pc %7 0:i1
%8:i32 = subnsw %1, 101:i32
%9:i1 = eq 0:i32, %8
pc %9 0:i1
%10:i32 = subnsw %1, 108:i32
%11:i1 = eq 0:i32, %10
pc %11 0:i1
%12:i32 = subnsw %1, 105:i32
%13:i1 = eq 0:i32, %12
infer %13
%14:i1 = eq 105:i8, %0
result %14
%0 = block 4
%1:i32 = var
%2:i32 = phi %0, %1, 0:i32, 0:i32, 255:i32
%3 = block 2
%4:i32 = phi %3, 0:i32, 7:i32
%5:i32 = phi %0, %4, 0:i32, 0:i32, 0:i32
%6:i32 = and %2, %5
infer %6
%7:i32 = and %1, %5
result %7
%0:i32 = zext 0:i8
%1:i32 = shl %0, 8:i32
%2:i8 = var
%3:i32 = zext %2
%4:i32 = or %1, %3
infer %4 (demandedBits=00000000000000000000000011111111)
result %3
%0:i64 = var (range=[-2147483648,-9223372036854775808))
%1:i32 = var
%2:i32 = var
%3:i1 = slt %1, %2
%4:i32 = select %3, %2, %1 (hasExternalUses)
%5:i64 = sext %4
%6:i1 = ne %0, %5
pc %6 1:i1
%7 = block 1
%8:i64 = phi %7, %0
infer %8 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %0
%0:i8 = var
%1:i32 = zext %0
%2:i8 = var
%3:i32 = zext %2
%4:i32 = subnsw %1, %3
%5:i1 = eq 0:i32, %4
infer %5
%6:i1 = eq %0, %2
result %6
%0:i32 = lshr 0:i32, 16:i32
infer %0 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i32 = var
%1:i1 = slt %0, 1:i32
pc %1 0:i1
%2:i32 = var
%3:i1 = slt %2, %0
pc %3 1:i1
%4 = block 1
%5:i32 = phi %4, %0
infer %5
result %0
%0:i32 = var
%1:i1 = eq 17:i32, %0
pc %1 0:i1
%2 = block 1
%3:i32 = phi %2, %0
infer %3
result %0
%0:i16 = var
%1:i32 = zext %0
%2:i16 = trunc %1
%3:i16 = udiv %2, 5:i16
infer %3
%4:i16 = udiv %0, 5:i16
result %4
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i32 = var
%3:i32 = and 2147483647:i32, %2
%4:i32 = shl %3, 1:i32
%5:i32 = or %1, %4
infer %5 (demandedBits=11111111111111111111111111111110)
%6:i32 = add %2, %2
result %6
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = and 127:i64, %10
%12:i64 = or 128:i64, %11
%13:i8 = trunc %12
infer %13
result 255:i8
%0:i32 = var
%1:i64 = sext %0
%2:i1 = ult %1, 64:i64
infer %2
%3:i1 = ult %0, 64:i32
result %3
%0:i32 = var
%1:i32 = mul 37:i32, %0
%2:i64 = zext %1
%3:i32 = trunc %2
%4:i32 = urem %3, 124:i32
%5:i64 = zext %4
%6:i32 = trunc %5
infer %6
%7:i32 = urem %1, 124:i32
result %7
%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i32 = trunc %2
%4:i64 = zext %3
infer %4
%5:i64 = and 4294967295:i64, %2
result %5
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = addnsw %0, %2 (hasExternalUses)
%4:i64 = sext %3
%5:i1 = ult 170:i64, %4
pc %5 0:i1
%6 = block 1
%7:i32 = phi %6, %3
%8:i64 = sext %7 (hasExternalUses)
%9:i1 = ult %8, 170:i64
pc %9 0:i1
%10 = block 1
%11:i32 = phi %10, %7
infer %11
result 170:i32
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4:i32 = subnsw %3, 1:i32
%5 = block 2
%6:i32 = var (range=[0,2147483647))
%7:i32 = addnsw 4294967295:i32, %6
%8:i32 = phi %5, %7, %6
%9:i32 = phi %2, %4, %8
%10:i32 = phi %0, %1, %9
%11:i32 = addnsw 1:i32, %10
%12:i32 = mulnsw 4294967295:i32, %11
infer %12
%13 = block 2
%14 = block 2
%15 = block 2
%16:i32 = phi %15, %7, %6
%17:i32 = phi %14, %4, %16
%18:i32 = phi %13, %1, %17
%19:i32 = sub 4294967295:i32, %18
result %19
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 100:i32, %1
infer %2
%3:i1 = eq 100:i8, %0
result %3
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = sext %1
%3:i64 = addnsw 32:i64, %2
%4:i64 = addnsw 1:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = add 33:i32, %1
result %6
%0 = block 2
%1 = block 4
%2:i32 = var
%3:i32 = phi %1, %2, %2, %2, %2
%4 = block 1
%5:i32 = phi %4, %2
%6:i32 = phi %0, %3, %5
infer %6
result %2
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = addnsw %0, %2 (hasExternalUses)
%4:i64 = sext %3
%5:i1 = ult 170:i64, %4
pc %5 1:i1
%6 = block 1
%7:i32 = phi %6, %0
%8:i64 = sext %7
infer %8
%9:i64 = sext %0
result %9
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 104:i32, %1
infer %2
%3:i1 = eq 104:i8, %0
result %3
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 256:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = and 256:i16, %0
result %4
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
pc %2 0:i1
%3:i32 = var
%4:i32 = subnsw %3, %1 (hasExternalUses)
%5:i32 = addnsw 1:i32, %4 (hasExternalUses)
%6:i1 = sle 100:i32, %5
pc %6 1:i1
%7:i32 = addnsw 4294967295:i32, %5 (hasExternalUses)
%8:i1 = sle 0:i32, %7
infer %8
result 1:i1
%0:i8 = var
%1:i32 = zext %0
%2:i8 = var
%3:i32 = sext %2 (hasExternalUses)
%4:i32 = addnsw %1, %3
%5:i8 = trunc %4
infer %5
%6:i8 = add %0, %2
result %6
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 13:i32, %1
%3:i1 = eq 0:i32, %2
pc %3 1:i1
%4:i32 = and 8:i32, %1
%5:i1 = ne 0:i32, %4
pc %5 0:i1
%6:i32 = and 4:i32, %1
%7:i1 = ne 0:i32, %6
infer %7
result 0:i1
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4 (hasExternalUses)
%6:i32 = var (signBits=16) (range=[1,65536))
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i8 = var
%11:i32 = zext %10
%12:i32 = or %9, %11
%13:i32 = addnsw %6, %12 (hasExternalUses)
%14:i32 = addnsw 3:i32, %13
%15:i1 = sle %5, %14
pc %15 1:i1
%16:i1 = slt 0:i32, %5
pc %16 1:i1
%17:i32 = zext 0:i8
%18:i32 = shl %17, 8:i32
%19:i8 = var
%20:i32 = zext %19
%21:i32 = or %18, %20
%22:i32 = add %21, %5
infer %22 (demandedBits=00000000000000000000000011111111)
%23:i32 = add %4, %20
result %23
%0:i32 = var
%1:i1 = slt 0:i32, %0
pc %1 1:i1
%2:i32 = addnsw 4294967295:i32, %0 (hasExternalUses)
%3:i32 = addnsw 1:i32, %2
infer %3
result %0
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i8 = var
%3:i32 = sext %2
%4:i1 = eq %1, %3
pc %4 1:i1
%5:i1 = ne 48:i32, %1
pc %5 1:i1
%6:i1 = ne 49:i32, %1
pc %6 1:i1
%7:i1 = ne 50:i32, %1
pc %7 1:i1
%8:i1 = ne 51:i32, %1
pc %8 1:i1
%9:i1 = ne 52:i32, %1
pc %9 1:i1
%10:i1 = ne 53:i32, %1
pc %10 1:i1
%11:i1 = ne 54:i32, %1
pc %11 1:i1
%12:i1 = ne 55:i32, %1
pc %12 1:i1
%13:i1 = ne 56:i32, %1
pc %13 1:i1
%14:i1 = ne 57:i32, %1
pc %14 1:i1
%15:i1 = eq 43:i32, %1
pc %15 0:i1
%16:i1 = eq 45:i32, %1
%17:i32 = zext %16
%18:i1 = ne 0:i32, %17
infer %18
%19:i1 = eq 45:i8, %0
result %19
%0:i32 = var (knownBits=0000000000000000000000000000000x) (nonNegative) (signBits=31) (range=[0,2))
%1:i32 = var
%2:i32 = xor %0, %1
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq %0, %1
result %4
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
%3 = block 1
%4:i8 = var
%5:i8 = phi %3, %4
%6:i32 = sext %5 (hasExternalUses)
%7:i1 = ne %1, %6
%8:i1 = and %2, %7
pc %8 0:i1
%9 = block 1
%10:i8 = phi %9, %0
infer %10
result %0
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 110:i32, %1
pc %2 0:i1
%3 = block 1
%4:i8 = phi %3, %0
%5:i32 = zext %4
infer %5
result %1
%0:i32 = var
%1:i32 = and 64:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
infer %3
%4:i32 = ashr %1, 6:i32
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 255:i32, %1
infer %2
%3:i1 = eq 255:i8, %0
result %3
%0 = block 1
%1:i64 = var
%2:i64 = addnuw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3
infer %4
%5:i32 = trunc %2
result %5
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 1:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 0:i1
%4:i32 = and 8:i32, %1
%5:i1 = ne 0:i32, %4
pc %5 0:i1
%6:i32 = and 4:i32, %1
%7:i1 = ne 0:i32, %6
pc %7 0:i1
%8:i32 = and 18:i32, %1
%9:i1 = ne 0:i32, %8
pc %9 1:i1
%10:i32 = or 2:i32, %1
%11:i16 = trunc %10
infer %11
%12:i16 = or 2:i16, %0
result %12
%0:i32 = and 0:i32, 1:i32
%1:i32 = var
%2:i32 = and 2147483647:i32, %1
%3:i32 = shlnuw %2, 1:i32
%4:i32 = or %0, %3
%5:i32 = lshr %4, 1:i32
infer %5
result %2
%0:i64 = var (range=[-2147483648,-9223372036854775808))
%1:i32 = var
%2:i32 = var
%3:i1 = slt %1, %2
%4:i32 = select %3, %2, %1 (hasExternalUses)
%5:i64 = sext %4
%6:i1 = ne %0, %5
pc %6 1:i1
%7 = block 1
%8:i64 = addnsw 1:i64, %0
%9:i64 = phi %7, %8
%10:i32 = trunc %9
infer %10
%11:i32 = trunc %8
result %11
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 101:i32
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 101:i8, %0
result %4
%0:i64 = var
%1:i1 = eq 0:i64, %0
%2:i32 = zext %1
%3:i8 = trunc %2
infer %3
%4:i8 = zext %1
result %4
%0:i32 = var
%1:i32 = srem %0, 5:i32
%2:i1 = eq 0:i32, %1
pc %2 1:i1
%3:i32 = addnsw 5:i32, %0
%4:i64 = sext %3
%5:i64 = mulnsw 8:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 8:i32, %3
result %7
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 119:i32, %1
infer %2
%3:i1 = eq 119:i8, %0
result %3
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 0:i1
%3:i32 = addnsw 1:i32, %1
%4:i64 = sext %3
%5:i64 = mulnsw 24:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 24:i32, %3
result %7
%0:i16 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i16 = var
%3:i32 = sext %2
%4:i1 = sle %1, %3
pc %4 1:i1
%5:i32 = mulnsw 2:i32, %1
%6:i16 = trunc %5
infer %6
%7:i16 = add %0, %0
result %7
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65535))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i16 = var
%3:i32 = zext %2
%4:i64 = zext %3
%5:i1 = ult %1, %4
pc %5 0:i1
%6 = block 1
%7:i16 = phi %6, %2
infer %7
result %2
%0:i32 = zext 0:i8
%1:i32 = shl %0, 8:i32
%2:i8 = var
%3:i32 = zext %2
%4:i32 = or %1, %3
%5:i8 = trunc %4
infer %5
result %2
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2))
%1:i1 = slt %0, 1:i32
pc %1 1:i1
%2:i32 = addnsw 1:i32, %0
infer %2
result 1:i32
%0:i32 = lshr 4294967295:i32, 16:i32
%1:i8 = trunc %0
infer %1
result 255:i8
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 48:i32, %1
pc %2 1:i1
%3:i1 = ne 49:i32, %1
pc %3 1:i1
%4:i1 = ne 50:i32, %1
pc %4 1:i1
%5:i1 = ne 51:i32, %1
pc %5 1:i1
%6:i1 = ne 52:i32, %1
pc %6 1:i1
%7:i1 = ne 53:i32, %1
pc %7 1:i1
%8:i1 = ne 54:i32, %1
pc %8 1:i1
%9:i1 = ne 55:i32, %1
pc %9 1:i1
%10:i1 = ne 56:i32, %1
pc %10 1:i1
%11:i1 = ne 57:i32, %1
pc %11 1:i1
%12 = block 1
%13:i8 = phi %12, %0
%14:i32 = sext %13
infer %14
result %1
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 240:i32, %1
%3:i1 = ne 0:i32, %2
infer %3
%4:i1 = ult 15:i8, %0
result %4
%0 = block 2
%1:i32 = phi %0, 1:i32, 0:i32
%2:i1 = eq 4294967295:i32, %1
infer %2
result 0:i1
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = and 64:i32, %4
%6:i1 = eq 0:i32, %5
infer %6
result 1:i1
%0:i32 = var (signBits=10) (range=[0,1114112))
%1:i1 = ult %0, 128:i32
pc %1 0:i1
%2:i1 = ult %0, 2048:i32
pc %2 1:i1
%3:i32 = lshr %0, 6:i32
%4:i32 = and 31:i32, %3
infer %4 (demandedBits=00000000000000000000000011111111)
result %3
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
%3 = block 1
%4:i8 = var
%5:i8 = phi %3, %4
%6:i32 = sext %5 (hasExternalUses)
%7:i1 = ne %1, %6
%8:i1 = and %2, %7
pc %8 0:i1
%9 = block 1
%10:i8 = phi %9, %0
%11:i32 = sext %10
infer %11
result %1
%0 = block 2
%1 = block 2
%2:i16 = var
%3:i16 = add 1:i16, %2 (hasExternalUses)
%4:i16 = phi %1, %3, %3
%5:i16 = phi %0, %4, %3
infer %5
result %3
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 116:i32, %1
infer %2
%3:i1 = eq 116:i8, %0
result %3
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 5:i32, %1
infer %2
result 5:i32
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[256,-9223372036854775808))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i1 = ne 256:i64, %1
infer %2
result 1:i1
%0:i32 = var
%1:i64 = zext %0 (hasExternalUses)
%2:i64 = and 18374686479671623680:i64, %1
%3:i1 = ne 0:i64, %2
pc %3 1:i1
%4:i64 = lshr %1, 8:i64 (hasExternalUses)
%5:i64 = and 127:i64, %4
%6:i64 = or 128:i64, %5
%7:i8 = trunc %6
infer %7
%8:i8 = trunc %0
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i32 = and 1:i32, %1
%3:i1 = ne 0:i32, %2
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
infer %5
%6:i1 = trunc %0
result %6
%0:i32 = var (signBits=10) (range=[0,1114112))
%1:i1 = ult %0, 128:i32
pc %1 1:i1
%2:i32 = and 255:i32, %0
infer %2 (demandedBits=00000000000000000000000011111111)
result %0
%0:i32 = var
%1:i32 = mulnsw 2:i32, %0
%2:i64 = zext %1
%3:i64 = mulnw 8:i64, %2
%4:i64 = addnw 1:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = fshl %0, 415432704:i32, 4:i32
result %6
%0 = block 2
%1 = block 3
%2 = block 2
%3:i64 = var
%4:i64 = var
%5:i64 = phi %2, %3, %4
%6:i64 = phi %1, 0:i64, %5, %5
%7:i64 = phi %0, 0:i64, %6
%8:i1 = eq 0:i64, %7
%9:i32 = zext %8
%10:i8 = trunc %9
infer %10
%11:i8 = zext %8
result %11
%0:i32 = var (signBits=10) (range=[-32896,1114112))
%1:i1 = ne 0:i32, %0
pc %1 1:i1
%2 = block 1
%3 = block 1
%4:i32 = phi %3, %0
%5:i32 = phi %2, %4
infer %5
result %0
%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
%5:i32 = shlnuw %4, 1:i32
infer %5 (demandedBits=11111111111111111111111111111110)
%6:i32 = add %3, %3
result %6
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
%2:i32 = addnsw 1:i32, %1
infer %2
%3:i32 = add 2:i32, %0
result %3
%0:i64 = var
%1:i64 = var
%2:i1 = ne %0, %1
pc %2 1:i1
%3:i1 = ne 0:i64, %0
pc %3 0:i1
%4:i1 = ne 0:i64, %1
infer %4
result 1:i1
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 6:i32, %1
infer %2
result 6:i32
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = phi %0, %2, 0:i32
%4:i1 = ne 0:i32, %3
%5:i1 = xor 1:i1, %4
infer %5
%6 = block 2
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i32 = phi %6, %8, 0:i32
%10:i1 = eq 0:i32, %9
result %10
%0 = block 2
%1:i32 = var
%2:i16 = trunc %1
%3:i16 = phi %0, %2, 65535:i16
%4:i32 = sext %3
%5:i1 = sle 0:i32, %4
infer %5
%6 = block 2
%7:i16 = phi %6, %2, 65535:i16
%8:i1 = ult %7, 32768:i16
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 58:i32, %1
infer %2
%3:i1 = eq 58:i8, %0
result %3
%0 = block 3
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = phi %0, 4293967296:i32, %1, %1
%3:i32 = shlnuw 1:i32, %2
infer %3
%4:i32 = shl 1:i32, %1
result %4
%0 = block 4
%1:i8 = var
%2:i32 = zext %1
%3:i32 = and 127:i32, %2
%4:i32 = shlnw %3, 7:i32
%5:i8 = var
%6:i32 = zext %5
%7:i32 = or %4, %6
%8:i8 = var
%9:i32 = zext %8
%10:i32 = and 127:i32, %9
%11:i32 = var
%12:i32 = shl %11, 7:i32
%13:i32 = or %10, %12
%14:i32 = phi %0, %2, %7, %13, %13
%15:i1 = ule 12:i32, %14
pc %15 1:i1
%16:i32 = subnuw %14, 12:i32
%17:i32 = udiv %16, 2:i32
infer %17
%18 = block 4
%19:i32 = phi %18, %2, %7, %13, %13
%20:i32 = subnuw %19, 12:i32
%21:i32 = lshr %20, 1:i32
result %21
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, %1, %1, %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
infer %4 (demandedBits=11111111111111111111111111111110)
%5:i32 = add %1, %1
result %5
%0:i32 = var
%1:i64 = sext %0
%2:i64 = mul 24:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 24:i32, %0
result %4
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i64 = var
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
%5:i32 = shlnuw %4, 1:i32
%6:i32 = or %1, %5
%7:i32 = and 4294967294:i32, %6
%8:i32 = and 4294967294:i32, %7
%9:i32 = or 1:i32, %8
infer %9
%10:i32 = add 1:i32, %5
result %10
%0:i32 = var (range=[-2147483646,-2147483648))
%1:i32 = var
%2:i32 = add 1:i32, %1 (hasExternalUses)
%3:i1 = eq %0, %2
pc %3 0:i1
%4:i16 = var
%5:i32 = zext %4
%6:i32 = sdiv 1073741824:i32, %5
%7:i32 = addnw 1:i32, %6
%8:i1 = eq %2, %7
infer %8
%9:i1 = eq %1, %6
result %9
%0 = block 4
%1:i32 = phi %0, 1:i32, 2:i32, 1:i32, 2:i32
%2:i8 = trunc %1 (hasExternalUses)
%3:i32 = zext %2
%4:i1 = eq 1:i32, %3
%5:i32 = select %4, 0:i32, 1:i32
infer %5 (demandedBits=00000000000000000000000011111111)
%6 = block 4
%7:i32 = phi %6, 1:i32, 2:i32, 1:i32, 2:i32
%8:i32 = add 255:i32, %7
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
pc %2 0:i1
%3 = block 1
%4:i8 = phi %3, %0
infer %4
result 0:i8
%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
infer %4 (demandedBits=01111111111111111111111111111111)
result %3
%0:i32 = var
%1:i32 = and 65536:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
infer %3
%4:i32 = ashr %1, 16:i32
result %4
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = and 4294966847:i32, %1
%5:i16 = trunc %4
%6:i32 = zext %5
%7:i32 = or 128:i32, %6
infer %7 (demandedBits=00000000000000001111111111111111)
%8:i32 = add 128:i32, %4
result %8
%0:i64 = var
%1:i64 = and 1:i64, %0
%2:i1 = eq %0, %1
infer %2
%3:i1 = ult %0, 2:i64
result %3
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i1 = sle 0:i32, %0
pc %1 1:i1
%2:i32 = var
%3:i32 = shl 1:i32, %0
%4:i1 = sle 32:i32, %0
%5:i32 = select %4, 4294967295:i32, 0:i32
%6:i32 = or %3, %5
%7:i32 = or %2, %6
infer %7
%8:i32 = or %2, %3
result %8
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967293:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = and 65533:i16, %0
result %4
%0:i32 = var
%1:i32 = lshr %0, 1:i32
%2:i32 = and 2147483647:i32, %1
%3:i32 = shl %2, 1:i32
infer %3
%4:i32 = and 4294967294:i32, %0
result %4
%0:i32 = lshr 4294967295:i32, 8:i32
infer %0 (demandedBits=00000000000000000000000011111111)
result 255:i32
%0:i32 = var
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i32 = addnsw 1:i32, %1
%3:i64 = zext %2
%4:i64 = mul 8:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = mul 8:i32, %2
result %6
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i32 = var
%3:i1 = slt %1, %2
pc %3 0:i1
%4 = block 1
%5:i32 = phi %4, %2
infer %5
result %2
%0:i32 = var
%1:i1 = eq 0:i32, %0
%2:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%3:i32 = addnw 1:i32, %2 (hasExternalUses)
%4 = block 3
%5:i32 = var
%6:i32 = var
%7:i32 = sub %6, 1:i32
%8:i32 = var
%9:i32 = var
%10:i32 = sdiv %8, %9
%11:i32 = subnuw %10, 1:i32
%12:i32 = xor 4294967295:i32, %11
%13:i32 = and %7, %12
%14:i32 = add 1:i32, %13
%15:i32 = sub %5, %14
%16:i32 = add 1:i32, %15
%17:i32 = var
%18:i32 = addnuw 1:i32, %17
%19:i32 = sub %18, %14
%20:i32 = phi %4, %16, %19, %10
%21:i1 = slt %3, %20
%22:i1 = and %1, %21
pc %22 0:i1
%23 = block 1
%24:i32 = phi %23, %0
infer %24
result %0
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
%2:i64 = zext %1
%3:i64 = mul 24:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 24:i32, %1
result %5
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64
infer %10 (demandedBits=0000000000000000000000000000000000001111111111111111111111111111)
result 268435455:i64
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4 (hasExternalUses)
%6:i1 = slt 0:i32, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i8 = var
%11:i32 = zext %10
%12:i32 = or %9, %11 (hasExternalUses)
%13:i1 = slt %5, %12
%14:i1 = and %6, %13
pc %14 0:i1
%15:i32 = ashr %12, 8:i32
%16:i8 = trunc %15
infer %16
result %7
%0:i32 = var
%1:i32 = lshr %0, 1:i32
%2:i1 = slt 0:i32, %1
infer %2
%3:i1 = ult 1:i32, %0
result %3
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3:i32 = zext %0
%4:i64 = sext %3
infer %4
%5:i64 = zext %0
result %5
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 59:i32, %1
infer %2
%3:i1 = eq 59:i8, %0
result %3
%0:i32 = select 0:i1, 16:i32, 2:i32
%1:i32 = or 32:i32, %0
infer %1 (demandedBits=00000000000000001111111111111111)
result 34:i32
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64
infer %13 (demandedBits=0000000000000000000000000000000000001111111111111111111111111111)
result 268435455:i64
%0:i16 = var
%1:i32 = zext %0
%2:i32 = or 34:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = or 34:i16, %0
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 3:i32, %1
infer %2
%3:i1 = eq 3:i8, %0
result %3
%0:i32 = var (signBits=25) (range=[48,128))
%1:i1 = sle %0, 57:i32
pc %1 0:i1
%2 = block 1
%3:i32 = phi %2, %0
infer %3
result %0
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, %1, %1, %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
%5:i32 = or 0:i32, %4
infer %5 (demandedBits=11111111111111111111111111111110)
%6:i32 = add %1, %1
result %6
%0 = block 2
%1 = block 2
%2:i32 = select 1:i1, 16:i32, 2:i32
%3:i32 = or 32:i32, %2
%4:i32 = phi %1, %3, 16:i32
%5:i32 = or 64:i32, %4
%6:i32 = select 0:i1, 128:i32, 64:i32
%7:i32 = or %4, %6
%8:i32 = phi %0, %5, %7
infer %8 (demandedBits=00000000000000001111111111111111)
result %5
%0:i64 = var
%1:i1 = ne 0:i64, %0
pc %1 1:i1
%2:i64 = sub %0, %0
%3:i64 = var
%4:i1 = slt %2, %3
infer %4
%5:i1 = slt 0:i64, %3
result %5
%0:i32 = var (range=[1,5))
%1:i32 = add 4294967295:i32, %0
%2:i1 = slt %1, 0:i32
%3:i32 = select %2, %1, 0:i32
%4:i32 = sub %1, %3
%5:i64 = zext %4
infer %5
%6:i64 = sext %1
result %6
%0:i8 = var
%1:i32 = zext %0
%2:i32 = subnsw %1, 111:i32
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 111:i8, %0
result %4
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
infer %1
result 0:i32
%0:i8 = var
%1:i32 = zext %0
%2:i32 = or 8:i32, %1
%3:i8 = trunc %2
infer %3
%4:i8 = or 8:i8, %0
result %4
%0:i32 = var
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i32 = subnsw %1, 1:i32
%3:i64 = sext %2
infer %3
%4:i64 = sext %0
result %4
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 255:i32
%3 = block 3
%4:i32 = phi %3, 0:i32, 7:i32, 0:i32
%5:i32 = phi %0, %4, 0:i32
%6:i32 = and %2, %5
infer %6
%7:i32 = and %1, %5
result %7
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = and 1:i32, %4
%6:i1 = eq 0:i32, %5
infer %6
%7 = block 2
%8:i32 = phi %7, 1:i32, 0:i32
%9:i1 = eq 0:i32, %8
result %9
%0:i64 = var
%1:i1 = eq 0:i64, %0
pc %1 0:i1
%2:i64 = var
%3:i64 = sub %2, %0
%4:i32 = trunc %3
%5:i32 = and 2147483647:i32, %4
%6:i32 = shlnuw %5, 1:i32
infer %6
%7:i32 = add %4, %4
result %7
%0:i64 = var (range=[0,2147483647))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i32 = var
%3:i64 = sext %2
%4:i1 = slt %1, %3
pc %4 1:i1
%5 = block 1
%6:i32 = phi %5, %2
infer %6
result %2
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = zext %1
%3:i64 = add 32:i64, %2
%4:i64 = add 1:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = add 33:i32, %1
result %6
%0 = block 2
%1:i64 = var
%2:i32 = trunc %1
%3:i64 = var
%4:i32 = trunc %3
%5:i32 = phi %0, %2, %4
%6:i1 = slt 0:i32, %5
pc %6 1:i1
%7:i64 = zext %5 (hasExternalUses)
%8:i1 = ult %7, 8:i64
pc %8 0:i1
%9:i64 = urem %7, 8:i64
%10:i64 = sub %7, %9
infer %10
%11 = block 2
%12:i32 = phi %11, %2, %4
%13:i64 = zext %12
%14:i64 = and 4294967288:i64, %13
result %14
%0:i32 = var
%1:i64 = zext %0
%2:i64 = mul 16:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 16:i32, %0
result %4
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
infer %6
result 1:i1
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3 = block 1
%4:i32 = phi %3, %0
infer %4
result %0
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i64 = sext %0
%2:i1 = ult %1, 10:i64
infer %2
%3:i1 = ult %0, 10:i32
result %3
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = lshr %1, 16:i32
%3:i8 = trunc %2
infer %3
result 0:i8
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,4294967295))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2 = block 2
%3 = block 2
%4:i64 = var
%5:i64 = addnuw 1:i64, %4
%6:i32 = trunc %5
%7:i32 = phi %3, %6, 0:i32
%8:i32 = phi %2, %7, 1:i32
%9:i64 = zext %8
%10:i1 = ne %1, %9
pc %10 0:i1
%11:i32 = add 4294967295:i32, %8
%12:i64 = zext %11
%13:i64 = addnw 1:i64, %12
%14:i32 = trunc %13
infer %14
result %8
%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i32 = var
%4:i32 = lshr %3, 1:i32
%5:i64 = zext %4
%6:i64 = addnsw %2, %5
%7:i32 = trunc %6
%8:i32 = and 2147483647:i32, %7
%9:i32 = shlnuw %8, 1:i32
infer %9
%10:i32 = add %7, %7
result %10
%0:i32 = var
%1:i32 = lshr %0, 1:i32 (hasExternalUses)
%2:i1 = slt 0:i32, %1
pc %2 0:i1
%3:i32 = addnsw 4294967295:i32, %1 (hasExternalUses)
%4:i1 = slt %3, 0:i32
infer %4
result 1:i1
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 102:i32
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i32 = subnsw %1, 115:i32
%5:i1 = eq 0:i32, %4
pc %5 0:i1
%6:i32 = subnsw %1, 99:i32
%7:i1 = eq 0:i32, %6
pc %7 0:i1
%8:i32 = subnsw %1, 101:i32
%9:i1 = eq 0:i32, %8
pc %9 0:i1
%10:i32 = subnsw %1, 108:i32
%11:i1 = eq 0:i32, %10
pc %11 0:i1
infer %3
result 0:i1
%0 = block 3
%1:i64 = var (nonZero)
%2:i64 = var (nonZero)
%3:i64 = phi %0, %1, %1, %2
%4:i1 = ne 0:i64, %3
infer %4
result 1:i1
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i1 = slt 0:i32, %1
pc %2 1:i1
%3:i32 = addnsw 4294967295:i32, %1
%4:i64 = zext %3
infer %4 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%5:i64 = add 4294967295:i64, %0
result %5
%0:i16 = var
%1:i32 = zext %0
%2:i64 = sext %1
infer %2
%3:i64 = zext %0
result %3
%0:i64 = var (range=[0,2147483647))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i32 = var
%3:i64 = sext %2
%4:i1 = slt %1, %3
pc %4 1:i1
%5 = block 1
%6 = block 1
%7:i64 = phi %6, %1
%8:i64 = phi %5, %7
infer %8 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %1
%0:i64 = var (nonZero)
%1:i1 = ne 0:i64, %0
infer %1
result 1:i1
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
%3:i8 = var
%4:i32 = sext %3 (hasExternalUses)
%5:i1 = ne %4, %1
%6:i1 = and %2, %5
%7:i8 = var
%8:i32 = sext %7
%9:i1 = ne %8, %1
%10:i1 = and %6, %9
%11:i8 = var
%12:i32 = sext %11
%13:i1 = ne %12, %1
%14:i1 = and %10, %13
pc %14 0:i1
%15 = block 1
%16:i8 = phi %15, %0
infer %16
result %0
%0 = block 2
%1:i32 = var
%2:i32 = addnsw 2:i32, %1
%3:i32 = phi %0, %2, %2
%4:i32 = var
%5:i1 = slt %3, %4
infer %5
%6:i1 = slt %2, %4
result %6
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ne 23:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
result %2
%0:i32 = var
%1:i16 = var
%2:i32 = zext %1 (hasExternalUses)
%3:i1 = ule %0, %2
pc %3 0:i1
%4:i16 = var
%5:i32 = zext %4 (hasExternalUses)
%6:i32 = sub %0, %5
%7:i16 = var
%8:i32 = zext %7
%9:i32 = subnsw %8, 4:i32
%10:i32 = urem %6, %9
%11:i32 = add %10, %5 (hasExternalUses)
%12:i1 = sle %11, %2
pc %12 0:i1
%13:i16 = trunc %5
infer %13
result %4
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = and 4294966847:i32, %1
%5:i16 = trunc %4
%6:i32 = zext %5
infer %6 (demandedBits=00000000000000001111111011111111)
result %4
%0 = block 2
%1 = block 1
%2:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (nonNegative) (range=[0,4294967295))
%3:i64 = addnw 2:i64, %2
%4:i64 = phi %1, %3
%5:i32 = trunc %4
%6:i32 = phi %0, %5, 0:i32
%7:i32 = sdiv %6, 2:i32
infer %7
%8 = block 2
%9 = block 1
%10:i64 = phi %9, %3
%11:i32 = trunc %10
%12:i32 = phi %8, %11, 0:i32
%13:i32 = ashr %12, 1:i32
result %13
%0:i32 = zext 0:i8
%1:i32 = shlnw %0, 8:i32
%2:i8 = var
%3:i32 = zext %2
%4:i32 = or %1, %3
%5:i8 = var
%6:i32 = zext %5
%7:i32 = shlnw %6, 8:i32
%8:i8 = var
%9:i32 = zext %8
%10:i32 = or %7, %9 (hasExternalUses)
%11:i32 = add %4, %10
infer %11 (demandedBits=00000000000000000000000011111111)
%12:i32 = add %3, %9
result %12
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 16:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 0:i1
%4:i32 = and 128:i32, %1
%5:i1 = ne 0:i32, %4
infer %5
%6:i1 = ult 126:i8, %0
result %6
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i8 = trunc %1
%3:i32 = zext %2
%4:i16 = var
%5:i32 = sext %4
%6:i32 = addnsw %3, %5
infer %6
%7:i32 = add %1, %5
result %7
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i32 = trunc %0
%2:i8 = trunc %1
infer %2
%3:i8 = trunc %0
result %3
%0 = block 3
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = phi %0, 4293967296:i32, %1, %1
%3:i1 = slt %2, 0:i32
pc %3 0:i1
%4:i1 = eq 1:i32, %2
pc %4 0:i1
%5:i64 = zext %2
infer %5
%6:i64 = sext %1
result %6
%0 = block 2
%1:i8 = var
%2:i8 = var
%3:i8 = phi %0, %1, %2
%4:i32 = zext %3
%5:i64 = sext %4
infer %5
%6:i64 = zext %3
result %6
%0:i32 = var
%1:i32 = lshr %0, 1:i32 (hasExternalUses)
%2:i1 = slt 0:i32, %1
pc %2 0:i1
%3:i1 = eq 7:i32, %1
infer %3
result 0:i1
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i8 = var
%3:i32 = zext %2
%4:i32 = shlnw %3, 8:i32
%5:i8 = var
%6:i32 = zext %5
%7:i32 = or %4, %6 (hasExternalUses)
%8:i16 = var
%9:i32 = zext %8
%10:i32 = addnsw %7, %9
%11:i32 = subnsw %10, 1:i32 (hasExternalUses)
%12:i1 = sle %1, %11
pc %12 0:i1
%13:i1 = slt %7, 0:i32
infer %13
result 0:i1
%0 = block 1
%1:i64 = var
%2:i64 = add 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3
infer %4
%5:i32 = trunc %2
result %5
%0:i32 = var
%1:i32 = mulnw 1:i32, %0
%2:i64 = sext %1
infer %2
%3:i64 = sext %0
result %3
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 0:i1
%5 = block 1
%6:i32 = phi %5, %1
%7:i32 = mul 37:i32, %6
%8:i64 = zext %7
%9:i32 = trunc %8
%10:i32 = urem %9, 124:i32
%11:i64 = zext %10
%12:i32 = trunc %11
infer %12
result %10
%0:i32 = var
%1:i32 = mulnsw 5:i32, %0 (hasExternalUses)
%2:i64 = zext %1
%3:i64 = mulnw 48:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 240:i32, %0
result %5
%0:i32 = var
%1:i32 = var
%2:i1 = sle %0, %1
pc %2 1:i1
%3:i64 = zext %0
%4:i64 = mulnw 48:i64, %3
%5:i64 = mulnw 2:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 96:i32, %0
result %7
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = addnsw 1:i32, %0
%4:i64 = sext %3
%5:i64 = mul 8:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 8:i32, %3
result %7
%0:i32 = var (range=[1,5))
%1:i32 = add 4294967295:i32, %0
%2:i1 = slt %1, 0:i32
%3:i32 = select %2, %1, 0:i32
%4:i32 = sub %1, %3
%5:i64 = zext %4
%6:i64 = addnw 1:i64, %5 (hasExternalUses)
%7:i1 = ult %6, 8:i64
pc %7 0:i1
%8:i64 = zext %0 (hasExternalUses)
%9:i32 = trunc %8
infer %9
result %0
%0:i32 = var
%1:i64 = sext %0
%2:i64 = mul 8:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 8:i32, %0
result %4
%0 = block 2
%1 = block 3
%2:i32 = phi %1, 34:i32, 2:i32, 2:i32
%3:i32 = or 64:i32, %2
%4:i32 = or 64:i32, %2
%5:i32 = phi %0, %3, %4
infer %5 (demandedBits=00000000000000001111111111111111)
result %4
%0:i32 = and 0:i32, 1:i32
infer %0 (demandedBits=11111111111111111111111111111110)
result 0:i32
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 0:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
%5:i1 = eq 0:i8, %0
result %5
%0 = block 2
%1:i32 = zext 1:i1
%2:i8 = trunc %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
%5:i1 = phi %0, 1:i1, %4
%6:i32 = zext %5
%7:i8 = trunc %6
infer %7
result 1:i8
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = or 4:i32, %1
%3:i8 = trunc %2
infer %3
%4:i8 = or 4:i8, %0
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
pc %2 0:i1
%3:i64 = zext %0
infer %3
result 0:i64
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i8 = var
%3:i32 = zext %2
%4:i32 = shl %3, 8:i32
%5:i8 = var
%6:i32 = zext %5
%7:i32 = or %4, %6 (hasExternalUses)
%8:i16 = var
%9:i32 = zext %8
%10:i32 = addnsw %7, %9
%11:i32 = subnsw %10, 1:i32 (hasExternalUses)
%12:i1 = sle %1, %11
pc %12 0:i1
%13:i1 = slt %7, 0:i32
infer %13
result 0:i1
%0:i32 = var
%1:i64 = sext %0 (hasExternalUses)
%2:i64 = addnsw 56:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = add 56:i32, %0
result %4
%0:i64 = zext 1000000001:i32
infer %0
result 1000000001:i64
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3
infer %4
%5:i8 = trunc %1
result %5
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64
infer %13 (demandedBits=0000000000000000000000000000000000000000000000000000000001111111)
result 127:i64
%0:i32 = select 1:i1, 100:i32, 0:i32
infer %0 (demandedBits=00000000000000000000000011111111)
result 100:i32
%0:i32 = var
%1:i1 = eq 8:i32, %0
%2:i32 = zext %1
%3:i8 = trunc %2 (hasExternalUses)
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
infer %5
result %1
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 256:i32, %1 (hasExternalUses)
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i16 = var
%5:i32 = zext %4
%6:i32 = or %2, %5
%7:i16 = trunc %6
infer %7
%8:i16 = or 256:i16, %4
result %8
%0 = block 2
%1:i32 = var
%2:i32 = addnsw 5:i32, %1
%3:i32 = phi %0, %2, %2
%4:i32 = var
%5:i1 = slt %3, %4
pc %5 1:i1
%6:i64 = zext %3
infer %6
%7:i64 = zext %2
result %7
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i32 = ashr %5, 8:i32
infer %6 (demandedBits=00000000000000000000000011111111)
result %1
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i1 = slt 0:i32, %1
pc %2 0:i1
%3:i1 = eq 2:i32, %1
infer %3
result 0:i1
%0:i32 = var
%1:i32 = subnsw %0, 1:i32
%2:i32 = sdiv %1, 8:i32
%3:i32 = mulnsw 8:i32, %2
%4:i32 = addnsw 8:i32, %3
%5:i64 = zext %4
%6:i64 = mulnw 40:i64, %5
%7:i32 = trunc %6
infer %7
%8:i32 = mul 40:i32, %4
result %8
%0:i16 = var
%1:i32 = sext %0
%2:i1 = sle 0:i32, %1
infer %2
%3:i1 = ult %0, 32768:i16
result %3
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = var (signBits=16) (range=[0,65536))
%3:i8 = var
%4:i32 = zext %3
%5:i32 = shl %4, 8:i32
%6:i8 = var
%7:i32 = zext %6
%8:i32 = or %5, %7
%9:i32 = addnsw %2, %8
%10:i32 = subnsw %9, 1:i32 (hasExternalUses)
%11:i1 = sle %1, %10
pc %11 0:i1
%12:i1 = slt %2, 0:i32
infer %12
result 0:i1
%0:i32 = var (knownBits=0000000000000000xxxxxxxxxxxxxxxx) (nonNegative) (signBits=16) (range=[0,65536))
%1:i32 = and 4:i32, %0
%2:i1 = eq 0:i32, %1
pc %2 0:i1
%3:i32 = and 4294967264:i32, %0
%4:i32 = or 4:i32, %3
infer %4 (demandedBits=00000000000000001111111111111111)
%5:i32 = and 65508:i32, %0
result %5
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (nonZero) (range=[1,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i64 = sext %0
%4:i1 = ult %3, 100:i64
infer %4
%5:i1 = ult %0, 100:i32
result %5
%0 = block 1
%1:i8 = var
%2:i8 = phi %0, %1
%3:i32 = sext %2
infer %3
%4:i32 = sext %1
result %4
%0:i8 = var
%1:i1 = ne 0:i8, %0
pc %1 1:i1
%2:i32 = zext %0
%3:i64 = zext %2
infer %3
%4:i64 = zext %0
result %4
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4:i32 = phi %2, %1, %3
%5:i32 = subnsw %1, %4
%6 = block 1
%7:i32 = var (range=[1,-2147483648))
%8:i32 = addnsw 4294967295:i32, %7
%9:i32 = phi %6, %8
%10:i32 = phi %0, %5, %9
%11:i1 = eq 0:i32, %10
%12:i32 = zext %11
%13:i1 = ne 0:i32, %12
infer %13
result %11
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
%2:i64 = sext %1
%3:i64 = mulnsw 4:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 4:i32, %1
result %5
%0:i32 = var
%1:i32 = and 4294967294:i32, %0
infer %1 (demandedBits=11111111111111111111111111111110)
result %0
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 115:i32, %1
infer %2
%3:i1 = eq 115:i8, %0
result %3
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i1 = slt %0, 0:i32
infer %1
result 0:i1
%0:i32 = var
%1:i64 = zext %0
%2:i1 = ule %1, 3968:i64
infer %2
%3:i1 = ult %0, 3969:i32
result %3
%0:i32 = or 16:i32, 64:i32
infer %0 (demandedBits=00000000000000001111111111111111)
result 80:i32
%0 = block 2
%1:i32 = phi %0, 48:i32, 16:i32
%2:i32 = and 32:i32, %1
%3:i1 = ne 0:i32, %2
infer %3
%4 = block 2
%5:i32 = phi %4, 48:i32, 16:i32
%6:i1 = eq 48:i32, %5
result %6
%0 = block 2
%1 = block 1
%2:i16 = var
%3:i16 = phi %1, %2
%4:i32 = zext %3
%5:i32 = phi %0, 0:i32, %4
%6:i1 = ne 0:i32, %5
pc %6 1:i1
%7:i1 = slt 0:i32, %5
pc %7 1:i1
%8:i64 = zext %5
infer %8
%9:i64 = zext %2
result %9
%0 = block 3
%1:i16 = var
%2:i16 = var
%3:i32 = zext %2
%4:i32 = and 4294965215:i32, %3
%5:i16 = trunc %4
%6:i16 = var
%7:i16 = phi %0, %1, %5, %6
%8:i32 = zext %7
%9:i32 = and 4294967293:i32, %8
%10:i16 = trunc %9
%11:i32 = zext %10
infer %11 (demandedBits=00000000000000001111111111101111)
result %9
%0 = block 1
%1:i32 = var (range=[0,-1))
%2:i32 = addnuw 1:i32, %1
%3:i32 = phi %0, %2
infer %3
result %2
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 46:i32, %1
infer %2
%3:i1 = eq 46:i8, %0
result %3
%0 = block 1
%1:i32 = var
%2:i32 = phi %0, %1
%3:i64 = sext %2
infer %3
%4:i64 = sext %1
result %4
%0:i8 = var
%1:i1 = ne 0:i8, %0
pc %1 1:i1
%2:i32 = sext %0
%3:i8 = var
%4:i32 = sext %3
%5:i1 = eq %2, %4
infer %5
%6:i1 = eq %0, %3
result %6
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3 = block 1
%4:i8 = phi %3, %0
%5:i32 = zext %4
infer %5
result %1
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i8 = var
%3:i32 = sext %2
%4:i1 = eq %1, %3
pc %4 1:i1
%5:i1 = ne 48:i32, %1
pc %5 1:i1
%6:i1 = ne 49:i32, %1
pc %6 1:i1
%7:i1 = ne 50:i32, %1
pc %7 1:i1
%8:i1 = ne 51:i32, %1
pc %8 1:i1
%9:i1 = ne 52:i32, %1
pc %9 1:i1
%10:i1 = ne 53:i32, %1
pc %10 1:i1
%11:i1 = ne 54:i32, %1
pc %11 1:i1
%12:i1 = ne 55:i32, %1
pc %12 1:i1
%13:i1 = ne 56:i32, %1
pc %13 1:i1
%14:i1 = ne 57:i32, %1
pc %14 1:i1
%15:i1 = eq 43:i32, %1
pc %15 0:i1
%16:i1 = eq 45:i32, %1
%17:i32 = zext %16
%18:i1 = ne 0:i32, %17
pc %18 0:i1
%19:i1 = eq 46:i32, %1
%20:i32 = zext %19
%21:i1 = ne 0:i32, %20
infer %21
%22:i1 = eq 46:i8, %0
result %22
%0 = block 2
%1:i32 = var
%2:i32 = addnw 1:i32, %1
%3:i32 = addnsw 1:i32, %1 (hasExternalUses)
%4:i32 = phi %0, %2, %3
infer %4
result %3
%0:i32 = var
%1:i1 = slt %0, 0:i32
%2:i32 = zext %1
%3:i8 = trunc %2 (hasExternalUses)
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
%6:i32 = select %5, 2:i32, 1:i32
%7:i8 = trunc %6
infer %7
%8:i8 = add 1:i8, %3
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4 (hasExternalUses)
%6:i1 = slt 0:i32, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i8 = var
%11:i32 = zext %10
%12:i32 = or %9, %11 (hasExternalUses)
%13:i1 = slt %5, %12
%14:i1 = and %6, %13
pc %14 0:i1
%15:i32 = ashr %5, 8:i32
%16:i8 = trunc %15
infer %16
result %0
%0 = block 2
%1:i16 = var
%2:i16 = add 1:i16, %1
%3:i16 = phi %0, %2, %2
infer %3
result %2
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
%3:i8 = var
%4:i32 = sext %3 (hasExternalUses)
%5:i1 = ne %4, %1
%6:i1 = and %2, %5
%7:i8 = var
%8:i32 = sext %7
%9:i1 = ne %8, %1
%10:i1 = and %6, %9
%11:i8 = var
%12:i32 = sext %11
%13:i1 = ne %12, %1
%14:i1 = and %10, %13
pc %14 0:i1
%15 = block 1
%16:i8 = phi %15, %0
%17:i32 = zext %16
infer %17
%18:i32 = zext %0
result %18
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3 (hasExternalUses)
%9:i32 = trunc %8 (hasExternalUses)
%10:i33 = umul.with.overflow 1:i32, %9 (hasExternalUses)
%11:i32 = extractvalue %10, 0:i32 (hasExternalUses)
%12:i32 = sub %5, %11
%13:i1 = ult %5, %12
infer %13
result 0:i1
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i1 = sle 0:i32, %0
pc %3 1:i1
%4:i32 = mulnw 1:i32, %1
%5:i32 = addnsw %0, %4
infer %5
%6:i32 = add %0, %1
result %6
%0:i32 = var
%1:i1 = slt 0:i32, %0
pc %1 1:i1
%2:i64 = zext %0 (hasExternalUses)
%3:i1 = ult %2, 8:i64
pc %3 0:i1
%4:i64 = urem %2, 8:i64
%5:i64 = sub %2, %4
infer %5
%6:i64 = and 2147483640:i64, %2
result %6
%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
%5:i32 = shlnuw %4, 1:i32
%6:i32 = or 0:i32, %5
infer %6
%7:i32 = add %3, %3
result %7
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = and 127:i64, %10
%12:i64 = or 128:i64, %11
infer %12 (demandedBits=0000000000000000000000000000000000000000000000000000000011111111)
result 255:i64
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 4294967290:i32, %1
infer %2
%3:i1 = eq 250:i8, %0
result %3
%0:i32 = var
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i32 = addnsw 1:i32, %1
%3:i64 = zext %2
%4:i64 = mulnw 8:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = mul 8:i32, %2
result %6
%0:i8 = var
%1:i32 = zext %0
%2:i1 = sle 2:i32, %1
infer %2
%3:i1 = ult 1:i8, %0
result %3
%0:i32 = var
%1:i1 = slt %0, 1:i32
pc %1 0:i1
%2:i32 = var
%3:i1 = slt %2, %0
pc %3 0:i1
%4 = block 1
%5:i32 = phi %4, %0
infer %5
result %0
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1 (hasExternalUses)
%3:i1 = slt %0, %2
pc %3 1:i1
%4:i8 = var
%5:i32 = sext %4
%6:i1 = ne 0:i32, %5
%7:i32 = select %6, 1:i32, 0:i32 (hasExternalUses)
%8:i32 = addnw 6:i32, %7 (hasExternalUses)
%9:i32 = addnsw %0, %8 (hasExternalUses)
%10:i1 = sle %9, %2
pc %10 1:i1
%11:i64 = sext %2 (hasExternalUses)
%12:i64 = addnsw 1:i64, %11
%13:i64 = zext %8 (hasExternalUses)
%14:i64 = sub %13, 6:i64
%15:i64 = add 7:i64, %14
%16:i64 = zext %0 (hasExternalUses)
%17:i64 = add %15, %16
%18:i1 = slt %12, %17
%19:i64 = select %18, %17, %12
%20:i64 = add 18446744073709551610:i64, %19
%21:i64 = sub %20, %14
%22:i64 = sub %21, %16 (hasExternalUses)
%23:i1 = ult %22, 8:i64
pc %23 0:i1
%24:i64 = add 18446744073709551609:i64, %19
%25:i64 = sub %24, %14
%26:i64 = sub %25, %16 (hasExternalUses)
%27:i32 = trunc %26 (hasExternalUses)
%28:i33 = umul.with.overflow 1:i32, %27 (hasExternalUses)
%29:i1 = extractvalue %28, 1:i32
infer %29
result 0:i1
%0:i32 = var (range=[-2147483647,2147483647))
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i16 = var
%3:i32 = zext %2
%4:i1 = slt %1, %3
pc %4 0:i1
%5 = block 1
%6:i16 = phi %5, %2
infer %6
result %2
%0:i32 = var
%1:i32 = and 65536:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
%5:i32 = select %4, 3:i32, 2:i32
infer %5 (demandedBits=00000000000000000000000011111111)
%6:i32 = add 2:i32, %3
result %6
%0:i32 = var (knownBits=0000000000000000xxxxxxxxxxxxxxxx) (nonNegative) (signBits=16) (range=[0,65536))
%1:i32 = and 4294967283:i32, %0
%2:i16 = trunc %1 (hasExternalUses)
%3:i32 = zext %2
%4:i32 = and 2048:i32, %3
infer %4
%5:i32 = and 2048:i32, %0
result %5
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
%2:i64 = sext %1
%3:i64 = mul 4:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 4:i32, %1
result %5
%0:i32 = var (knownBits=0000000000000000xxxxxxxxxxxxxxxx) (nonNegative) (signBits=16) (range=[0,65536))
%1:i32 = and 64:i32, %0
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3:i32 = and 4294967231:i32, %0
%4:i16 = trunc %3
%5:i32 = zext %4
%6:i32 = or 256:i32, %5
%7:i16 = trunc %6
infer %7
%8:i16 = or 256:i16, %4
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 121:i32, %1
infer %2
%3:i1 = eq 121:i8, %0
result %3
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i8 = trunc %1
%3:i32 = zext %2
infer %3
result %1
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483648))
%1:i32 = var
%2:i64 = sext %1
%3:i1 = slt %0, %2
pc %3 0:i1
%4 = block 1
%5:i32 = phi %4, %1
infer %5
result %1
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 1:i1
%5:i32 = add 4294967295:i32, %1 (hasExternalUses)
%6:i32 = udiv %5, 8:i32
infer %6
%7:i32 = lshr %5, 3:i32
result %7
%0 = block 2
%1:i32 = zext 1:i1
%2:i8 = trunc %1 (hasExternalUses)
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
%5:i1 = phi %0, 1:i1, %4
infer %5
result 1:i1
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = and 4294967231:i32, %1
%5:i16 = trunc %4
%6:i32 = zext %5
%7:i32 = or 256:i32, %6
%8:i16 = trunc %7
infer %8
%9:i16 = or 256:i16, %5
result %9
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (nonNegative) (range=[0,2147483647))
%1:i32 = var
%2:i32 = addnsw 4294967295:i32, %1
%3:i1 = slt %0, %2
pc %3 0:i1
%4:i32 = sdiv %0, 2:i32
infer %4
%5:i32 = ashr %0, 1:i32
result %5
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 3:i32, %1
%3:i64 = sext %2
infer %3
result 3:i64
%0:i32 = select 0:i1, 16:i32, 2:i32
%1:i32 = or 32:i32, %0 (hasExternalUses)
%2:i32 = and 32:i32, %1
%3:i1 = ne 0:i32, %2
infer %3
result 1:i1
%0:i32 = var
%1:i64 = zext %0 (hasExternalUses)
%2:i64 = and 18374686479671623680:i64, %1
infer %2
result 0:i64
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 64:i32, %1
infer %2
%3:i1 = eq 64:i8, %0
result %3
%0:i64 = var
%1:i1 = eq 0:i64, %0
pc %1 0:i1
infer %1
result 0:i1
%0:i8 = var (range=[1,0))
%1:i32 = sext %0
%2:i8 = var
%3:i32 = sext %2
%4:i1 = eq %1, %3
infer %4
%5:i1 = eq %0, %2
result %5
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294966911:i32, %1
%3:i16 = trunc %2
infer %3 (demandedBits=1111111110011111)
%4:i16 = and 65055:i16, %0
result %4
%0:i32 = var (knownBits=0000000000000000xxxxxxxxxxxxxxxx) (nonNegative) (signBits=16) (range=[0,65536))
%1:i32 = and 4294967231:i32, %0
%2:i16 = trunc %1
%3:i32 = zext %2
%4:i32 = or 128:i32, %3
infer %4 (demandedBits=00000000000000001111111111111111)
%5:i32 = or 128:i32, %1
result %5
%0:i8 = var
%1:i32 = zext %0
%2:i32 = ashr %1, 4:i32
%3:i32 = and 15:i32, %2
infer %3
result %2
%0:i32 = var (range=[1,5))
%1:i32 = add 4294967295:i32, %0
%2:i1 = slt %1, 0:i32
%3:i32 = select %2, %1, 0:i32
%4:i32 = sub %1, %3
%5:i64 = zext %4
%6:i64 = addnw 1:i64, %5 (hasExternalUses)
%7:i1 = ult %6, 8:i64
pc %7 0:i1
%8:i64 = urem %6, 8:i64
%9:i64 = sub %6, %8
infer %9
%10:i64 = sext %0
result %10
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = eq 3:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3
%5:i32 = zext %4
infer %5
result %3
%0:i32 = var
%1:i32 = and 8:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
infer %3 (demandedBits=00000000000000000000000011111111)
%4:i32 = ashr %1, 3:i32
result %4
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294966847:i32, %1
%3:i16 = trunc %2
infer %3 (demandedBits=1111111110011111)
%4:i16 = and 65055:i16, %0
result %4
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i32 = phi %0, %1
%3:i32 = addnsw 1:i32, %2
infer %3
%4:i32 = add 1:i32, %1
result %4
%0:i32 = zext 1:i1
infer %0 (demandedBits=00000000000000000000000011111111)
result 1:i32
%0:i32 = var
%1:i32 = and 64:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
result %2
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = eq 3:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3
%5:i32 = zext %4
%6:i1 = ne 0:i32, %5
infer %6
%7:i1 = eq 3:i8, %0
result %7
%0:i32 = var (knownBits=00000000000000000000000000000000) (nonNegative) (range=[0,1))
infer %0
result 0:i32
%0:i8 = var
%1:i32 = zext %0
%2:i32 = subnsw %1, 102:i32
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 102:i8, %0
result %4
%0 = block 1
%1:i64 = var
%2:i64 = phi %0, %1
%3:i64 = shl %2, 8:i64
infer %3
%4:i64 = mul 256:i64, %1
result %4
%0:i32 = var
%1:i1 = slt %0, 128:i32
pc %1 0:i1
%2:i32 = and 4294965248:i32, %0
%3:i1 = eq 55296:i32, %2
pc %3 0:i1
%4:i32 = and 4294967294:i32, %0
%5:i1 = eq 65534:i32, %4
pc %5 0:i1
%6:i1 = ule %0, 65535:i32
pc %6 0:i1
%7:i32 = lshr %0, 10:i32
%8:i32 = and 63:i32, %7
%9:i32 = subnw %0, 65536:i32 (hasExternalUses)
%10:i32 = lshr %9, 10:i32
%11:i32 = and 192:i32, %10
%12:i32 = addnw %8, %11
%13:i8 = trunc %12
infer %13
%14:i8 = trunc %10
result %14
%0 = block 2
%1:i32 = select 1:i1, 16:i32, 2:i32
%2:i32 = or 32:i32, %1
%3:i32 = phi %0, %2, 16:i32
%4:i32 = and 32:i32, %3
%5:i1 = ne 0:i32, %4
infer %5
%6:i1 = eq %3, %2
result %6
%0:i8 = var
%1:i32 = zext %0
%2:i32 = subnsw %1, 97:i32
%3:i32 = addnsw 138:i32, %2
infer %3
%4:i32 = add 41:i32, %1
result %4
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2 = block 1
%3:i32 = phi %2, %0
%4:i1 = eq 101:i32, %3
infer %4
%5:i1 = eq 101:i32, %0
result %5
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 0:i1
%3:i32 = and 7:i32, %1
%4:i1 = eq 0:i32, %3
pc %4 1:i1
%5:i32 = addnsw 8:i32, %1
%6:i64 = sext %5
%7:i64 = mulnsw 40:i64, %6
%8:i32 = trunc %7
infer %8
%9:i32 = mul 40:i32, %5
result %9
%0:i8 = var
%1:i32 = zext %0
%2:i32 = and 1:i32, %1
%3:i1 = ne 0:i32, %2
infer %3
%4:i1 = trunc %0
result %4
%0 = block 2
%1:i8 = phi %0, 1:i8, 0:i8
%2:i32 = zext %1
%3:i1 = ne 0:i32, %2
infer %3
%4:i1 = trunc %1
result %4
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 0:i1
%3 = block 1
%4:i32 = phi %3, %0
infer %4
result %0
%0:i1 = ne 0:i8, 88:i8
infer %0
result 1:i1
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3
%9:i32 = trunc %8 (hasExternalUses)
%10:i33 = umul.with.overflow 1:i32, %9
%11:i32 = extractvalue %10, 0:i32
%12:i32 = sub %5, %11
%13:i1 = ult %5, %12
%14:i32 = add %5, %11
%15:i1 = ult %14, %5
%16:i1 = select 1:i1, %13, %15
%17:i1 = ult 4294967295:i64, %8
%18:i1 = or %16, %17
%19:i1 = extractvalue %10, 1:i32
%20:i1 = or %18, %19
%21:i1 = or 0:i1, %20
pc %21 0:i1
%22:i1 = ult %3, 16:i64
pc %22 0:i1
%23:i64 = urem %3, 16:i64
infer %23
%24:i64 = and 15:i64, %2
result %24
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i1 = slt 0:i32, %0
pc %1 1:i1
%2:i64 = zext %0
%3:i64 = mulnw 8:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 8:i32, %0
result %5
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 4:i32, %1
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i32 = and 4294967264:i32, %1
%5:i32 = or 4:i32, %4
%6:i16 = trunc %5
infer %6
%7:i16 = and 65508:i16, %0
result %7
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 87:i32, %1
infer %2
%3:i1 = eq 87:i8, %0
result %3
%0 = block 2
%1:i32 = select 0:i1, 16:i32, 2:i32
%2:i32 = or 32:i32, %1
%3:i32 = or 64:i32, %2
%4:i32 = select 0:i1, 128:i32, 64:i32
%5:i32 = or %2, %4
%6:i32 = phi %0, %3, %5
%7:i16 = trunc %6
infer %7
result 98:i16
%0:i16 = var
%1:i32 = sext %0
%2:i64 = sext %1
infer %2
%3:i64 = sext %0
result %3
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 3:i32, %1
infer %2
%3:i1 = eq 3:i8, %0
result %3
%0:i8 = var
%1:i64 = zext %0
%2:i8 = trunc %1
%3:i8 = urem %2, 62:i8
%4:i64 = zext %3
infer %4
%5:i64 = urem %1, 62:i64
result %5
%0:i64 = var
%1:i32 = trunc %0
%2:i32 = and 2147483647:i32, %1
%3:i32 = shlnuw %2, 1:i32
%4:i32 = or 0:i32, %3
%5:i32 = and 4294967294:i32, %4
%6:i32 = and 4294967294:i32, %5
%7:i32 = or 1:i32, %6
infer %7
%8:i32 = add 1:i32, %3
result %8
%0 = block 4
%1:i32 = var
%2:i32 = and 255:i32, %1
%3:i1 = eq 13:i32, %2
%4:i1 = phi %0, 1:i1, 1:i1, 1:i1, %3
%5:i32 = zext %4
%6:i1 = ne 0:i32, %5
infer %6
result %4
%0 = block 2
%1:i32 = var
%2:i32 = addnsw 5:i32, %1
%3:i32 = phi %0, %2, %2
%4:i32 = var
%5:i32 = var
%6:i32 = phi %0, %4, %5
%7:i1 = slt %3, %6
pc %7 1:i1
%8:i64 = zext %3
infer %8
%9:i64 = zext %2
result %9
%0:i32 = var
%1:i1 = ne 0:i32, %0
pc %1 1:i1
%2 = block 1
%3:i32 = phi %2, %0
%4:i32 = subnsw 0:i32, %3
infer %4
%5:i32 = sub 0:i32, %0
result %5
%0:i1 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
%3:i1 = xor 1:i1, %2
infer %3
%4:i1 = xor 1:i1, %0
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i1 = eq 0:i32, %5
infer %6
%7:i1 = eq %2, %4
result %7
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 6:i32, %1
%3:i64 = sext %2
infer %3
result 6:i64
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = eq 64:i32, %1
pc %2 0:i1
%3:i1 = sle 68:i32, %1
pc %3 0:i1
%4:i1 = eq 65:i32, %1
%5:i32 = zext %4
%6:i1 = ne 0:i32, %5
infer %6
%7:i1 = eq 65:i8, %0
result %7
%0:i8 = var
%1:i1 = ne 0:i8, %0
%2:i1 = xor 1:i1, %1
%3:i32 = zext %2
%4:i8 = trunc %3
infer %4
%5:i8 = zext %2
result %5
%0:i32 = select 0:i1, 16:i32, 2:i32
%1:i32 = or 64:i32, %0
infer %1 (demandedBits=00000000000000001111111111111111)
result 66:i32
%0 = block 1
%1:i64 = var
%2:i64 = phi %0, %1
%3:i64 = var
%4:i64 = sub %2, %3
infer %4 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%5:i64 = sub %1, %3
result %5
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 107:i32, %1
infer %2
%3:i1 = eq 107:i8, %0
result %3
%0:i32 = var
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i32 = addnsw 1:i32, %1
%3:i64 = sext %2
%4:i64 = mulnsw 8:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = mul 8:i32, %2
result %6
%0 = block 2
%1:i32 = zext 0:i1
%2:i8 = trunc %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
%5:i1 = phi %0, 1:i1, %4
%6:i32 = zext %5
%7:i8 = trunc %6
infer %7
%8:i8 = zext %5
result %8
%0:i64 = var
%1 = block 2
%2:i64 = var
%3:i64 = var
%4:i64 = phi %1, %2, %3
%5:i1 = slt %0, %4
pc %5 0:i1
%6 = block 1
%7:i64 = phi %6, %0
infer %7
result %0
%0:i32 = var
%1:i1 = ne 0:i32, %0
pc %1 1:i1
%2 = block 1
%3:i32 = phi %2, %0
infer %3
result %0
%0 = block 2
%1 = block 2
%2:i8 = var
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
%5:i1 = phi %1, 0:i1, %4
%6:i1 = phi %0, 1:i1, %5
%7:i1 = xor 1:i1, %6
%8:i32 = zext %7
%9:i8 = trunc %8
infer %9
%10:i8 = zext %7
result %10
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = sext %1
%3:i64 = addnsw 32:i64, %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%4:i64 = add 32:i64, %0
result %4
%0:i32 = var (signBits=10) (range=[0,1114112))
%1:i1 = ult %0, 128:i32
pc %1 1:i1
%2:i32 = and 255:i32, %0
%3:i8 = trunc %2
infer %3
%4:i8 = trunc %0
result %4
%0 = block 7
%1:i64 = var (knownBits=0000000000000000000000000000000000000000000000000000000000000000) (nonNegative)
%2:i64 = var
%3:i64 = phi %0, %1, %1, %1, 0:i64, %2, %2, %2
%4:i1 = ne 0:i64, %3
pc %4 1:i1
%5:i1 = eq 0:i64, %3
infer %5
%6:i1 = trunc %1
result %6
%0 = block 4
%1:i16 = var
%2 = block 4
%3 = block 1
%4:i16 = var
%5:i16 = phi %3, %4
%6:i16 = var
%7:i16 = phi %2, %5, %5, %5, %6
%8:i16 = phi %0, %1, %7, %7, %5
%9:i32 = sext %8
%10:i1 = slt 0:i32, %9
infer %10
%11 = block 4
%12 = block 4
%13 = block 1
%14:i16 = phi %13, %4
%15:i16 = phi %12, %14, %14, %14, %6
%16:i16 = phi %11, %1, %15, %15, %14
%17:i1 = slt 0:i16, %16
result %17
%0 = block 2
%1:i8 = var
%2:i32 = sext %1
%3:i32 = subnsw %2, 56:i32
%4:i32 = var
%5:i32 = phi %0, %3, %4
%6 = block 3
%7:i32 = phi %6, 0:i32, 0:i32, 1:i32
%8:i1 = slt %5, %7
%9:i32 = zext %8
%10:i1 = ne 0:i32, %9
infer %10
result %8
%0:i32 = trunc 0:i64 (hasExternalUses)
%1:i64 = sext %0
infer %1
result 0:i64
%0:i64 = var
%1:i64 = ashr %0, 63:i64
%2:i32 = trunc %1 (hasExternalUses)
%3:i64 = var
%4:i64 = ashr %3, 63:i64
%5:i32 = trunc %4 (hasExternalUses)
%6:i32 = and %2, %5
%7:i64 = addnsw %0, %3 (hasExternalUses)
%8:i64 = ashr %7, 63:i64
%9:i32 = trunc %8 (hasExternalUses)
%10:i32 = xor 4294967295:i32, %9
%11:i32 = and %6, %10
infer %11 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i16 = var
%1:i32 = sext %0
%2:i1 = eq 4294967295:i32, %1
infer %2
%3:i1 = eq 65535:i16, %0
result %3
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i1 = slt 0:i32, %1
pc %2 0:i1
%3 = block 1
%4:i64 = phi %3, %0
infer %4 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %0
%0:i64 = var (knownBits=00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (signBits=32) (range=[0,4294967295))
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = zext %1
%3:i64 = mulnw 24:i64, %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%4:i64 = mul 24:i64, %0
result %4
%0:i32 = and 0:i32, 1:i32
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
%5:i32 = or %0, %4
%6:i32 = and 4294967294:i32, %5
%7:i32 = and 4294967294:i32, %6
infer %7 (demandedBits=11111111111111111111111111111110)
%8:i32 = add %2, %2
result %8
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = var
%4:i1 = slt %0, %3
pc %4 1:i1
%5:i1 = sle 0:i32, %0
pc %5 1:i1
%6:i32 = mulnw 0:i32, %3
infer %6
result 0:i32
%0 = block 1
%1:i64 = var
%2:i64 = phi %0, %1
%3 = block 2
%4 = block 3
%5 = block 2
%6:i64 = var
%7:i64 = var
%8:i64 = phi %5, %6, %7
%9:i64 = var
%10:i64 = phi %4, %8, %9, %9
%11 = block 1
%12:i64 = var
%13:i64 = phi %11, %12
%14:i64 = phi %3, %10, %13
%15:i64 = sub %2, %14
infer %15 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%16:i64 = sub %1, %14
result %16
%0:i8 = var
%1:i32 = zext %0
%2:i32 = and 1:i32, %1
%3:i1 = ne 0:i32, %2
%4:i32 = zext %3
infer %4
result %2
%0:i32 = var
%1:i32 = mul 2:i32, %0
%2:i64 = zext %1
%3:i64 = mulnw 8:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 16:i32, %0
result %5
%0:i32 = and 0:i32, 1:i32
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
%5:i32 = or %0, %4
%6:i32 = and 4294967294:i32, %5
infer %6
%7:i32 = add %2, %2
result %7
%0:i1 = eq 256:i64, 256:i64
infer %0
result 1:i1
%0 = block 3
%1:i32 = var
%2:i1 = ne 23:i32, %1
%3:i1 = phi %0, 1:i1, 1:i1, %2
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
infer %5
result %3
%0:i32 = var
%1:i32 = mul 37:i32, %0
%2:i64 = zext %1
%3:i32 = trunc %2
infer %3
result %1
%0:i64 = var
%1:i64 = ashr %0, 63:i64
%2:i32 = trunc %1 (hasExternalUses)
%3:i32 = xor 4294967295:i32, %2
%4:i64 = var
%5:i64 = ashr %4, 63:i64
%6:i32 = trunc %5 (hasExternalUses)
%7:i32 = xor 4294967295:i32, %6
%8:i32 = and %3, %7
%9:i64 = addnsw %0, %4 (hasExternalUses)
%10:i64 = ashr %9, 63:i64
%11:i32 = trunc %10 (hasExternalUses)
%12:i32 = and %8, %11
infer %12 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i32 = var (signBits=25) (range=[-128,128))
%1:i1 = ne 45:i32, %0
pc %1 1:i1
%2:i1 = ne 43:i32, %0
pc %2 1:i1
%3:i1 = ne 32:i32, %0
pc %3 1:i1
%4:i1 = ne 35:i32, %0
pc %4 1:i1
%5:i1 = ne 33:i32, %0
pc %5 1:i1
%6:i1 = ne 48:i32, %0
pc %6 1:i1
%7 = block 1
%8:i32 = phi %7, %0
%9:i1 = eq 42:i32, %8
infer %9
%10:i1 = eq 42:i32, %0
result %10
%0:i32 = addnw 1:i32, 13:i32
infer %0
result 14:i32
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 8192:i32, %1
%3:i1 = ne 0:i32, %2
%4:i1 = xor 1:i1, %3
infer %4
%5:i1 = eq 0:i32, %2
result %5
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, 0:i32, %1, 0:i32
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i1 = sle 0:i32, %2
pc %4 1:i1
%5:i32 = var
%6:i1 = slt %2, %5
infer %6
%7:i1 = slt %1, %5
result %7
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i1 = sle 0:i32, %0
pc %3 1:i1
%4:i32 = mulnw 0:i32, %1
infer %4
result 0:i32
%0 = block 2
%1 = block 2
%2:i64 = var
%3:i64 = addnuw 1:i64, %2
%4:i32 = trunc %3
%5:i32 = phi %1, %4, 0:i32
%6:i32 = phi %0, %5, 1:i32
%7:i1 = slt 0:i32, %6
pc %7 1:i1
%8:i32 = add 4294967295:i32, %6
%9:i64 = zext %8
%10:i64 = addnw 1:i64, %9
infer %10 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%11:i64 = sext %6
result %11
%0 = block 2
%1 = block 1
%2:i32 = var (range=[-2147483647,-2147483648))
%3:i32 = phi %1, %2
%4:i32 = phi %0, 0:i32, %3
%5:i1 = slt 0:i32, %4
pc %5 1:i1
%6:i32 = subnw %4, 1:i32
infer %6
%7:i32 = add 4294967295:i32, %2
result %7
%0 = block 3
%1:i8 = var
%2:i8 = phi %0, %1, 100:i8, 99:i8
%3:i32 = zext %2
%4:i32 = subnsw %3, 97:i32
%5:i32 = addnsw 138:i32, %4
%6:i8 = trunc %5
infer %6
%7 = block 3
%8:i8 = phi %7, %1, 100:i8, 99:i8
%9:i8 = add 41:i8, %8
result %9
%0:i32 = and 0:i32, 1:i32
%1 = block 2
%2:i64 = var
%3:i64 = phi %1, %2, 0:i64
%4:i32 = trunc %3
%5:i32 = and 2147483647:i32, %4
%6:i32 = shlnuw %5, 1:i32
%7:i32 = or %0, %6
%8:i32 = and 4294967294:i32, %7
infer %8
%9:i32 = add %4, %4
result %9
%0:i8 = var
%1:i32 = zext %0
%2:i32 = and 128:i32, %1
%3:i1 = ne 0:i32, %2
infer %3
%4:i1 = ult 127:i8, %0
result %4
%0:i32 = zext 0:i8
infer %0 (demandedBits=11111111100000000000000000000000)
result 0:i32
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3:i8 = var
%4:i32 = zext %3 (hasExternalUses)
%5:i1 = eq %4, %1
pc %5 1:i1
%6:i8 = var
%7:i32 = zext %6
%8:i1 = eq %4, %7
infer %8
%9:i1 = eq %3, %6
result %9
%0 = block 2
%1 = block 2
%2:i64 = var
%3 = block 3
%4:i64 = var
%5:i64 = phi %3, %4, 0:i64, 0:i64
%6:i64 = phi %1, %2, %5
%7:i64 = phi %0, 0:i64, %6
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i1 = eq 0:i64, %7
infer %9
%10:i1 = ult %4, %5
result %10
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 102:i32
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i32 = subnsw %1, 115:i32
%5:i1 = eq 0:i32, %4
pc %5 0:i1
%6:i32 = subnsw %1, 99:i32
%7:i1 = eq 0:i32, %6
pc %7 0:i1
%8:i32 = subnsw %1, 101:i32
%9:i1 = eq 0:i32, %8
pc %9 0:i1
%10:i32 = subnsw %1, 108:i32
%11:i1 = eq 0:i32, %10
infer %11
%12:i1 = eq 108:i8, %0
result %12
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 1:i32, %1
%3:i64 = sext %2
infer %3
result 1:i64
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32768))
%1:i16 = var
%2:i32 = sext %1
%3:i1 = slt 0:i32, %2
%4:i32 = select %3, %2, 0:i32
%5:i64 = zext %4
%6:i1 = ne %0, %5
pc %6 1:i1
%7 = block 1
%8:i64 = phi %7, %0
%9:i32 = trunc %8
infer %9
%10:i32 = trunc %0
result %10
%0:i32 = var (knownBits=0000000000000000xxxxxxxxxxxxxxxx) (nonNegative) (signBits=16) (range=[0,65536))
%1:i32 = and 4294967283:i32, %0
%2:i16 = trunc %1 (hasExternalUses)
%3:i32 = zext %2
infer %3 (demandedBits=00000000000000001111111111100000)
result %0
%0:i32 = var
%1:i32 = and 8:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3
infer %4
%5:i8 = zext %2
result %5
%0:i32 = select 0:i1, 1:i32, 0:i32
infer %0
result 0:i32
%0:i64 = var
%1:i64 = and 18374686479671623680:i64, %0
%2:i1 = ne 0:i64, %1
infer %2
%3:i1 = ult 72057594037927935:i64, %0
result %3
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (nonNegative) (range=[0,2147483647))
%1:i32 = var
%2:i32 = addnsw 4294967295:i32, %1
%3:i1 = slt %0, %2
pc %3 1:i1
%4:i32 = sdiv %0, 2:i32
infer %4
%5:i32 = ashr %0, 1:i32
result %5
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3
infer %8
result %1
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
infer %7
result 0:i1
%0 = block 2
%1:i8 = var
%2:i8 = var
%3:i8 = phi %0, %1, %2
%4:i32 = zext %3
%5:i32 = addnw 1:i32, %4
%6:i8 = trunc %5
infer %6
%7 = block 2
%8:i8 = phi %7, %1, %2
%9:i8 = add 1:i8, %8
result %9
%0:i32 = var (knownBits=0000000000000000000000000000000x) (nonNegative) (signBits=31) (range=[0,2))
%1:i1 = ne 0:i32, %0
pc %1 0:i1
%2:i32 = var
%3:i1 = slt 0:i32, %2
pc %3 0:i1
%4:i32 = addnw %2, %0
infer %4
result %2
%0 = block 2
%1:i32 = var
%2 = block 2
%3:i32 = var
%4:i32 = phi %2, %3, %1
%5:i32 = phi %0, %1, %4
%6:i1 = sle 0:i32, %5
%7:i32 = zext %6
%8:i8 = trunc %7
infer %8
%9:i8 = zext %6
result %9
%0:i32 = var
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i64 = sext %1
%3:i64 = mulnsw 8:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 8:i32, %1
result %5
%0:i32 = var (range=[1,5))
%1:i32 = add 4294967295:i32, %0
%2:i1 = slt %1, 0:i32
%3:i32 = select %2, %1, 0:i32
%4:i32 = sub %1, %3
%5:i64 = zext %4
%6:i64 = addnw 1:i64, %5 (hasExternalUses)
%7:i1 = ult %6, 8:i64
pc %7 0:i1
%8:i64 = urem %6, 8:i64
infer %8
%9:i64 = sext %0
result %9
%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, %1
%3:i32 = trunc %2
infer %3
%4:i32 = trunc %1
result %4
%0:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000) (range=[0,225))
%1:i64 = add 0:i64, %0
infer %1
result %0
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 125:i32, %1
infer %2
%3:i1 = eq 125:i8, %0
result %3
%0:i32 = zext 0:i8
%1:i32 = shlnw %0, 8:i32
%2:i8 = var
%3:i32 = zext %2
%4:i32 = or %1, %3
infer %4 (demandedBits=00000000000000000000000011111111)
result %3
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 32:i32, %1
infer %2
%3:i1 = eq 32:i8, %0
result %3
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3 = block 1
%4:i8 = phi %3, %0
infer %4
result %0
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
pc %2 0:i1
%3:i1 = ne 0:i8, %0
infer %3
result 0:i1
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32767))
%1:i32 = addnsw 1:i32, %0 (hasExternalUses)
%2:i16 = var
%3:i32 = sext %2
%4:i1 = slt %1, %3
pc %4 0:i1
%5 = block 1
%6:i16 = phi %5, %2
%7:i32 = sext %6
infer %7
result %3
%0:i32 = var
%1:i32 = and 255:i32, %0 (hasExternalUses)
%2:i1 = eq 7:i32, %1
pc %2 0:i1
%3:i1 = eq 10:i32, %1
pc %3 0:i1
%4:i1 = eq 9:i32, %1
pc %4 0:i1
%5:i1 = eq 13:i32, %1
%6:i32 = zext %5
%7:i1 = ne 0:i32, %6
infer %7
result %5
%0 = block 1
%1:i32 = var
%2:i32 = phi %0, %1
%3:i1 = slt 1:i32, %2
infer %3
%4:i1 = slt 1:i32, %1
result %4
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = sext %1
%3:i64 = addnsw 32:i64, %2
%4:i64 = addnsw 1:i64, %3
infer %4 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%5:i64 = add 33:i64, %0
result %5
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, %1
%3:i1 = eq 100:i32, %2
infer %3
%4:i1 = eq 100:i32, %1
result %4
%0:i32 = var
%1:i32 = and 2147483647:i32, %0
infer %1 (demandedBits=01111111111111111111111111111111)
result %0
%0:i32 = var
%1:i64 = zext %0 (hasExternalUses)
%2:i64 = and 18374686479671623680:i64, %1
%3:i1 = ne 0:i64, %2
pc %3 1:i1
%4:i64 = lshr %1, 8:i64 (hasExternalUses)
%5:i64 = lshr %4, 7:i64 (hasExternalUses)
%6:i64 = and 127:i64, %5
%7:i64 = or 128:i64, %6
%8:i8 = trunc %7
infer %8
%9:i8 = trunc %0
result %9
%0 = block 3
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = phi %0, 4293967296:i32, %1, %1
%3:i1 = sle 0:i32, %2
pc %3 1:i1
%4:i32 = var
%5:i32 = shlnuw 1:i32, %2 (hasExternalUses)
%6:i32 = and %4, %5
%7:i1 = eq 0:i32, %6
pc %7 1:i1
%8:i64 = zext %2
infer %8
%9:i64 = sext %1
result %9
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,4294967295))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i32 = var
%3:i64 = zext %2
%4:i1 = ne %1, %3
pc %4 0:i1
%5:i32 = add 4294967295:i32, %2
%6:i64 = zext %5
%7:i64 = addnw 1:i64, %6
%8:i32 = trunc %7
infer %8
result %2
%0:i32 = var (range=[0,100))
%1:i8 = trunc %0 (hasExternalUses)
%2:i8 = urem %1, 10:i8
%3:i32 = zext %2
infer %3 (demandedBits=00000000000000000000000011111111)
%4:i32 = urem %0, 10:i32
result %4
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3
%9:i32 = trunc %8 (hasExternalUses)
%10:i33 = umul.with.overflow 1:i32, %9
%11:i32 = extractvalue %10, 0:i32
%12:i32 = sub %5, %11
%13:i1 = ult %5, %12
%14:i32 = add %5, %11
%15:i1 = ult %14, %5
%16:i1 = select 1:i1, %13, %15
%17:i1 = ult 4294967295:i64, %8
%18:i1 = or %16, %17
%19:i1 = extractvalue %10, 1:i32
%20:i1 = or %18, %19
infer %20
result 0:i1
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 59:i32, %1
infer %2
%3:i1 = eq 59:i8, %0
result %3
%0:i16 = var
%1:i32 = sext %0
%2:i1 = eq 1:i32, %1
infer %2
%3:i1 = eq 1:i16, %0
result %3
%0:i32 = var
%1:i1 = eq 5:i32, %0
pc %1 0:i1
%2:i1 = ne 0:i32, %0
pc %2 1:i1
%3 = block 1
%4:i32 = phi %3, %0
infer %4
result %0
%0:i32 = var (knownBits=000000000000000000000000xxxxxxxx) (nonNegative) (signBits=24) (range=[0,256))
%1:i1 = ne 0:i32, %0
%2:i64 = var (range=[-9223372036854775808,4294967295))
%3:i64 = addnsw 18446744073709551615:i64, %2 (hasExternalUses)
%4:i1 = ne 0:i64, %3
%5:i1 = and %1, %4
pc %5 0:i1
%6 = block 1
%7:i32 = phi %6, %0
infer %7
result %0
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32767))
%1:i32 = addnw 1:i32, %0 (hasExternalUses)
%2:i16 = var
%3:i32 = sext %2
%4:i1 = slt %1, %3
pc %4 0:i1
%5 = block 1
%6:i16 = phi %5, %2
infer %6
result %2
%0:i16 = var
%1:i32 = zext %0
%2:i32 = or 64:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = and 4294966911:i32, %4
infer %5 (demandedBits=00000000000000001111111111111111)
%6:i32 = and 65151:i32, %2
result %6
%0:i32 = var
%1:i32 = and 8:i32, %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3 (hasExternalUses)
%5:i32 = zext %4
%6:i1 = eq 0:i32, %5
%7:i32 = zext %6
%8:i32 = mulnw 4:i32, %7
infer %8 (demandedBits=00000000000000000000000011111111)
%9:i32 = shl 4:i32, %1
result %9
%0:i8 = var
%1:i32 = sext %0
%2:i1 = sle 99:i32, %1
infer %2
%3:i1 = slt 98:i8, %0
result %3
%0:i8 = var
%1:i1 = ne 0:i8, %0
pc %1 1:i1
%2:i32 = sext %0
%3:i64 = sext %2
infer %3
%4:i64 = sext %0
result %4
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65536))
%1:i16 = var
%2:i32 = zext %1 (hasExternalUses)
%3:i1 = slt %0, %2
pc %3 1:i1
%4:i1 = eq %0, %2
infer %4
result 0:i1
%0 = block 2
%1 = block 1
%2:i16 = var
%3:i16 = phi %1, %2
%4:i32 = zext %3
%5:i32 = phi %0, 0:i32, %4
%6:i1 = ne 0:i32, %5
pc %6 1:i1
%7:i32 = mulnsw 2:i32, %5
infer %7 (demandedBits=00000000000000001111111111111111)
%8:i32 = add %4, %4
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i32 = subnsw 111:i32, %1
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 111:i8, %0
result %4
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i1 = slt 0:i32, %1
pc %2 1:i1
%3:i64 = zext %1 (hasExternalUses)
%4:i1 = ult %3, 8:i64
pc %4 0:i1
%5:i64 = urem %3, 8:i64
infer %5
%6:i64 = and 7:i64, %0
result %6
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
%5:i32 = or 0:i32, %4
infer %5 (demandedBits=11111111111111111111111111111110)
%6:i32 = add %1, %1
result %6
%0:i32 = var
%1:i1 = ne 0:i32, %0
%2:i32 = select %1, 2:i32, 1:i32
%3:i8 = trunc %2
infer %3
%4:i8 = select %1, 2:i8, 1:i8
result %4
%0:i8 = var
%1:i1 = ne 0:i8, %0
pc %1 1:i1
%2:i32 = sext %0
%3:i1 = eq 34:i32, %2
infer %3
%4:i1 = eq 34:i8, %0
result %4
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64
%14:i64 = or 128:i64, %13
infer %14 (demandedBits=0000000000000000000000000000000000000000000000000000000011111111)
result 255:i64
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 0:i1
%3:i32 = addnsw 1:i32, %1
%4:i64 = sext %3
%5:i64 = mul 48:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 48:i32, %3
result %7
%0 = block 1
%1 = block 1
%2:i64 = var
%3:i64 = phi %1, %2
%4:i64 = phi %0, %3
infer %4 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %2
%0:i32 = var
%1:i32 = and 4294967294:i32, %0
%2:i32 = or 1:i32, %1
infer %2
%3:i32 = or 1:i32, %0
result %3
%0:i32 = var
%1:i64 = sext %0
%2:i64 = mulnsw 40:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 40:i32, %0
result %4
%0:i64 = var
%1:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000) (nonZero)
%2:i64 = sub %0, %1
%3:i32 = trunc %2 (hasExternalUses)
%4:i32 = var
%5:i1 = slt %3, %4
pc %5 1:i1
%6:i32 = subnsw %4, %3 (hasExternalUses)
%7:i1 = sle %6, %4
pc %7 1:i1
%8:i64 = sext %4 (hasExternalUses)
%9:i64 = add 18446744073709551615:i64, %8
%10:i64 = sext %3
%11:i64 = sub %9, %10
%12:i64 = addnsw 18446744073709551615:i64, %8
%13:i1 = slt %11, %12
%14:i64 = select %13, %11, %12
%15:i64 = sub %8, %14 (hasExternalUses)
%16:i1 = ult %15, 4:i64
pc %16 0:i1
infer %14
result %11
%0:i16 = var
%1:i32 = zext %0
%2:i1 = sle 100:i32, %1
infer %2
%3:i1 = ult 99:i16, %0
result %3
%0:i32 = select 0:i1, 16:i32, 2:i32
infer %0 (demandedBits=00000000000000001111111111011111)
result 2:i32
%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
%5:i32 = shl %4, 1:i32
infer %5 (demandedBits=11111111111111111111111111111110)
%6:i32 = add %3, %3
result %6
%0 = block 2
%1 = block 1
%2:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%3:i32 = addnsw 1:i32, %2
%4:i32 = phi %1, %3
%5:i32 = phi %0, 0:i32, %4
%6:i1 = slt %5, 2:i32
pc %6 0:i1
%7:i32 = subnw %5, 1:i32
%8:i64 = zext %7
infer %8
%9:i64 = sext %2
result %9
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = lshr %1, 8:i32
infer %2 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i32 = var
%1:i64 = sext %0
%2:i64 = mulnsw 24:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 24:i32, %0
result %4
%0 = block 5
%1:i8 = var
%2:i32 = zext %1
%3:i32 = shlnuw %2, 24:i32
%4:i8 = var
%5:i32 = zext %4
%6:i32 = shlnw %5, 16:i32
%7:i32 = or %3, %6
%8:i8 = var
%9:i32 = zext %8
%10:i32 = shlnw %9, 8:i32
%11:i32 = or %7, %10
%12:i8 = var
%13:i32 = zext %12
%14:i32 = or %11, %13
%15:i32 = phi %0, %14, %14, %14, %14, %14
%16:i1 = eq 1:i32, %15
infer %16
%17:i1 = eq 1:i32, %14
result %17
%0:i32 = var (range=[1,0))
%1:i32 = addnsw 1:i32, %0
%2:i64 = zext %1
%3:i64 = mul 4:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 4:i32, %1
result %5
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i32 = phi %0, %1
%3:i1 = sle 0:i32, %2
pc %3 1:i1
%4:i1 = sle 32:i32, %2
infer %4
%5:i1 = ult 31:i32, %1
result %5
%0:i32 = var (range=[0,65536))
%1:i32 = and 255:i32, %0
infer %1 (demandedBits=00000000000000000000000011111111)
result %0
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i32 = ashr %5, 8:i32
%7:i8 = trunc %6
infer %7
result %0
%0:i32 = var
%1:i32 = mulnsw 5:i32, %0 (hasExternalUses)
%2:i64 = sext %1
%3:i64 = mul 48:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 240:i32, %0
result %5
%0:i64 = var
%1:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000) (nonZero)
%2:i64 = sub %0, %1
%3:i32 = trunc %2 (hasExternalUses)
%4:i32 = var
%5:i1 = slt %3, %4
pc %5 1:i1
%6:i32 = subnsw %4, %3 (hasExternalUses)
%7:i1 = sle %6, %4
pc %7 1:i1
%8:i64 = sext %4 (hasExternalUses)
%9:i64 = add 18446744073709551615:i64, %8
%10:i64 = sext %3
%11:i64 = sub %9, %10
%12:i64 = addnsw 18446744073709551615:i64, %8
%13:i1 = slt %11, %12
%14:i64 = select %13, %11, %12
%15:i64 = sub %8, %14 (hasExternalUses)
%16:i1 = ult %15, 4:i64
pc %16 0:i1
%17:i64 = sub %9, %14
infer %17
%18:i64 = sub %9, %11
result %18
%0 = block 3
%1 = block 4
%2:i32 = phi %1, 0:i32, 0:i32, 1:i32, 1:i32
%3:i32 = phi %0, %2, 0:i32, 0:i32
%4:i1 = ne 0:i32, %3
%5:i1 = xor 1:i1, %4
infer %5
%6 = block 3
%7 = block 4
%8:i32 = phi %7, 0:i32, 0:i32, 1:i32, 1:i32
%9:i32 = phi %6, %8, 0:i32, 0:i32
%10:i1 = eq 0:i32, %9
result %10
%0:i16 = var
%1:i32 = zext %0
%2:i32 = addnw 2:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = add 2:i16, %0
result %4
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64 (hasExternalUses)
%14:i64 = lshr %13, 7:i64 (hasExternalUses)
%15:i64 = and 127:i64, %14
%16:i64 = or 128:i64, %15
infer %16 (demandedBits=0000000000000000000000000000000000000000000000000000000011111111)
result 255:i64
%0 = block 2
%1 = block 1
%2:i16 = var
%3:i16 = phi %1, %2
%4:i32 = zext %3
%5:i32 = phi %0, 0:i32, %4
%6:i1 = slt 0:i32, %5
pc %6 1:i1
%7:i64 = zext %5
infer %7
%8:i64 = zext %2
result %8
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 4294967291:i32, %1
infer %2
%3:i1 = eq 251:i8, %0
result %3
%0 = block 2
%1 = block 3
%2:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%3:i64 = addnw 1:i64, %2
%4:i32 = trunc %3
%5:i32 = trunc %2
%6:i32 = phi %1, %4, %5, 0:i32
%7:i32 = phi %0, 4293967296:i32, %6
%8:i1 = sle 0:i32, %7
pc %8 1:i1
%9:i32 = shlnuw 1:i32, %7
infer %9
%10 = block 3
%11:i32 = phi %10, %4, %5, 0:i32
%12:i32 = shl 1:i32, %11
result %12
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnuw %1, 24:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %2, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i32 = or %6, %9
%11:i8 = var
%12:i32 = zext %11
%13:i32 = or %10, %12
%14:i1 = ne 0:i32, %13
%15:i32 = select %14, 1:i32, 0:i32
infer %15 (demandedBits=00000000000000000000000011111111)
%16:i32 = zext %14
result %16
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i32 = var
%3:i64 = sext %2
%4:i1 = slt %1, %3
pc %4 0:i1
%5 = block 1
%6:i32 = phi %5, %2
%7:i64 = sext %6
infer %7
result %3
%0:i32 = var
%1:i1 = eq 5:i32, %0
pc %1 0:i1
%2:i1 = eq 0:i32, %0
pc %2 0:i1
%3:i1 = ne 0:i32, %0
infer %3
result 1:i1
%0:i8 = var
%1:i32 = zext %0
%2:i8 = var
%3:i32 = sext %2 (hasExternalUses)
%4:i32 = add %1, %3
%5:i8 = trunc %4
infer %5
%6:i8 = add %0, %2
result %6
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
%3:i8 = var
%4:i32 = sext %3 (hasExternalUses)
%5:i1 = ne %4, %1
%6:i1 = and %2, %5
%7:i8 = var
%8:i32 = sext %7
%9:i1 = ne %8, %1
%10:i1 = and %6, %9
%11:i8 = var
%12:i32 = sext %11
%13:i1 = ne %12, %1
%14:i1 = and %10, %13
pc %14 0:i1
%15:i32 = zext %0
%16:i1 = eq 255:i32, %15
infer %16
%17:i1 = eq 255:i8, %0
result %17
%0:i16 = var
%1:i32 = sext %0
%2:i32 = subnsw %1, 1:i32
%3:i1 = slt 0:i32, %2
infer %3
%4:i1 = slt 1:i16, %0
result %4
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3 = block 1
%4:i8 = phi %3, %0
infer %4
result %0
%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 1:i32
%3:i32 = subnsw %2, 3:i32
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = phi %0, %4, %4
%6:i1 = slt 0:i32, %5
infer %6
%7:i1 = ult 9:i32, %1
result %7
%0:i64 = var
%1:i32 = trunc %0
%2:i32 = and 2147483647:i32, %1
%3:i32 = shl %2, 1:i32
infer %3
%4:i32 = add %1, %1
result %4
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3 = block 1
%4:i8 = phi %3, %0
%5:i32 = zext %4
%6:i64 = sext %5
infer %6
%7:i64 = zext %0
result %7
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, %1
%3:i1 = eq 100:i32, %2
pc %3 0:i1
%4:i1 = eq 0:i32, %2
infer %4
%5:i1 = eq 0:i32, %1
result %5
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i1 = sle 0:i32, %0
infer %3
result 1:i1
%0 = block 2
%1 = block 3
%2:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%3:i32 = trunc %2
%4:i64 = addnw 1:i64, %2
%5:i32 = trunc %4
%6:i32 = phi %1, %3, %5, 0:i32
%7:i32 = phi %0, 4293967296:i32, %6
%8:i32 = shlnuw 1:i32, %7
infer %8
%9 = block 3
%10:i32 = phi %9, %3, %5, 0:i32
%11:i32 = shl 1:i32, %10
result %11
%0:i32 = var (knownBits=000000000000000000000000xxxxxxxx) (nonNegative) (signBits=24) (range=[1,256))
%1:i8 = var
%2:i32 = zext %1 (hasExternalUses)
%3:i1 = eq %0, %2
pc %3 1:i1
%4:i8 = var
%5:i32 = zext %4
%6:i1 = eq %2, %5
infer %6
%7:i1 = eq %1, %4
result %7
%0 = block 2
%1:i32 = select 0:i1, 128:i32, 64:i32
%2:i32 = or 16:i32, %1
%3:i32 = phi %0, 80:i32, %2
infer %3 (demandedBits=00000000000000001111111111111111)
result 80:i32
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967231:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 128:i32, %4
%6:i16 = trunc %5
infer %6
%7:i16 = or 128:i16, %3
result %7
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 256:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
infer %4 (demandedBits=00000000000000001111111111111111)
result %2
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4 (hasExternalUses)
%6:i8 = var
%7:i32 = zext %6
%8:i32 = shl %7, 8:i32
%9:i8 = var
%10:i32 = zext %9
%11:i32 = or %8, %10
%12:i32 = addnsw %5, %11
infer %12 (demandedBits=00000000000000000000000011111111)
%13:i32 = add %4, %10
result %13
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i8 = var
%3:i32 = sext %2 (hasExternalUses)
%4:i32 = addnsw %1, %3
%5:i8 = trunc %4
infer %5
%6:i8 = add %0, %2
result %6
%0:i32 = var
%1:i32 = mulnsw 1:i32, %0
%2:i64 = sext %1
infer %2
%3:i64 = sext %0
result %3
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967231:i32, %1
%3:i16 = trunc %2
infer %3 (demandedBits=1111111011111111)
%4:i16 = and 65215:i16, %0
result %4
%0 = block 1
%1:i64 = var (range=[-2147483648,-9223372036854775808))
%2:i64 = addnsw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3
infer %4
%5:i32 = trunc %2
result %5
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shlnsw %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
pc %7 1:i1
%8:i8 = var
%9:i32 = sext %8
%10:i32 = shlnsw %9, 8:i32
%11:i8 = var
%12:i32 = sext %11
%13:i32 = addnsw %10, %12
%14:i32 = and 1023:i32, %13
%15:i32 = and 63:i32, %5
%16:i32 = shlnw %15, 10:i32
%17:i32 = addnw %14, %16
infer %17
result %12
%0:i8 = var
%1:i64 = zext %0
%2:i8 = trunc %1
infer %2
result %0
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (nonNegative) (range=[0,2147483645))
%1 = block 2
%2:i32 = var
%3:i32 = lshr %2, 1:i32
%4:i32 = subnsw %3, 3:i32
%5:i32 = addnsw 4294967295:i32, %4
%6:i32 = phi %1, %5, %5
%7:i1 = slt %0, %6
pc %7 0:i1
%8:i32 = sdiv %0, 2:i32
infer %8
%9:i32 = ashr %0, 1:i32
result %9
%0:i64 = var
%1:i64 = ashr %0, 63:i64
%2:i32 = trunc %1
%3:i32 = xor 4294967295:i32, %2
%4:i64 = var
%5:i64 = ashr %4, 63:i64
%6:i32 = trunc %5
%7:i32 = xor 4294967295:i32, %6
%8:i32 = and %3, %7
%9:i64 = addnsw %0, %4 (hasExternalUses)
%10:i64 = ashr %9, 63:i64
%11:i32 = trunc %10
%12:i32 = and %8, %11
%13:i32 = and %2, %6
%14:i32 = xor 4294967295:i32, %11
%15:i32 = and %13, %14
%16:i32 = or %12, %15
%17:i8 = trunc %16
infer %17
result 0:i8
%0:i32 = select 1:i1, 4:i32, 3:i32
infer %0 (demandedBits=00000000000000000000000011111111)
result 4:i32
%0:i8 = var
%1:i32 = zext %0
%2:i32 = subnsw 102:i32, %1
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 102:i8, %0
result %4
%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, %1
infer %2
result %1
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = lshr %1, 8:i32
%3:i8 = trunc %2
infer %3
result 0:i8
%0:i32 = var
%1:i64 = zext %0 (hasExternalUses)
%2:i64 = and 18374686479671623680:i64, %1
%3:i1 = ne 0:i64, %2
pc %3 1:i1
%4:i64 = lshr %1, 8:i64 (hasExternalUses)
%5:i64 = lshr %4, 7:i64 (hasExternalUses)
%6:i64 = and 127:i64, %5
%7:i64 = or 128:i64, %6
infer %7 (demandedBits=0000000000000000000000000000000000000000000000000000000011111111)
result %1
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64 (hasExternalUses)
%14:i64 = lshr %13, 7:i64 (hasExternalUses)
%15:i64 = lshr %14, 7:i64
infer %15 (demandedBits=0000000000000000000000000000000000000000000000000011111111111111)
result 16383:i64
%0:i32 = var
%1:i1 = slt %0, 0:i32
%2:i32 = zext %1
%3:i8 = trunc %2 (hasExternalUses)
%4:i1 = ne 0:i8, %3
pc %4 1:i1
%5:i32 = mulnsw 4294967295:i32, %0
%6:i32 = subnsw %5, 1:i32
infer %6
%7:i32 = sub 4294967295:i32, %0
result %7
%0:i32 = var
%1:i1 = slt %0, 0:i32
pc %1 1:i1
%2:i32 = addnsw 1:i32, %0
%3:i32 = mulnsw 4294967295:i32, %2
infer %3
%4:i32 = sub 4294967295:i32, %0
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i32 = and 127:i32, %1
%3:i8 = trunc %2
infer %3
%4:i8 = and 127:i8, %0
result %4
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 0:i1
%5 = block 1
%6:i32 = phi %5, %1
%7:i32 = mul 37:i32, %6
%8:i64 = zext %7
%9:i32 = trunc %8
%10:i32 = urem %9, 124:i32
%11:i64 = zext %10
infer %11 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%12 = block 1
%13:i32 = phi %12, %1
%14:i32 = mul 37:i32, %13
%15:i64 = zext %14
%16:i64 = urem %15, 124:i64
result %16
%0:i8 = var
%1:i32 = zext %0
%2:i1 = slt %1, 1:i32
infer %2
%3:i1 = eq 0:i8, %0
result %3
%0 = block 2
%1 = block 1
%2:i8 = var
%3:i8 = phi %1, %2
%4:i8 = phi %0, 0:i8, %3
%5:i32 = zext %4
%6:i1 = eq 0:i32, %5
infer %6
%7 = block 2
%8 = block 1
%9:i8 = phi %8, %2
%10:i8 = phi %7, 0:i8, %9
%11:i1 = eq 0:i8, %10
result %11
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 95:i32, %1
infer %2
%3:i1 = eq 95:i8, %0
result %3
%0:i1 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
%3:i1 = xor 1:i1, %2
%4:i32 = zext %3
infer %4
%5:i32 = sub 1:i32, %1
result %5
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 10:i32, %1
%3:i1 = ne 0:i32, %2
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
infer %5
result %3
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i32 = phi %0, %1
%3:i1 = sle 0:i32, %2
pc %3 1:i1
%4:i32 = shlnuw 1:i32, %2
%5:i1 = sle 32:i32, %2
%6:i32 = select %5, 4294967295:i32, 0:i32
%7:i32 = or %4, %6
infer %7
%8:i32 = shl 1:i32, %1
result %8
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i1 = ne 0:i32, %1
infer %2
%3:i1 = trunc %0
result %3
%0 = block 3
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = phi %0, 4293967296:i32, %1, %1
%3:i1 = sle 0:i32, %2
pc %3 1:i1
%4:i32 = shlnuw 1:i32, %2
infer %4
%5:i32 = shl 1:i32, %1
result %5
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = and 4294967040:i32, %2
%4:i1 = eq 2048:i32, %3
%5:i1 = phi %1, 1:i1, %4
%6:i1 = phi %0, 0:i1, %5
%7:i32 = zext %6
%8:i1 = ne 0:i32, %7
infer %8
result %6
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294966847:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 96:i32, %4
%6:i16 = trunc %5
infer %6
%7:i16 = or 96:i16, %3
result %7
%0:i32 = var
%1:i1 = slt %0, 0:i32
%2:i32 = zext %1
%3:i8 = trunc %2 (hasExternalUses)
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
%6:i32 = select %5, 2:i32, 1:i32
infer %6 (demandedBits=00000000000000000000000011111111)
%7:i32 = add 1:i32, %2
result %7
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 4:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 0:i1
%4:i32 = or 4:i32, %1
%5:i16 = trunc %4
infer %5
%6:i16 = add 4:i16, %0
result %6
%0:i8 = trunc 1:i32
infer %0
result 1:i8
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483648))
%1:i32 = var
%2:i64 = sext %1
%3:i1 = slt %0, %2
pc %3 0:i1
%4 = block 1
%5:i32 = phi %4, %1
%6:i1 = slt 1:i32, %5
infer %6
%7:i1 = slt 1:i32, %1
result %7
%0:i16 = var
%1:i32 = sext %0
%2:i1 = slt 0:i32, %1
infer %2
%3:i1 = slt 0:i16, %0
result %3
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = var
%4:i1 = slt %0, %3
pc %4 1:i1
%5:i1 = sle 0:i32, %0
pc %5 1:i1
%6:i32 = mulnw 0:i32, %3
%7:i32 = addnw %0, %6
infer %7
result %0
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i1 = sle 0:i32, %0
pc %3 1:i1
%4:i32 = addnw 0:i32, %0
%5:i64 = sext %4
infer %5
%6:i64 = sext %0
result %6
%0:i8 = var
%1:i32 = zext %0
%2:i32 = and 192:i32, %1
%3:i1 = eq 128:i32, %2
pc %3 0:i1
%4 = block 1
%5:i8 = phi %4, %0
infer %5
result %0
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ule %1, 127:i32
pc %2 0:i1
%3:i32 = sext %0
%4:i1 = sle 0:i32, %3
infer %4
result 0:i1
%0:i32 = lshr 4294967295:i32, 24:i32
infer %0 (demandedBits=00000000000000000000000011111111)
result 255:i32
%0 = block 3
%1 = block 2
%2:i8 = phi %1, 1:i8, 0:i8
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
%5:i1 = phi %0, 1:i1, 0:i1, %4
%6:i1 = xor 1:i1, %5
%7:i32 = zext %6
%8:i8 = trunc %7
infer %8
%9:i8 = zext %6
result %9
%0 = block 1
%1:i32 = var
%2:i32 = phi %0, %1
%3:i32 = lshr %2, 8:i32
infer %3 (demandedBits=00000000000000000000000011111111)
%4:i32 = ashr %1, 8:i32
result %4
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i1 = slt 0:i32, %0
pc %1 1:i1
%2:i64 = zext %0 (hasExternalUses)
%3:i64 = mulnw 9:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 9:i32, %0
result %5
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,25))
%1:i1 = slt %0, 24:i32
pc %1 0:i1
%2:i1 = eq 24:i32, %0
infer %2
result 1:i1
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i64 = phi %0, %1
%3:i32 = trunc %2
%4:i1 = sle 0:i32, %3
infer %4
result 1:i1
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 2:i32, %1
%3:i64 = sext %2
infer %3
result 2:i64
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 3:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4 = block 1
%5:i16 = phi %4, %0
%6:i32 = zext %5
infer %6 (demandedBits=00000000000000000000000000000010)
%7:i32 = sext %0
result %7
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 102:i32
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i32 = subnsw %1, 115:i32
%5:i1 = eq 0:i32, %4
pc %5 0:i1
%6:i32 = subnsw %1, 99:i32
%7:i1 = eq 0:i32, %6
infer %7
%8:i1 = eq 99:i8, %0
result %8
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shlnsw %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
pc %7 1:i1
%8:i32 = and 63:i32, %5
%9:i32 = shlnw %8, 10:i32
infer %9
result %4
%0:i8 = var
%1:i32 = sext %0
%2:i8 = trunc %1
infer %2
result %0
%0 = block 2
%1 = block 1
%2:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%3:i32 = addnsw 1:i32, %2
%4:i32 = phi %1, %3
%5:i32 = phi %0, 0:i32, %4
%6:i1 = slt %5, 2:i32
pc %6 0:i1
%7:i32 = addnsw 4294967295:i32, %5
infer %7
result %2
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64
%14:i64 = or 128:i64, %13
%15:i8 = trunc %14
infer %15
result 255:i8
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = var (signBits=16) (range=[1,65536))
%3:i8 = var
%4:i32 = zext %3
%5:i32 = shlnw %4, 8:i32
%6:i8 = var
%7:i32 = zext %6
%8:i32 = or %5, %7 (hasExternalUses)
%9:i32 = add %2, %8 (hasExternalUses)
%10:i32 = subnsw %9, 1:i32 (hasExternalUses)
%11:i1 = sle %1, %10
pc %11 0:i1
%12:i1 = sle %2, %10
pc %12 1:i1
%13:i64 = zext %2 (hasExternalUses)
%14:i64 = addnsw 18446744073709551615:i64, %13
%15:i64 = sext %9 (hasExternalUses)
%16:i64 = addnsw 18446744073709551614:i64, %15
%17:i1 = slt %14, %16
%18:i64 = select %17, %14, %16
infer %18
result %14
%0:i32 = var
%1:i32 = var
%2:i32 = sub %0, %1 (hasExternalUses)
%3:i1 = slt 0:i32, %2
pc %3 1:i1
%4:i64 = zext %2 (hasExternalUses)
%5:i1 = ult %4, 8:i64
pc %5 0:i1
%6:i64 = urem %4, 8:i64
%7:i64 = sub %4, %6
infer %7
%8:i64 = and 2147483640:i64, %4
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4
%6:i8 = trunc %5
infer %6
result %3
%0:i32 = var
%1:i1 = ne 0:i32, %0
%2:i32 = zext %1
%3:i64 = sext %2
infer %3
%4:i64 = zext %1
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 0:i32, %1
infer %2
%3:i1 = eq 0:i8, %0
result %3
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shlnsw %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
infer %7
result 0:i1
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
%3:i32 = select %2, 10:i32, 38:i32
%4:i8 = trunc %3
infer %4
%5:i8 = select %2, 10:i8, 38:i8
result %5
%0 = block 2
%1:i64 = var (range=[-2147483648,-9223372036854775808))
%2:i64 = addnsw 1:i64, %1
%3:i32 = trunc %2
%4:i32 = phi %0, %3, %3
%5:i32 = addnsw 1:i32, %4
infer %5
%6:i32 = add 1:i32, %3
result %6
%0 = block 2
%1:i8 = var
%2:i32 = sext %1
%3:i32 = subnsw %2, 56:i32
%4:i32 = var
%5:i32 = phi %0, %3, %4
%6 = block 2
%7 = block 3
%8:i32 = phi %7, 1:i32, 0:i32, 0:i32
%9:i32 = subnw 1:i32, %8
%10:i32 = phi %6, %9, %8
%11:i1 = slt %5, %10
%12:i32 = zext %11
%13:i1 = ne 0:i32, %12
infer %13
result %11
%0 = block 2
%1:i64 = var
%2:i64 = phi %0, %1, 0:i64
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
%5:i32 = shlnuw %4, 1:i32
%6:i32 = or 0:i32, %5
infer %6 (demandedBits=11111111111111111111111111111110)
%7:i32 = add %3, %3
result %7
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, 0:i32, %1, 0:i32
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i1 = sle 0:i32, %2
pc %4 1:i1
%5:i32 = var
%6:i1 = slt %2, %5
pc %6 1:i1
%7:i64 = zext %2
infer %7
%8:i64 = sext %1
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnuw %1, 24:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = shlnw %4, 16:i32
%6:i32 = or %2, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i32 = or %6, %9
%11:i8 = var
%12:i32 = zext %11
%13:i32 = or %10, %12
%14:i1 = ne 0:i32, %13
%15:i32 = select %14, 1:i32, 0:i32
%16:i8 = trunc %15
infer %16
%17:i8 = zext %14
result %17
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
%3:i32 = select %2, 1:i32, 0:i32
infer %3
%4:i32 = zext %2
result %4
%0 = block 1
%1:i32 = phi %0, 11:i32
infer %1
result 11:i32
%0:i32 = lshr 4294967295:i32, 24:i32
%1:i8 = trunc %0
infer %1
result 255:i8
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 101:i32, %1
infer %2
%3:i1 = eq 101:i8, %0
result %3
%0 = block 2
%1:i32 = var
%2:i32 = var (range=[-2147483648,2147483647))
%3:i32 = phi %0, %1, %2
%4:i32 = addnsw 1:i32, %3
%5:i32 = mulnsw 4294967295:i32, %4
infer %5
%6 = block 2
%7:i32 = phi %6, %1, %2
%8:i32 = sub 4294967295:i32, %7
result %8
%0:i8 = var
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = eq 43:i32, %1
pc %2 0:i1
%3:i1 = eq 45:i32, %1
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
infer %5
%6:i1 = eq 45:i8, %0
result %6
%0:i64 = var
%1:i64 = ashr %0, 63:i64
%2:i32 = trunc %1
%3:i32 = xor 4294967295:i32, %2
%4:i64 = var
%5:i64 = ashr %4, 63:i64
%6:i32 = trunc %5
%7:i32 = xor 4294967295:i32, %6
%8:i32 = and %3, %7
%9:i64 = addnsw %0, %4 (hasExternalUses)
%10:i64 = ashr %9, 63:i64
%11:i32 = trunc %10
%12:i32 = and %8, %11
%13:i32 = and %2, %6
%14:i32 = xor 4294967295:i32, %11
%15:i32 = and %13, %14
%16:i32 = or %12, %15
infer %16 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i32 = var
%1:i1 = ule %0, 65535:i32
pc %1 0:i1
%2:i32 = and 255:i32, %0
%3:i8 = trunc %2
infer %3
%4:i8 = trunc %0
result %4
%0 = block 2
%1 = block 2
%2:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%3:i32 = addnsw 1:i32, %2
%4:i32 = phi %1, %3, 0:i32
%5:i32 = phi %0, %4, 0:i32
%6:i1 = slt %5, 2:i32
pc %6 0:i1
%7:i32 = subnw %5, 1:i32
infer %7
result %2
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, %1, %1, %1
%3:i32 = and 2147483647:i32, %2
infer %3
%4:i32 = and 2147483647:i32, %1
result %4
%0:i8 = var (range=[1,0))
%1:i32 = sext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
infer %2
result 1:i1
%0:i32 = var
%1:i64 = zext %0 (hasExternalUses)
%2:i64 = and 18374686479671623680:i64, %1
%3:i1 = ne 0:i64, %2
pc %3 1:i1
%4:i64 = lshr %1, 8:i64 (hasExternalUses)
%5:i64 = lshr %4, 7:i64 (hasExternalUses)
%6:i64 = lshr %5, 7:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = and 127:i64, %7
%9:i64 = or 128:i64, %8
%10:i8 = trunc %9
infer %10
%11:i8 = trunc %1
result %11
%0:i32 = var
%1:i1 = ne 0:i32, %0 (hasExternalUses)
%2:i32 = select %1, 1:i32, 0:i32
infer %2
%3:i32 = zext %1
result %3
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 111:i32, %1
infer %2
%3:i1 = eq 111:i8, %0
result %3
%0:i32 = var
%1:i32 = var
%2:i1 = ne %0, %1
pc %2 0:i1
%3:i1 = slt 0:i32, %0
pc %3 1:i1
%4:i32 = add 4294967295:i32, %0 (hasExternalUses)
%5:i64 = zext %4
%6:i64 = addnw 1:i64, %5
infer %6
%7:i64 = sext %0
result %7
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i1 = sle 0:i32, %0
pc %1 1:i1
%2:i32 = shlnuw 1:i32, %0
%3:i1 = sle 32:i32, %0
%4:i32 = select %3, 4294967295:i32, 0:i32
%5:i32 = or %2, %4
infer %5
result %2
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i32 = var
%3:i64 = sext %2
%4:i1 = slt %1, %3
pc %4 0:i1
%5 = block 1
%6:i32 = phi %5, %2
infer %6
result %2
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4:i32
%3:i32 = add 4294967295:i32, %2
%4:i1 = slt %3, 0:i32
%5:i32 = select %4, %3, 0:i32
%6:i32 = sub %3, %5
%7:i64 = zext %6
%8:i64 = addnw 1:i64, %7 (hasExternalUses)
%9:i1 = ult %8, 8:i64
pc %9 0:i1
%10:i64 = urem %8, 8:i64
%11:i64 = sub %8, %10 (hasExternalUses)
%12:i32 = trunc %11
%13:i32 = sub %2, %12
infer %13
%14 = block 2
%15:i32 = phi %14, %1, 4:i32
%16:i32 = and 7:i32, %15
result %16
%0 = block 2
%1:i32 = var
%2:i32 = lshr %1, 1:i32
%3:i32 = subnsw %2, 3:i32
%4:i32 = addnsw 4294967295:i32, %3
%5:i32 = phi %0, %4, %4
%6:i1 = slt 0:i32, %5
pc %6 1:i1
%7:i64 = sext %5
infer %7
%8:i64 = sext %4
result %8
%0:i64 = var
%1:i1 = ne 0:i64, %0
pc %1 1:i1
%2:i1 = eq 0:i64, %0
infer %2
result 0:i1
%0:i32 = var
%1 = block 2
%2:i32 = var
%3 = block 2
%4:i32 = var
%5:i32 = phi %3, %4, 0:i32
%6:i32 = phi %1, %2, %5
%7:i1 = ne %0, %6
pc %7 0:i1
%8:i1 = slt 0:i32, %6
pc %8 1:i1
%9:i64 = sext %6
%10:i1 = slt 1:i64, %9
%11:i64 = select %10, %9, 1:i64
infer %11
result %9
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967267:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = and 65507:i16, %0
result %4
%0:i8 = var
%1:i1 = ne 0:i8, %0
pc %1 1:i1
%2:i32 = sext %0
%3:i1 = eq 39:i32, %2
infer %3
%4:i1 = eq 39:i8, %0
result %4
%0 = block 2
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (nonNegative) (range=[0,2147483643))
%2:i64 = addnw 2:i64, %1
%3:i32 = trunc %2
%4:i32 = phi %0, %3, 0:i32
%5:i32 = sdiv %4, 2:i32
infer %5
%6 = block 2
%7:i32 = phi %6, %3, 0:i32
%8:i32 = ashr %7, 1:i32
result %8
%0:i32 = var
%1:i32 = and 127:i32, %0 (hasExternalUses)
%2:i32 = addnsw 1:i32, %1
%3:i8 = trunc %2
%4:i32 = sext %3
%5:i32 = ashr %4, 1:i32
%6:i1 = slt 0:i32, %5
infer %6
%7:i1 = slt 1:i8, %3
result %7
%0:i16 = var
%1:i32 = zext %0
%2:i32 = addnsw 0:i32, %1
infer %2
result %1
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i32 = trunc %1 (hasExternalUses)
%3:i32 = subnsw %2, 1:i32 (hasExternalUses)
%4:i1 = sle 0:i32, %3
infer %4
result 1:i1
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64 (hasExternalUses)
%14:i64 = and 127:i64, %13
%15:i64 = or 128:i64, %14
infer %15 (demandedBits=0000000000000000000000000000000000000000000000000000000011111111)
result 255:i64
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = and 64:i32, %4
infer %5
result 0:i32
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
%5:i32 = or 0:i32, %4
%6:i32 = lshr %5, 1:i32
infer %6
%7:i32 = and 2147483647:i32, %1
result %7
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64 (hasExternalUses)
%14:i64 = and 127:i64, %13
infer %14 (demandedBits=0000000000000000000000000000000000000000000000000000000001111111)
result 127:i64
%0:i32 = var
%1:i1 = ule 12:i32, %0
pc %1 1:i1
%2:i32 = subnuw %0, 12:i32
%3:i32 = udiv %2, 2:i32
infer %3
%4:i32 = lshr %2, 1:i32
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i32 = or 0:i32, %1
%3:i8 = trunc %2
infer %3
result %0
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64 (hasExternalUses)
%14:i64 = lshr %13, 7:i64
infer %14 (demandedBits=0000000000000000000000000000000000000000000111111111111111111111)
result 2097151:i64
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 108:i32
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 108:i8, %0
result %4
%0:i64 = var
%1:i1 = eq 0:i64, %0
%2:i1 = or 0:i1, %1
infer %2
result %1
%0:i64 = var
%1:i1 = slt %0, 0:i64
pc %1 1:i1
%2:i64 = shl %0, 1:i64
%3:i1 = eq 0:i64, %2
infer %3
%4:i1 = eq 9223372036854775808:i64, %0
result %4
%0:i32 = var
%1:i32 = var
%2:i1 = eq %0, %1
%3:i16 = var
%4:i32 = zext %3
%5:i32 = sdiv 1073741824:i32, %4
%6:i32 = addnw 1:i32, %5 (hasExternalUses)
%7:i1 = eq %0, %6
%8:i1 = or %2, %7
pc %8 0:i1
%9 = block 1
%10:i32 = phi %9, %0
%11:i32 = var
%12:i1 = ule %10, %11
infer %12
%13:i1 = ule %0, %11
result %13
%0 = block 2
%1 = block 2
%2:i8 = var
%3:i8 = phi %1, 100:i8, %2
%4:i8 = phi %0, 99:i8, %3
%5:i32 = zext %4
%6:i32 = subnsw %5, 97:i32
%7:i32 = addnsw 138:i32, %6
infer %7 (demandedBits=00000000000000000000000011111111)
%8 = block 2
%9 = block 2
%10:i8 = phi %9, 100:i8, %2
%11:i8 = phi %8, 99:i8, %10
%12:i32 = zext %11
%13:i32 = add 41:i32, %12
result %13
%0 = block 2
%1 = block 1
%2:i64 = var (range=[-2147483648,-9223372036854775808))
%3:i64 = addnsw 1:i64, %2
%4:i64 = phi %1, %3
%5:i32 = trunc %4
%6 = block 1
%7:i64 = phi %6, %3
%8:i32 = trunc %7
%9:i32 = phi %0, %5, %8
%10:i32 = addnsw 1:i32, %9
infer %10
%11 = block 1
%12:i64 = phi %11, %3
%13:i32 = trunc %12
%14:i32 = add 1:i32, %13
result %14
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i1 = slt 0:i32, %0
pc %1 1:i1
%2:i64 = sext %0 (hasExternalUses)
%3:i64 = mul 9:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 9:i32, %0
result %5
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
pc %7 1:i1
%8:i32 = and 960:i32, %5
%9:i32 = add 64:i32, %8
infer %9 (demandedBits=00000000001111111111111111111111)
result %4
%0:i32 = select 0:i1, 4:i32, 3:i32
%1:i8 = trunc %0
infer %1
result 3:i8
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 113:i32, %1
infer %2
%3:i1 = eq 113:i8, %0
result %3
%0 = block 2
%1 = block 2
%2:i8 = var
%3:i32 = zext %2
%4:i1 = eq 0:i32, %3
%5:i32 = select %4, 16:i32, 2:i32
%6:i32 = or 32:i32, %5
%7:i32 = phi %1, %6, %5
%8:i32 = or 64:i32, %7
%9:i64 = var
%10:i1 = eq 0:i64, %9
%11:i32 = select %10, 128:i32, 64:i32
%12:i32 = or %7, %11
%13:i32 = phi %0, %8, %12
%14:i16 = trunc %13 (hasExternalUses)
%15:i32 = zext %14
%16:i32 = and 2048:i32, %15
%17:i1 = ne 0:i32, %16
infer %17
result 0:i1
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 0:i32, %1
infer %2
%3:i1 = eq 0:i8, %0
result %3
%0:i32 = var
%1:i64 = zext %0
%2:i64 = mulnw 4:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 4:i32, %0
result %4
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
%2:i1 = slt 2000:i32, %1
infer %2
%3:i1 = slt 1999:i32, %0
result %3
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 10:i32, %1
infer %2
%3:i1 = eq 10:i8, %0
result %3
%0:i32 = var
%1:i1 = sle 1:i32, %0
pc %1 1:i1
%2:i1 = slt 0:i32, %0
pc %2 1:i1
%3:i32 = addnsw 4294967295:i32, %0
%4:i64 = zext %3
%5:i64 = addnw 1:i64, %4
%6:i32 = trunc %5
infer %6
result %0
%0 = block 1
%1:i32 = var
%2:i32 = phi %0, %1
%3:i8 = trunc %2
infer %3
%4:i8 = trunc %1
result %4
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = ne 0:i32, %1
pc %2 0:i1
%3:i32 = var
%4:i32 = subnsw %3, %1 (hasExternalUses)
%5:i32 = addnsw 1:i32, %4 (hasExternalUses)
%6:i1 = sle 100:i32, %5
pc %6 1:i1
%7:i32 = addnsw 4294967295:i32, %5
infer %7
result %3
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64 (hasExternalUses)
%14:i64 = lshr %13, 7:i64 (hasExternalUses)
%15:i64 = lshr %14, 7:i64 (hasExternalUses)
%16:i64 = lshr %15, 7:i64
%17:i64 = and 127:i64, %16
%18:i64 = or 128:i64, %17
%19:i8 = trunc %18
infer %19
result 255:i8
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 48:i32, 16:i32
%3:i32 = or 64:i32, %2
%4:i32 = or 64:i32, %2
%5:i32 = phi %0, %3, %4
infer %5 (demandedBits=00000000000000001111111111111111)
result %4
%0:i32 = var
%1:i32 = lshr %0, 1:i32
%2:i1 = ne 0:i32, %1
infer %2
%3:i1 = ult 1:i32, %0
result %3
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
%3:i32 = select %2, 1:i32, 0:i32
infer %3
%4:i32 = zext %2
result %4
%0 = block 2
%1 = block 3
%2 = block 4
%3:i32 = phi %2, 0:i32, 0:i32, 1:i32, 1:i32
%4:i32 = phi %1, %3, 0:i32, 0:i32
%5:i1 = ne 0:i32, %4
%6:i1 = xor 1:i1, %5
%7:i1 = phi %0, 0:i1, %6
%8:i32 = zext %7
%9:i8 = trunc %8
infer %9
%10:i8 = zext %7
result %10
%0:i32 = var
%1:i32 = var
%2:i1 = sle %0, %1
pc %2 1:i1
%3:i64 = zext %0
%4:i64 = mulnw 48:i64, %3
%5:i64 = mulnw 2:i64, %4
infer %5 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%6:i64 = mul 96:i64, %3
result %6
%0:i32 = var
%1:i32 = and 2:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3
infer %4
%5:i8 = zext %2
result %5
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = and 4294966847:i32, %1
%5:i16 = trunc %4
%6:i32 = zext %5
%7:i32 = or 256:i32, %6
%8:i16 = trunc %7
infer %8
%9:i16 = add 256:i16, %5
result %9
%0:i32 = var
%1:i64 = sext %0 (hasExternalUses)
%2:i64 = sub 200:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = sub 200:i32, %0
result %4
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 1:i32, %1
infer %2
result 1:i32
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
%3:i8 = var
%4:i32 = sext %3 (hasExternalUses)
%5:i1 = ne %4, %1
%6:i1 = and %2, %5
%7:i8 = var
%8:i32 = sext %7
%9:i1 = ne %8, %1
%10:i1 = and %6, %9
%11:i8 = var
%12:i32 = sext %11
%13:i1 = ne %12, %1
%14:i1 = and %10, %13
pc %14 0:i1
%15 = block 1
%16:i8 = phi %15, %0
%17:i32 = zext %16
%18:i1 = eq 255:i32, %17
infer %18
%19:i1 = eq 255:i8, %0
result %19
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shl %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
pc %7 1:i1
%8:i8 = var
%9:i32 = sext %8
%10:i32 = shl %9, 8:i32
%11:i8 = var
%12:i32 = sext %11
%13:i32 = addnsw %10, %12
%14:i32 = and 1023:i32, %13
%15:i32 = and 63:i32, %5
%16:i32 = shl %15, 10:i32
%17:i32 = add %14, %16
infer %17
result %12
%0:i32 = var
%1:i1 = slt %0, 0:i32
%2:i32 = zext %1
infer %2
%3:i32 = lshr %0, 31:i32
result %3
%0:i32 = var (range=[0,1056))
%1:i1 = sle 4294966946:i32, %0
infer %1
result 1:i1
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = and 4294966847:i32, %1
%5:i16 = trunc %4
%6:i32 = zext %5
%7:i32 = or 256:i32, %6
infer %7 (demandedBits=00000000000000001111111111111111)
%8:i32 = add 256:i32, %4
result %8
%0:i32 = zext 0:i8
%1:i32 = shl %0, 8:i32
%2:i8 = var
%3:i32 = zext %2
%4:i32 = or %1, %3
%5:i8 = var
%6:i32 = zext %5
%7:i32 = shlnw %6, 8:i32
%8:i8 = var
%9:i32 = zext %8
%10:i32 = or %7, %9 (hasExternalUses)
%11:i32 = add %4, %10
infer %11 (demandedBits=00000000000000000000000011111111)
%12:i32 = add %3, %9
result %12
%0:i32 = var
%1:i1 = slt 0:i32, %0
pc %1 1:i1
%2:i64 = zext %0 (hasExternalUses)
%3:i1 = ult %2, 8:i64
pc %3 0:i1
%4:i64 = urem %2, 8:i64
infer %4
%5:i64 = and 7:i64, %2
result %5
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 0:i1
%3:i32 = addnsw 1:i32, %1
%4:i64 = sext %3
%5:i64 = mulnsw 48:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 48:i32, %3
result %7
%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i16 = var
%4:i32 = sext %3
%5:i32 = addnsw %2, %4
%6:i32 = phi %0, %5, %5
%7:i32 = phi %0, %2, %2
%8:i32 = subnsw %6, %7
infer %8
result %4
%0:i64 = var
%1 = block 3
%2 = block 3
%3:i64 = var
%4:i64 = var
%5:i64 = var
%6:i64 = phi %2, %3, %4, %5
%7 = block 3
%8:i64 = var
%9:i64 = phi %7, %0, %8, %6
%10 = block 4
%11:i64 = var
%12:i64 = var
%13:i64 = phi %10, %11, %11, %11, %12
%14:i64 = phi %1, %6, %9, %13
%15:i1 = ule %0, %14
%16:i32 = zext %15
%17:i1 = ne 0:i32, %16
infer %17
result %15
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = sext %1
infer %2 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %0
%0 = block 2
%1 = block 1
%2:i64 = var
%3:i64 = phi %1, %2
%4 = block 3
%5 = block 2
%6 = block 1
%7:i64 = phi %6, %2
%8 = block 2
%9 = block 3
%10 = block 1
%11:i64 = phi %10, %2
%12 = block 1
%13:i64 = phi %12, %2
%14 = block 1
%15:i64 = phi %14, %2
%16:i64 = phi %9, %11, %13, %15
%17 = block 1
%18:i64 = phi %17, %2
%19:i64 = phi %8, %16, %18
%20:i64 = phi %5, %7, %19
%21 = block 1
%22:i64 = phi %21, %2
%23 = block 5
%24 = block 1
%25:i64 = phi %24, %2
%26 = block 1
%27:i64 = phi %26, 0:i64
%28 = block 1
%29:i64 = phi %28, 0:i64
%30 = block 1
%31:i64 = phi %30, 0:i64
%32 = block 1
%33:i64 = phi %32, 0:i64
%34:i64 = phi %23, %25, %27, %29, %31, %33
%35:i64 = phi %4, %20, %22, %34
%36:i64 = phi %0, %3, %35
%37:i1 = ne 0:i64, %36
pc %37 1:i1
%38:i1 = eq 0:i64, %36
infer %38
%39:i1 = ult %3, %2
result %39
%0 = block 3
%1:i32 = var
%2:i32 = phi %0, %1, %1, %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
%5:i32 = or 0:i32, %4
%6:i32 = lshr %5, 1:i32
infer %6
%7:i32 = and 2147483647:i32, %1
result %7
%0:i32 = trunc 0:i64 (hasExternalUses)
%1:i64 = zext %0
infer %1
result 0:i64
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 5:i32, %1
infer %2
%3:i1 = eq 5:i8, %0
result %3
%0 = block 2
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = phi %0, %1, 0:i32
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i64 = sext %2
infer %4
%5:i64 = sext %1
result %5
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 98:i32, %1
infer %2
%3:i1 = eq 98:i8, %0
result %3
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = and 1:i32, %4
%6:i1 = eq 0:i32, %5
%7:i32 = zext %6
%8:i1 = ne 0:i32, %7
infer %8
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11:i1 = eq 0:i32, %10
result %11
%0 = block 2
%1:i32 = var
%2 = block 4
%3 = block 3
%4:i32 = var
%5:i32 = add 1:i32, %4
%6:i32 = add 1:i32, %5
%7:i32 = var
%8:i32 = addnsw 1:i32, %7
%9:i32 = phi %3, %5, %6, %8
%10:i32 = add 1:i32, %9
%11:i16 = var
%12:i32 = zext %11
%13:i32 = sdiv 1073741824:i32, %12
%14:i32 = addnw 1:i32, %13
%15:i32 = addnw 1:i32, %14
%16:i32 = phi %2, %10, %15, %9, %9
%17:i32 = phi %0, %1, %16
%18:i1 = eq 1:i32, %17
%19:i32 = select %18, 100:i32, 0:i32
%20:i8 = trunc %19
infer %20
%21 = block 2
%22 = block 4
%23 = block 3
%24:i32 = phi %23, %5, %6, %8
%25:i32 = add 1:i32, %24
%26:i32 = phi %22, %25, %15, %24, %24
%27:i32 = phi %21, %1, %26
%28:i1 = eq 1:i32, %27
%29:i8 = select %28, 100:i8, 0:i8
result %29
%0 = block 20
%1:i64 = var
%2 = block 28
%3:i64 = phi %2, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
%4:i64 = phi %0, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %3, %3, %3
%5:i1 = eq 0:i64, %4
infer %5
%6:i1 = eq 0:i64, %1
result %6
%0 = block 1
%1:i64 = var
%2:i64 = add 1:i64, %1
%3:i64 = phi %0, %2
%4:i1 = ult %3, 100:i64
infer %4
%5:i1 = ult %2, 100:i64
result %5
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 2048:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = zext %0
infer %4 (demandedBits=00000000000000000000100000000000)
result 2048:i32
%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i32 = trunc %2
%4:i32 = and 2147483647:i32, %3
%5:i32 = shl %4, 1:i32
infer %5
%6:i32 = add %3, %3
result %6
%0 = block 2
%1 = block 3
%2 = block 2
%3:i64 = var
%4:i64 = var
%5:i64 = phi %2, %3, %4
%6:i64 = var
%7:i64 = phi %1, %5, %6, %6
%8 = block 1
%9:i64 = var
%10:i64 = phi %8, %9
%11:i64 = phi %0, %7, %10
%12:i64 = sub %11, %11
%13:i32 = trunc %12
infer %13
result 0:i32
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 1:i32, %1
%3:i1 = eq 1:i32, %2
infer %3
%4:i1 = trunc %0
result %4
%0 = block 1
%1:i64 = var (nonZero) (range=[2,0))
%2:i64 = phi %0, %1
%3:i32 = trunc %2 (hasExternalUses)
%4:i32 = srem %3, 2:i32
%5:i1 = ne 0:i32, %4
infer %5
%6:i1 = trunc %1
result %6
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = and 2:i32, %4
%6:i1 = ne 0:i32, %5
%7:i32 = zext %6
%8:i1 = ne 0:i32, %7
infer %8
%9:i1 = eq %4, %3
result %9
%0 = block 1
%1:i64 = var (range=[-2147483647,4294967296))
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3
infer %4
%5:i32 = trunc %2
result %5
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3 = block 1
%4:i32 = phi %3, %1
infer %4
result %1
%0 = block 2
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = addnw 1:i32, %1
%3:i32 = phi %0, %2, 0:i32
%4:i1 = slt %3, 0:i32
infer %4
result 0:i1
%0:i32 = lshr 4294967295:i32, 8:i32
%1:i8 = trunc %0
infer %1
result 255:i8
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 41:i32, %1
infer %2
%3:i1 = eq 41:i8, %0
result %3
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 128:i32, %1
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = ult %0, 128:i8
result %4
%0:i32 = var
%1:i1 = slt %0, 0:i32
%2:i32 = zext %1
%3:i8 = trunc %2 (hasExternalUses)
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
infer %5
result %1
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32767))
%1:i1 = eq 0:i32, %0 (hasExternalUses)
%2:i32 = zext %1
%3:i1 = ne 0:i32, %2
infer %3
result %1
%0:i32 = var
%1:i32 = var
%2:i1 = sle %0, %1
pc %2 1:i1
%3:i32 = addnsw 1:i32, %1 (hasExternalUses)
%4:i64 = zext %3
%5:i64 = mulnw 40:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 40:i32, %3
result %7
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = zext %1
%3:i64 = add 32:i64, %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%4:i64 = add 32:i64, %0
result %4
%0 = block 3
%1:i8 = var
%2:i1 = ne 0:i8, %1
%3:i1 = xor 1:i1, %2
%4:i1 = phi %0, 0:i1, %3, 0:i1
%5:i32 = zext %4
%6:i8 = trunc %5
infer %6
%7:i8 = zext %4
result %7
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 117:i32
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 117:i8, %0
result %4
%0:i32 = var
%1:i32 = and 2:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
infer %3 (demandedBits=00000000000000000000000011111111)
%4:i32 = ashr %1, 1:i32
result %4
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32768))
%1:i16 = var
%2:i32 = sext %1
%3:i1 = slt 0:i32, %2
%4:i32 = select %3, %2, 0:i32
%5:i64 = zext %4
%6:i1 = ne %0, %5
pc %6 1:i1
%7 = block 1
%8:i64 = phi %7, %0
%9:i32 = trunc %8 (hasExternalUses)
%10:i1 = sle 0:i32, %9
infer %10
result 1:i1
%0:i32 = var
%1:i64 = sext %0
%2:i1 = slt 2:i64, %1
infer %2
%3:i1 = slt 2:i32, %0
result %3
%0:i32 = var
%1:i32 = and 2097152:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
infer %3
%4:i32 = ashr %1, 21:i32
result %4
%0 = block 1
%1:i64 = var (range=[-2147483647,4294967296))
%2:i64 = addnsw 18446744073709551615:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3
%5:i64 = zext %4
infer %5
%6:i64 = and 4294967295:i64, %2
result %6
%0:i32 = var
%1:i32 = and 65536:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
result %2
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 97:i32, %1
infer %2
%3:i1 = eq 97:i8, %0
result %3
%0 = block 1
%1:i32 = var
%2:i32 = phi %0, %1
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 0:i32, %1
result %4
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, %1
%3:i32 = and 2147483647:i32, %2
infer %3
%4:i32 = and 2147483647:i32, %1
result %4
%0 = block 1
%1:i64 = var
%2:i64 = phi %0, %1
%3:i32 = trunc %2 (hasExternalUses)
%4:i1 = slt 0:i32, %3
pc %4 1:i1
%5 = block 1
%6:i64 = phi %5, %2
infer %6 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %1
%0:i32 = var
%1:i1 = sle 0:i32, %0
pc %1 1:i1
%2 = block 1
%3 = block 1
%4:i32 = phi %3, %0
%5:i32 = phi %2, %4
infer %5
result %0
%0:i32 = var
%1:i32 = ashr %0, 16:i32
%2:i32 = and 255:i32, %1
%3:i8 = trunc %2
infer %3
%4:i8 = trunc %1
result %4
%0:i32 = select 0:i1, 16:i32, 2:i32
%1:i32 = or 32:i32, %0 (hasExternalUses)
%2:i32 = or 64:i32, %1
infer %2 (demandedBits=00000000000000001111111111111111)
result 98:i32
%0:i8 = var
infer %0 (demandedBits=00000000)
result 0:i8
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3 (hasExternalUses)
%9:i32 = trunc %8 (hasExternalUses)
%10:i33 = umul.with.overflow 1:i32, %9 (hasExternalUses)
%11:i32 = extractvalue %10, 0:i32 (hasExternalUses)
%12:i32 = add %5, %11
%13:i1 = ult %12, %5
infer %13
result 0:i1
%0:i32 = var
%1:i1 = sle 1:i32, %0
pc %1 1:i1
%2:i1 = slt 0:i32, %0
infer %2
result 1:i1
%0:i32 = var
%1:i32 = and 32:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
infer %3
%4:i32 = ashr %1, 5:i32
result %4
%0 = block 4
%1:i32 = var
%2:i32 = phi %0, %1, %1, %1, %1
infer %2
result %1
%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i1 = eq 0:i32, %2
%4:i32 = select %3, 16:i32, 2:i32
%5:i32 = or 32:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = and 32:i32, %6
%8:i1 = ne 0:i32, %7
pc %8 1:i1
%9 = block 2
%10 = block 1
%11:i64 = var
%12:i64 = phi %10, %11
%13:i32 = trunc %12
%14 = block 1
%15:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (range=[0,-1))
%16:i64 = phi %14, %15
%17:i32 = trunc %16
%18:i32 = phi %9, %13, %17
%19:i32 = var
%20:i32 = phi %0, %18, %19
%21:i1 = eq 1:i32, %2
%22:i32 = select %21, 1:i32, 2:i32
%23:i32 = addnsw %20, %22
infer %23
%24:i32 = add %18, %22
result %24
%0 = block 2
%1:i32 = var
%2:i32 = addnw 1:i32, %1
%3:i32 = addnsw 1:i32, %1
%4:i32 = phi %0, %2, %3
%5:i32 = var
%6:i1 = slt %4, %5
infer %6
%7:i1 = slt %3, %5
result %7
%0:i32 = var
%1:i32 = mulnsw 1:i32, %0
infer %1
result %0
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i32 = addnw 1:i32, %0 (hasExternalUses)
%2:i32 = var
%3:i1 = slt %1, %2
pc %3 0:i1
%4 = block 1
%5:i32 = phi %4, %2
infer %5
result %2
%0:i32 = and 0:i32, 1:i32
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
%5:i32 = or %0, %4
%6:i32 = and 4294967294:i32, %5
%7:i32 = and 4294967294:i32, %6
%8:i32 = or 1:i32, %7
infer %8
%9:i32 = add 1:i32, %4
result %9
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 1:i32, 0:i32
%3:i32 = or 2:i32, %2
%4:i32 = phi %0, %3, %2
%5:i32 = and 2:i32, %4
%6:i1 = ne 0:i32, %5
%7:i32 = zext %6
infer %7
%8 = block 2
%9 = block 2
%10:i32 = phi %9, 1:i32, 0:i32
%11:i32 = or 2:i32, %10
%12:i32 = phi %8, %11, %10
%13:i32 = ashr %12, 1:i32
result %13
%0:i32 = select 1:i1, 128:i32, 64:i32
%1:i32 = or 2:i32, %0
infer %1 (demandedBits=00000000000000001111111111111111)
result 130:i32
%0:i32 = var
%1 = block 5
%2:i8 = var
%3:i32 = zext %2
%4:i8 = var
%5:i32 = sext %4
%6:i32 = add %3, %5
%7:i8 = trunc %6
%8:i8 = phi %1, 98:i8, %7, 99:i8, 99:i8, 98:i8
%9:i32 = zext %8
%10:i32 = or %0, %9
%11:i8 = trunc %10
%12:i32 = zext %11
%13:i8 = trunc %12
infer %13
result %11
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 102:i32
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i32 = subnsw %1, 115:i32
%5:i1 = eq 0:i32, %4
pc %5 0:i1
%6:i32 = subnsw %1, 99:i32
%7:i1 = eq 0:i32, %6
pc %7 0:i1
%8:i32 = subnsw %1, 101:i32
%9:i1 = eq 0:i32, %8
infer %9
%10:i1 = eq 101:i8, %0
result %10
%0:i32 = var
%1:i1 = slt %0, 588:i32
pc %1 1:i1
%2 = block 1
%3:i32 = phi %2, %0
infer %3
result %0
%0:i8 = var
%1:i32 = zext %0
%2:i32 = ashr %1, 4:i32
%3:i32 = and 15:i32, %2
%4:i64 = zext %3
infer %4
%5:i64 = sext %2
result %5
%0:i32 = var
%1:i32 = and 8:i32, %0
%2:i1 = eq 0:i32, %1
%3:i32 = zext %2
%4:i32 = mulnsw 4:i32, %3
infer %4 (demandedBits=00000000000000001111111111111111)
%5:i32 = ashr 4:i32, %1
result %5
%0:i32 = var
%1:i32 = addnw 0:i32, %0
infer %1
result %0
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,4294967295))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i64 = var
%3:i32 = trunc %2 (hasExternalUses)
%4:i64 = zext %3
%5:i1 = ne %1, %4
pc %5 0:i1
%6:i32 = addnsw 4294967295:i32, %3
%7:i64 = zext %6
%8:i64 = addnw 1:i64, %7
%9:i32 = trunc %8
infer %9
result %3
%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i1 = eq 0:i32, %2
%4:i32 = select %3, 16:i32, 2:i32
%5:i32 = or 32:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = and 32:i32, %6
%8:i1 = ne 0:i32, %7
pc %8 1:i1
%9:i1 = eq 1:i32, %2
infer %9
%10:i1 = eq 1:i8, %1
result %10
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 112:i32, %1
infer %2
%3:i1 = eq 112:i8, %0
result %3
%0 = block 1
%1:i32 = var (knownBits=0000000000000000000000000000000x) (nonNegative) (signBits=31) (range=[0,2))
%2:i32 = phi %0, %1
%3:i1 = ne 0:i32, %2
infer %3
%4:i1 = trunc %1
result %4
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = lshr %1, 16:i32
infer %2 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i16 = var
%1:i32 = sext %0
%2:i1 = slt 1:i32, %1
infer %2
%3:i1 = slt 1:i16, %0
result %3
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 0:i32
%3 = block 2
%4 = block 3
%5:i32 = var
%6:i32 = phi %4, %5, 0:i32, 0:i32
%7:i32 = phi %3, %6, 7:i32
%8:i32 = phi %0, %7, 0:i32
%9:i32 = and %2, %8
infer %9
%10:i32 = and %2, %7
result %10
%0:i32 = var
%1:i32 = and 2147483647:i32, %0
%2:i32 = shl %1, 1:i32
infer %2 (demandedBits=11111111111111111111111111111110)
%3:i32 = add %0, %0
result %3
%0:i16 = var
%1:i32 = zext %0
%2:i32 = or 32:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = or 32:i16, %0
result %4
%0:i32 = var
%1:i1 = ne 0:i32, %0
%2:i32 = select %1, 3:i32, 2:i32
%3:i8 = trunc %2
infer %3
%4:i8 = select %1, 3:i8, 2:i8
result %4
%0:i32 = var
%1:i32 = and 7:i32, %0
%2:i1 = eq 0:i32, %1
pc %2 1:i1
%3:i32 = addnsw 8:i32, %0
%4:i64 = zext %3
%5:i64 = mul 40:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 40:i32, %3
result %7
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
infer %8
%9:i1 = ult 9223372036854775806:i64, %1
result %9
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = addnw 1:i32, %1
%3:i32 = phi %0, %2
%4:i1 = ne 1:i32, %3
infer %4
%5:i1 = slt 0:i32, %1
result %5
%0 = block 2
%1 = block 1
%2:i32 = var
%3:i32 = phi %1, %2
%4 = block 2
%5 = block 3
%6 = block 1
%7:i32 = phi %6, %2
%8 = block 1
%9:i32 = phi %8, %2
%10 = block 1
%11:i32 = phi %10, %2
%12:i32 = phi %5, %7, %9, %11
%13 = block 1
%14:i32 = phi %13, %2
%15:i32 = phi %4, %12, %14
%16:i32 = phi %0, %3, %15
infer %16
result %2
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967231:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 256:i32, %4
%6:i16 = trunc %5
infer %6
%7:i16 = or 256:i16, %3
result %7
%0:i32 = var
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2:i32 = addnsw 1:i32, %0
%3:i64 = sext %2
%4:i64 = mul 4:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = mul 4:i32, %2
result %6
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = addnsw %0, %2 (hasExternalUses)
%4:i64 = sext %3
%5:i1 = ult 170:i64, %4
pc %5 1:i1
%6 = block 1
%7:i32 = phi %6, %0
%8:i64 = sext %7 (hasExternalUses)
%9:i64 = subnsw 200:i64, %8
%10:i32 = trunc %9
infer %10
%11:i32 = sub 200:i32, %0
result %11
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i64 = phi %0, %1
%3:i32 = trunc %2
%4:i1 = slt %3, 0:i32
infer %4
result 0:i1
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i64 = phi %0, %1
%3:i32 = trunc %2
%4:i64 = zext %3
infer %4
result %1
%0 = block 2
%1:i32 = var
%2:i32 = addnw 1:i32, %1
%3:i32 = addnsw 1:i32, %1
%4:i32 = phi %0, %2, %3
%5:i32 = var
%6:i32 = var
%7:i32 = phi %0, %5, %6
%8:i1 = slt %4, %7
infer %8
%9:i1 = slt %3, %7
result %9
%0 = block 2
%1:i8 = var
%2 = block 1
%3:i8 = var
%4:i8 = phi %2, %3
%5:i8 = phi %0, %1, %4
%6:i32 = zext %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = subnsw %6, %8
%10:i1 = eq 0:i32, %9
infer %10
%11:i1 = eq %7, %5
result %11
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (nonNegative) (range=[0,2147483645))
%1:i32 = sdiv %0, 2:i32
infer %1
%2:i32 = ashr %0, 1:i32
result %2
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i1 = slt 0:i32, %0
pc %1 1:i1
%2:i64 = sext %0
%3:i64 = mul 8:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 8:i32, %0
result %5
%0 = block 2
%1:i8 = var
%2:i8 = phi %0, %1, 100:i8
%3:i32 = zext %2
%4:i32 = subnsw %3, 97:i32
%5:i32 = addnsw 138:i32, %4
infer %5 (demandedBits=00000000000000000000000011111111)
%6 = block 2
%7:i8 = phi %6, %1, 100:i8
%8:i32 = zext %7
%9:i32 = add 41:i32, %8
result %9
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294966911:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 96:i32, %4
infer %5 (demandedBits=00000000000000001111111111111111)
%6:i32 = or 96:i32, %2
result %6
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 1:i32, %1
infer %2
%3:i1 = eq 1:i8, %0
result %3
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i32 = phi %0, %1
%3:i1 = sle 0:i32, %2
pc %3 1:i1
%4:i1 = sle 32:i32, %2
%5:i32 = select %4, 4294967295:i32, 0:i32
infer %5
%6:i32 = sext %4
result %6
%0:i32 = var
%1:i32 = and 4294967294:i32, %0
%2:i32 = or 1:i32, %1 (hasExternalUses)
%3:i32 = and 1:i32, %2
%4:i64 = var
%5:i32 = trunc %4
%6:i32 = and 2147483647:i32, %5
%7:i32 = shlnuw %6, 1:i32
%8:i32 = or %3, %7
infer %8
%9:i32 = add 1:i32, %7
result %9
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3
%9:i32 = trunc %8 (hasExternalUses)
%10:i33 = umul.with.overflow 1:i32, %9
%11:i32 = extractvalue %10, 0:i32
%12:i32 = sub %5, %11
%13:i1 = ult %5, %12
%14:i32 = add %5, %11
%15:i1 = ult %14, %5
%16:i1 = select 1:i1, %13, %15
%17:i1 = ult 4294967295:i64, %8
%18:i1 = or %16, %17
%19:i1 = extractvalue %10, 1:i32
%20:i1 = or %18, %19
%21:i1 = or 0:i1, %20
pc %21 0:i1
%22:i1 = ult %3, 16:i64
infer %22
%23:i1 = ult %1, 15:i64
result %23
%0 = block 1
%1:i64 = var
%2:i64 = add 1:i64, %1
%3:i32 = var
%4:i64 = zext %3
%5:i64 = add %2, %4
%6:i64 = phi %0, %5
%7:i32 = trunc %6
infer %7
%8:i32 = trunc %5
result %8
%0 = block 1
%1:i8 = var
%2:i8 = phi %0, %1
%3:i32 = zext %2
%4:i1 = eq 0:i32, %3
infer %4
%5:i1 = eq 0:i8, %1
result %5
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 102:i32
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i32 = subnsw %1, 115:i32
%5:i1 = eq 0:i32, %4
pc %5 0:i1
%6:i32 = subnsw %1, 99:i32
%7:i1 = eq 0:i32, %6
pc %7 0:i1
%8:i32 = subnsw %1, 101:i32
%9:i1 = eq 0:i32, %8
pc %9 0:i1
%10:i32 = subnsw %1, 108:i32
%11:i1 = eq 0:i32, %10
pc %11 0:i1
%12:i32 = subnsw %1, 105:i32
%13:i1 = eq 0:i32, %12
pc %13 0:i1
%14:i32 = subnsw %1, 119:i32
%15:i1 = eq 0:i32, %14
pc %15 0:i1
%16:i32 = subnsw %1, 111:i32
%17:i1 = eq 0:i32, %16
pc %17 0:i1
%18:i32 = subnsw %1, 114:i32
%19:i1 = eq 0:i32, %18
infer %19
%20:i1 = eq 114:i8, %0
result %20
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = addnsw %0, %2 (hasExternalUses)
%4:i64 = sext %3
%5:i1 = ult 170:i64, %4
pc %5 0:i1
%6:i64 = sext %0 (hasExternalUses)
%7:i64 = subnsw 200:i64, %6
%8:i32 = trunc %7
infer %8
%9:i32 = sub 200:i32, %0
result %9
%0:i64 = var
%1:i64 = var
%2:i64 = sub %0, %1
%3:i32 = var
%4:i32 = lshr %3, 1:i32
%5:i64 = zext %4
%6:i64 = addnsw %2, %5
%7:i32 = trunc %6
%8:i32 = and 2147483647:i32, %7
%9:i32 = shl %8, 1:i32
infer %9
%10:i32 = add %7, %7
result %10
%0 = block 2
%1 = block 2
%2 = block 2
%3:i32 = phi %2, 4294967295:i32, 1:i32
%4:i32 = var
%5:i32 = var
%6:i32 = mulnsw 60:i32, %5
%7:i32 = addnsw %4, %6
%8:i32 = mulnsw %3, %7
%9:i32 = phi %1, %8, 0:i32
%10:i32 = phi %0, %9, 0:i32
%11:i1 = ne 0:i32, %10
%12:i32 = zext %11
%13:i8 = trunc %12
infer %13
%14:i8 = zext %11
result %14
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3
infer %4
%5:i8 = zext %2
result %5
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = addnsw 1:i32, %0
%4:i64 = zext %3
%5:i64 = mul 8:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 8:i32, %3
result %7
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i32 = var
%3:i64 = sext %2
%4:i1 = slt %1, %3
pc %4 0:i1
%5 = block 1
%6:i32 = phi %5, %2
%7:i1 = slt 0:i32, %6
infer %7
%8:i1 = slt 0:i32, %2
result %8
%0:i64 = var (signBits=33) (range=[-2147483648,2147483647))
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = sext %1
%3:i64 = mulnsw 24:i64, %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%4:i64 = mul 4611686018427387928:i64, %0
result %4
%0:i64 = var
%1:i64 = sub %0, 8:i64
%2:i64 = sub %1, 17:i64
infer %2
%3:i64 = add 18446744073709551591:i64, %0
result %3
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (nonZero) (range=[1,-2147483648))
%1:i32 = addnw 1:i32, %0 (hasExternalUses)
%2:i16 = var
%3:i32 = sext %2 (hasExternalUses)
%4:i1 = ne %1, %3
pc %4 0:i1
%5:i32 = var
%6 = block 1
%7:i16 = var
%8:i16 = add 1:i16, %7
%9:i16 = phi %6, %8
%10:i32 = sext %9
%11:i32 = subnsw %10, 1:i32
%12:i32 = subnw %3, 1:i32 (hasExternalUses)
%13:i32 = subnsw %11, %12 (hasExternalUses)
%14:i1 = sle %5, %13
pc %14 1:i1
%15:i64 = sext %9
infer %15
%16:i64 = sext %8
result %16
%0:i32 = var
%1:i32 = var
%2:i32 = addnsw %0, %1
%3:i64 = sext %2 (hasExternalUses)
%4:i64 = and 18374686479671623680:i64, %3
%5:i1 = ne 0:i64, %4
pc %5 1:i1
%6:i64 = lshr %3, 8:i64 (hasExternalUses)
%7:i64 = lshr %6, 7:i64 (hasExternalUses)
%8:i64 = lshr %7, 7:i64 (hasExternalUses)
%9:i64 = lshr %8, 7:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64
%14:i64 = and 127:i64, %13
infer %14 (demandedBits=0000000000000000000000000000000000000000000000000000000001111111)
result 127:i64
%0 = block 1
%1:i64 = var
%2:i64 = phi %0, %1
%3:i32 = trunc %2 (hasExternalUses)
%4:i1 = slt 0:i32, %3
pc %4 1:i1
%5 = block 1
%6:i64 = phi %5, %2
%7:i32 = trunc %6
infer %7
%8:i32 = trunc %1
result %8
%0:i64 = var
%1:i64 = and 255:i64, %0
%2:i8 = trunc %1
infer %2
%3:i8 = trunc %0
result %3
%0:i32 = var
%1:i32 = and 256:i32, %0
%2:i1 = ne 0:i32, %1
pc %2 0:i1
%3:i32 = and 512:i32, %0
%4:i1 = ne 0:i32, %3
pc %4 0:i1
%5:i32 = and 8192:i32, %0
%6:i1 = ne 0:i32, %5
pc %6 1:i1
%7:i32 = and 131072:i32, %0
%8:i1 = ne 0:i32, %7
%9:i32 = zext %8
infer %9
%10:i32 = ashr %7, 17:i32
result %10
%0:i32 = var
%1:i32 = subnw 4294967295:i32, %0 (hasExternalUses)
%2:i32 = subnw 4294967295:i32, %1
infer %2
result %0
%0 = block 3
%1:i16 = var
%2:i16 = var
%3:i16 = var
%4:i32 = zext %3
%5:i32 = and 4294965215:i32, %4
%6:i16 = trunc %5
%7:i16 = phi %0, %1, %2, %6
%8:i32 = zext %7
%9:i32 = and 4294967293:i32, %8
%10:i16 = trunc %9
%11:i32 = zext %10
%12:i32 = or 16:i32, %11
%13:i16 = trunc %12
infer %13
%14 = block 3
%15:i16 = phi %14, %1, %2, %6
%16:i32 = zext %15
%17:i32 = and 4294967293:i32, %16
%18:i16 = trunc %17
%19:i16 = or 16:i16, %18
result %19
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 45:i32, %1
infer %2
%3:i1 = eq 45:i8, %0
result %3
%0:i1 = var
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
infer %2
result %0
%0:i32 = var
%1:i32 = shl %0, 8:i32
%2:i64 = zext %1
%3:i64 = or 0:i64, %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %2
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 1:i1
%5 = block 1
%6:i32 = phi %5, %1
%7:i32 = add 4294967295:i32, %6 (hasExternalUses)
%8:i32 = udiv %7, 8:i32
infer %8
%9 = block 1
%10:i32 = phi %9, %1
%11:i32 = add 4294967295:i32, %10
%12:i32 = lshr %11, 3:i32
result %12
%0 = block 2
%1 = block 2
%2:i32 = phi %1, 34:i32, 2:i32
%3:i32 = or 64:i32, %2
%4:i32 = or 64:i32, %2
%5:i32 = phi %0, %3, %4
infer %5 (demandedBits=00000000000000001111111111111111)
result %4
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = and 4294967231:i32, %1
%5:i16 = trunc %4
infer %5 (demandedBits=1111111011111111)
%6:i16 = add 65472:i16, %0
result %6
%0 = block 3
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i32 = trunc %1
%3:i64 = addnw 1:i64, %1
%4:i32 = trunc %3
%5:i32 = phi %0, %2, %4, 0:i32
%6:i1 = slt %5, 0:i32
infer %6
result 0:i1
%0 = block 1
%1:i32 = var
%2:i16 = var
%3:i32 = zext %2
%4:i32 = subnsw %1, %3
%5:i32 = ashr %4, 8:i32
%6:i32 = phi %0, %5
%7:i8 = trunc %6
infer %7
%8:i8 = trunc %5
result %8
%0:i8 = var
%1:i32 = zext %0
%2:i8 = var
%3:i32 = zext %2
%4:i1 = slt %1, %3
infer %4
%5:i1 = ult %0, %2
result %5
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
%2:i64 = zext %1
%3:i64 = mul 48:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 48:i32, %1
result %5
%0:i32 = var
%1:i64 = sext %0
%2:i64 = mul 4:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 4:i32, %0
result %4
%0 = block 2
%1 = block 12
%2:i8 = var
%3:i32 = zext %2
%4:i8 = var
%5:i32 = sext %4
%6:i32 = addnsw %3, %5
%7:i8 = trunc %6
%8:i32 = zext %2
%9:i8 = var
%10:i32 = sext %9
%11:i32 = addnsw %8, %10
%12:i8 = trunc %11
%13:i8 = phi %1, 98:i8, %7, 99:i8, 99:i8, 98:i8, %2, 98:i8, 98:i8, %12, 99:i8, 99:i8, 98:i8
%14:i32 = sext %13
%15:i1 = eq 98:i32, %14
%16:i1 = phi %0, 1:i1, %15
%17:i32 = zext %16
%18:i1 = ne 0:i32, %17
infer %18
result %16
%0:i32 = var
%1:i32 = mulnsw 2:i32, %0
%2:i64 = sext %1
%3:i64 = mulnsw 8:i64, %2
%4:i64 = addnsw 1:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = fshl %0, 271327264:i32, 4:i32
result %6
%0:i32 = var
%1:i1 = eq 5:i32, %0
pc %1 0:i1
%2 = block 1
%3:i32 = phi %2, %0
infer %3
result %0
%0 = block 2
%1 = block 2
%2:i8 = var
%3:i32 = zext %2
%4:i8 = var
%5:i32 = zext %4
%6:i32 = phi %1, %3, %5
%7:i32 = subnw %6, 69:i32
%8:i32 = xor 2:i32, %7
%9:i32 = addnsw 69:i32, %8
%10:i8 = trunc %9
%11:i32 = zext %10
%12:i32 = phi %0, %6, %11
%13:i1 = eq 64:i32, %12
infer %13
%14 = block 2
%15:i32 = phi %14, %3, %5
%16:i1 = eq 64:i32, %15
result %16
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1 (hasExternalUses)
%3:i1 = slt %0, %2
pc %3 1:i1
%4:i8 = var
%5:i32 = sext %4
%6:i1 = ne 0:i32, %5
%7:i32 = select %6, 1:i32, 0:i32 (hasExternalUses)
%8:i32 = addnw 6:i32, %7 (hasExternalUses)
%9:i32 = addnsw %0, %8 (hasExternalUses)
%10:i1 = sle %9, %2
pc %10 1:i1
%11:i64 = sext %2 (hasExternalUses)
%12:i64 = addnsw 1:i64, %11
%13:i64 = zext %8 (hasExternalUses)
%14:i64 = sub %13, 6:i64
%15:i64 = add 7:i64, %14
%16:i64 = zext %0 (hasExternalUses)
%17:i64 = add %15, %16
%18:i1 = slt %12, %17
%19:i64 = select %18, %17, %12
%20:i64 = add 18446744073709551610:i64, %19
%21:i64 = sub %20, %14
%22:i64 = sub %21, %16 (hasExternalUses)
%23:i1 = ult %22, 8:i64
pc %23 0:i1
%24:i64 = add 18446744073709551609:i64, %19
%25:i64 = sub %24, %14
%26:i64 = sub %25, %16 (hasExternalUses)
%27:i1 = ult 4294967295:i64, %26
infer %27
result 0:i1
%0 = block 1
%1:i64 = var
%2:i64 = phi %0, %1
%3 = block 2
%4 = block 1
%5:i64 = var
%6:i64 = phi %4, %5
%7 = block 1
%8:i64 = var
%9:i64 = phi %7, %8
%10:i64 = phi %3, %6, %9
%11:i1 = eq %2, %10
infer %11
%12:i1 = eq %1, %10
result %12
%0:i16 = var
%1:i32 = zext %0
%2:i32 = or 64:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = and 4294966911:i32, %4
%6:i16 = trunc %5
infer %6
%7:i16 = and 65151:i16, %3
result %7
%0 = block 3
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = phi %0, %1, %1, %1
infer %2
result %1
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,4294967295))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i64 = var
%3:i32 = trunc %2 (hasExternalUses)
%4:i64 = zext %3
%5:i1 = ne %1, %4
pc %5 0:i1
%6:i32 = add 4294967295:i32, %3
%7:i64 = zext %6
%8:i64 = addnw 1:i64, %7
%9:i32 = trunc %8
infer %9
result %3
%0 = block 2
%1 = block 3
%2:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%3:i64 = addnw 1:i64, %2
%4:i32 = trunc %3
%5:i32 = trunc %2
%6:i32 = phi %1, %4, %5, 0:i32
%7:i32 = phi %0, 4293967296:i32, %6
%8:i1 = slt %7, 0:i32
pc %8 0:i1
%9:i1 = eq 1:i32, %7
pc %9 0:i1
%10:i64 = zext %7
infer %10
%11:i64 = sext %6
result %11
%0:i32 = var
%1:i32 = mulnw 0:i32, %0
%2:i32 = addnw 5:i32, %1
%3:i64 = sext %2
infer %3
result 5:i64
%0:i32 = var
%1:i32 = subnsw %0, 65:i32
%2:i32 = addnsw 10:i32, %1
infer %2
%3:i32 = add 4294967241:i32, %0
result %3
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = var
%4:i1 = slt %0, %3
pc %4 1:i1
%5:i1 = sle 0:i32, %0
infer %5
result 1:i1
%0 = block 2
%1:i32 = var
%2:i32 = and 1:i32, %1
%3:i1 = eq 0:i32, %2
%4:i32 = zext %3
%5:i1 = ne 0:i32, %4
%6:i1 = xor 1:i1, %5
%7:i1 = phi %0, 1:i1, %6
%8:i32 = zext %7
%9:i8 = trunc %8
infer %9
%10:i8 = zext %7
result %10
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294965215:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = and 63455:i16, %0
result %4
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
%3 = block 1
%4:i8 = var
%5:i8 = phi %3, %4
%6:i32 = sext %5 (hasExternalUses)
%7:i1 = ne %1, %6
%8:i1 = and %2, %7
pc %8 0:i1
%9 = block 1
%10:i8 = phi %9, %0
%11:i32 = sext %10
%12:i1 = eq %6, %11
infer %12
%13:i1 = eq %0, %4
result %13
%0:i32 = select 1:i1, 128:i32, 64:i32
infer %0 (demandedBits=00000000000000001111111111111101)
result 128:i32
%0:i32 = var
%1:i1 = ule %0, 65535:i32
pc %1 0:i1
%2:i32 = lshr %0, 10:i32
%3:i32 = and 63:i32, %2
%4:i32 = sub %0, 65536:i32 (hasExternalUses)
%5:i32 = lshr %4, 10:i32
%6:i32 = and 192:i32, %5
%7:i32 = add %3, %6
%8:i8 = trunc %7
infer %8
%9:i8 = trunc %5
result %9
%0:i64 = var
%1 = block 7
%2:i64 = var
%3:i64 = var
%4:i64 = var
%5:i64 = var
%6:i64 = phi %1, %2, %3, %3, %4, %5, %5, %5
%7:i1 = ule %0, %6
%8:i32 = zext %7
%9:i1 = ne 0:i32, %8
infer %9
result %7
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3 (hasExternalUses)
%9:i32 = trunc %8 (hasExternalUses)
%10:i33 = umul.with.overflow 1:i32, %9 (hasExternalUses)
%11:i32 = extractvalue %10, 0:i32
%12:i32 = sub %5, %11
%13:i1 = ult %5, %12
%14:i32 = add %5, %11
%15:i1 = ult %14, %5
%16:i1 = select 1:i1, %13, %15
infer %16
result 0:i1
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3
infer %4
%5:i32 = trunc %2
result %5
%0 = block 2
%1:i8 = var
%2:i32 = zext %1
%3:i1 = eq 0:i32, %2
%4:i32 = select %3, 16:i32, 2:i32
%5:i32 = or 32:i32, %4
%6:i32 = phi %0, %5, %4
%7:i32 = and 32:i32, %6
%8:i1 = ne 0:i32, %7
infer %8
%9:i1 = eq %6, %5
result %9
%0:i8 = var
%1:i32 = zext %0
%2:i1 = slt 4:i32, %1
infer %2
%3:i1 = ult 4:i8, %0
result %3
%0 = block 1
%1 = block 1
%2:i64 = var
%3:i64 = phi %1, %2
%4:i64 = phi %0, %3
%5:i32 = trunc %4
infer %5
%6:i32 = trunc %2
result %6
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 13:i32, %1
%3:i1 = eq 0:i32, %2
pc %3 1:i1
%4:i32 = and 8:i32, %1
infer %4
result 0:i32
%0:i64 = var
%1:i32 = trunc %0
%2:i32 = and 2147483647:i32, %1
infer %2 (demandedBits=01111111111111111111111111111111)
result %1
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = subnsw %1, 102:i32
%3:i1 = eq 0:i32, %2
pc %3 0:i1
%4:i32 = subnsw %1, 115:i32
%5:i1 = eq 0:i32, %4
pc %5 0:i1
%6:i32 = subnsw %1, 99:i32
%7:i1 = eq 0:i32, %6
pc %7 0:i1
%8:i32 = subnsw %1, 101:i32
%9:i1 = eq 0:i32, %8
pc %9 0:i1
%10:i32 = subnsw %1, 108:i32
%11:i1 = eq 0:i32, %10
pc %11 0:i1
%12:i32 = subnsw %1, 105:i32
%13:i1 = eq 0:i32, %12
pc %13 0:i1
%14:i32 = subnsw %1, 119:i32
%15:i1 = eq 0:i32, %14
infer %15
%16:i1 = eq 119:i8, %0
result %16
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i32 = addnsw 1:i32, %0
%4:i64 = zext %3
%5:i64 = mulnw 8:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 8:i32, %3
result %7
%0:i64 = var
%1:i32 = trunc %0
%2:i32 = and 2147483647:i32, %1
%3:i32 = shlnuw %2, 1:i32
%4:i32 = or 0:i32, %3
%5:i32 = and 4294967294:i32, %4
infer %5
%6:i32 = add %1, %1
result %6
%0 = block 2
%1:i32 = select 0:i1, 16:i32, 2:i32
%2:i32 = or 32:i32, %1
%3:i32 = phi %0, %2, 2:i32
%4:i32 = and 32:i32, %3
%5:i1 = ne 0:i32, %4
infer %5
%6:i1 = eq %3, %2
result %6
%0:i32 = var
%1:i1 = sle 1:i32, %0
pc %1 1:i1
%2:i1 = slt 0:i32, %0
pc %2 1:i1
%3:i32 = addnsw 4294967295:i32, %0
%4:i64 = zext %3
%5:i64 = addnw 1:i64, %4
infer %5 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%6:i64 = sext %0
result %6
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 13:i32, %1
%3:i1 = eq 0:i32, %2
pc %3 1:i1
%4:i32 = and 8:i32, %1
%5:i1 = ne 0:i32, %4
pc %5 0:i1
%6:i32 = and 4:i32, %1
%7:i1 = ne 0:i32, %6
pc %7 0:i1
%8:i32 = and 18:i32, %1
%9:i1 = ne 0:i32, %8
pc %9 1:i1
%10:i32 = or 2:i32, %1
%11:i16 = trunc %10
infer %11
%12:i16 = or 2:i16, %0
result %12
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32768))
%1:i16 = var
%2:i32 = sext %1
%3:i1 = slt 0:i32, %2
%4:i32 = select %3, %2, 0:i32
%5:i64 = zext %4
%6:i1 = ne %0, %5
pc %6 1:i1
%7 = block 1
%8:i64 = phi %7, %0
infer %8 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %0
%0:i64 = var (signBits=33) (range=[-2147483648,2147483647))
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = sext %1
%3:i64 = mulnsw 24:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 24:i32, %1
result %5
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ule %1, 127:i32
infer %2
%3:i1 = ult %0, 128:i8
result %3
%0:i32 = var
%1:i32 = and 32:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
result %2
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%2:i64 = addnw 1:i64, %1
%3:i64 = phi %0, %2
%4:i32 = trunc %3 (hasExternalUses)
%5:i32 = subnsw %4, 1:i32 (hasExternalUses)
%6:i1 = sle 0:i32, %5
pc %6 1:i1
%7:i1 = ult %3, 8:i64
pc %7 0:i1
%8:i64 = addnsw 18446744073709551615:i64, %3 (hasExternalUses)
%9:i32 = trunc %8 (hasExternalUses)
%10:i33 = umul.with.overflow 1:i32, %9 (hasExternalUses)
%11:i1 = extractvalue %10, 1:i32
infer %11
result 0:i1
%0:i64 = var
%1:i1 = eq 0:i64, %0
pc %1 0:i1
%2:i64 = var
%3:i64 = sub %2, %0
%4:i32 = trunc %3
%5:i32 = and 2147483647:i32, %4
%6:i32 = shl %5, 1:i32
infer %6
%7:i32 = add %4, %4
result %7
%0:i64 = var (nonZero) (range=[1,0))
%1:i32 = trunc %0 (hasExternalUses)
%2:i1 = slt %1, 2:i32
pc %2 0:i1
%3:i1 = slt 0:i32, %1
infer %3
result 1:i1
%0:i32 = var (knownBits=0000000000000000xxxxxxxxxxxxxxxx) (nonNegative) (signBits=16) (range=[0,65536))
%1:i32 = and 64:i32, %0
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3:i32 = and 4294967231:i32, %0
%4:i16 = trunc %3
%5:i32 = zext %4
infer %5 (demandedBits=00000000000000001111111011111111)
result %3
%0:i32 = var (range=[0,2))
%1 = block 1
%2:i32 = var
%3:i32 = phi %1, %2
%4:i32 = xor %0, %3
%5:i1 = eq 0:i32, %4
infer %5
%6:i1 = eq %0, %2
result %6
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i1 = sle 0:i32, %0
pc %3 1:i1
%4:i32 = mulnw 0:i32, %1
%5:i32 = addnw %0, %4
%6:i64 = sext %5
infer %6
%7:i64 = sext %0
result %7
%0 = block 2
%1 = block 4
%2:i8 = var
%3:i8 = phi %1, %2, %2, %2, %2
%4:i8 = phi %0, %3, %2
infer %4
result %2
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var (range=[-2147483648,2147483647))
%4:i32 = phi %1, %2, %3
%5:i32 = phi %0, %4, %4
%6:i1 = eq 1:i32, %5
infer %6
%7 = block 2
%8:i32 = phi %7, %2, %3
%9:i1 = eq 1:i32, %8
result %9
%0:i32 = var
%1:i64 = sext %0
%2:i64 = mul 16:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 16:i32, %0
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4 (hasExternalUses)
%6:i1 = slt 0:i32, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i8 = var
%11:i32 = zext %10
%12:i32 = or %9, %11 (hasExternalUses)
%13:i1 = slt %5, %12
%14:i1 = and %6, %13
pc %14 0:i1
%15 = block 1
%16:i32 = phi %15, %5
%17:i32 = ashr %16, 8:i32
%18:i8 = trunc %17
infer %18
%19:i8 = trunc %1
result %19
%0:i8 = var
%1:i32 = zext %0
%2:i32 = or 16:i32, %1
%3:i8 = trunc %2
infer %3
%4:i8 = or 16:i8, %0
result %4
%0 = block 2
%1 = block 1
%2:i32 = var
%3:i32 = phi %1, %2
%4 = block 2
%5 = block 2
%6:i32 = phi %5, %2, %2
%7 = block 1
%8:i32 = phi %7, %2
%9:i32 = phi %4, %6, %8
%10:i32 = phi %0, %3, %9
infer %10
result %2
%0 = block 3
%1:i16 = var
%2:i16 = var
%3:i16 = var
%4:i32 = zext %3
%5:i32 = and 4294965215:i32, %4
%6:i16 = trunc %5
%7:i16 = phi %0, %1, %2, %6
%8:i32 = zext %7
%9:i32 = and 4294967293:i32, %8
%10:i16 = trunc %9
%11:i32 = zext %10
infer %11 (demandedBits=00000000000000001111111111101111)
result %9
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shlnsw %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
pc %7 1:i1
%8:i32 = and 960:i32, %5
%9:i32 = addnw 64:i32, %8
infer %9
result %4
%0:i8 = var
%1:i8 = add 255:i8, %0 (hasExternalUses)
%2:i32 = zext %1
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 1:i8, %0
result %4
%0:i8 = var
%1:i32 = zext %0
%2:i32 = and 192:i32, %1
%3:i1 = eq 128:i32, %2
pc %3 0:i1
%4 = block 1
%5:i8 = phi %4, %0
%6:i32 = zext %5
infer %6
result %1
%0:i32 = var
%1:i32 = mul 37:i32, %0
%2:i64 = zext %1
%3:i32 = trunc %2
%4:i32 = urem %3, 124:i32
%5:i64 = zext %4
infer %5 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%6:i64 = urem %2, 124:i64
result %6
%0:i32 = var
%1:i1 = slt 2:i32, %0
pc %1 1:i1
%2:i1 = slt 3:i32, %0
%3:i32 = select %2, %0, 3:i32
%4:i64 = zext %3
infer %4
%5:i64 = sext %0
result %5
%0:i8 = var
%1:i32 = sext %0
%2:i1 = eq 4294967295:i32, %1
infer %2
%3:i1 = eq 255:i8, %0
result %3
%0:i64 = var (knownBits=0000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (signBits=8) (range=[0,72057594037927936))
%1:i64 = and 127:i64, %0
%2:i64 = or 128:i64, %1
infer %2 (demandedBits=0000000000000000000000000000000000000000000000000000000011111111)
%3:i64 = or 128:i64, %0
result %3
%0:i32 = zext 0:i1
%1:i8 = trunc %0
infer %1
result 0:i8
%0:i32 = var
%1:i1 = ne 10:i32, %0
pc %1 1:i1
%2:i1 = ne 11:i32, %0
pc %2 1:i1
%3:i1 = ne 0:i32, %0
pc %3 1:i1
%4:i1 = ne 1:i32, %0
pc %4 1:i1
%5:i1 = ne 2:i32, %0
pc %5 1:i1
%6:i1 = ne 3:i32, %0
pc %6 1:i1
%7:i1 = ne 4:i32, %0
pc %7 1:i1
%8:i1 = ne 5:i32, %0
pc %8 1:i1
%9:i1 = ne 6:i32, %0
pc %9 1:i1
%10:i1 = ne 7:i32, %0
pc %10 1:i1
%11:i1 = ne 8:i32, %0
pc %11 1:i1
%12:i1 = ne 9:i32, %0
pc %12 1:i1
%13:i32 = sub %0, 12:i32
%14:i32 = udiv %13, 2:i32
infer %14
%15:i32 = lshr %13, 1:i32
result %15
%0 = block 2
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0) (nonNegative) (range=[0,2147483647))
%2:i32 = var
%3:i32 = phi %0, %1, %2
%4:i32 = select 0:i1, 1:i32, 2:i32
%5:i32 = addnsw %3, %4
infer %5
%6 = block 2
%7:i32 = phi %6, %1, %2
%8:i32 = add 2:i32, %7
result %8
%0:i32 = var
%1:i64 = zext %0
%2:i64 = or 0:i64, %1
%3:i64 = and 4294967295:i64, %2
%4:i64 = or 1095216660480:i64, %3
infer %4
%5:i64 = add 1095216660480:i64, %1
result %5
%0 = block 1
%1:i8 = var
%2:i32 = zext %1
%3:i8 = var
%4:i32 = zext %3
%5:i32 = addnw %2, %4
%6:i8 = var
%7:i32 = zext %6
%8:i32 = addnw %5, %7
%9:i32 = phi %0, %8
%10:i8 = trunc %9
infer %10
%11:i8 = trunc %8
result %11
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2))
%1:i1 = slt %0, 1:i32
pc %1 1:i1
%2:i64 = sext %0
infer %2
result 0:i64
%0:i32 = var (range=[1,5))
%1:i32 = add 4294967295:i32, %0
%2:i1 = slt %1, 0:i32
%3:i32 = select %2, %1, 0:i32
%4:i32 = sub %1, %3
%5:i64 = zext %4
%6:i64 = addnw 1:i64, %5
infer %6
%7:i64 = sext %0
result %7
%0:i32 = var
%1:i64 = sext %0
%2:i1 = ult %1, 170:i64
pc %2 1:i1
%3:i64 = subnsw 200:i64, %1
%4:i32 = trunc %3
infer %4
%5:i32 = sub 200:i32, %0
result %5
%0 = block 1
%1:i32 = phi %0, 0:i32
infer %1
result 0:i32
%0 = block 1
%1:i8 = var
%2:i32 = zext %1
%3:i32 = shlnuw %2, 24:i32
%4:i8 = var
%5:i32 = zext %4
%6:i32 = shlnw %5, 16:i32
%7:i32 = or %3, %6
%8:i8 = var
%9:i32 = zext %8
%10:i32 = shlnw %9, 8:i32
%11:i32 = or %7, %10
%12:i8 = var
%13:i32 = zext %12
%14:i32 = or %11, %13
%15:i32 = phi %0, %14
%16:i32 = subnw %15, 1:i32
infer %16
%17:i32 = add 4294967295:i32, %14
result %17
%0:i8 = var
%1:i32 = zext %0
%2:i32 = shlnw %1, 8:i32
%3:i8 = var
%4:i32 = zext %3
%5:i32 = or %2, %4 (hasExternalUses)
%6:i1 = slt 0:i32, %5
%7:i8 = var
%8:i32 = zext %7
%9:i32 = shlnw %8, 8:i32
%10:i8 = var
%11:i32 = zext %10
%12:i32 = or %9, %11 (hasExternalUses)
%13:i1 = slt %5, %12
%14:i1 = and %6, %13
pc %14 0:i1
%15 = block 1
%16:i32 = phi %15, %5
%17:i32 = ashr %16, 8:i32
infer %17 (demandedBits=00000000000000000000000011111111)
result %1
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 4:i32
%3:i32 = add 4294967295:i32, %2
%4:i1 = slt %3, 0:i32
%5:i32 = select %4, %3, 0:i32
%6:i32 = sub %3, %5
%7:i64 = zext %6
%8:i64 = addnw 1:i64, %7 (hasExternalUses)
%9:i1 = ult %8, 8:i64
pc %9 0:i1
%10:i64 = zext %2 (hasExternalUses)
%11:i32 = trunc %10
infer %11
result %1
%0:i32 = var
%1:i32 = and 16:i32, %0
%2:i1 = ne 0:i32, %1
%3:i1 = xor 1:i1, %2
infer %3
%4:i1 = eq 0:i32, %1
result %4
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = and 4294966847:i32, %1
%5:i16 = trunc %4
infer %5 (demandedBits=1111111101111111)
%6:i16 = and 65087:i16, %0
result %6
%0 = block 2
%1:i32 = select 1:i1, 16:i32, 2:i32
%2:i32 = or 32:i32, %1
%3:i32 = phi %0, %2, 16:i32
%4:i32 = select 0:i1, 128:i32, 64:i32
%5:i32 = or %3, %4
infer %5 (demandedBits=00000000000000001111111111111111)
%6 = block 2
%7:i32 = phi %6, %2, 16:i32
%8:i32 = add 64:i32, %7
result %8
%0 = block 3
%1:i16 = var
%2:i16 = var
%3:i16 = var
%4:i32 = zext %3
%5:i32 = and 4294965215:i32, %4
%6:i16 = trunc %5
%7:i16 = phi %0, %1, %2, %6
%8:i32 = zext %7
%9:i32 = and 4294967293:i32, %8
%10:i16 = trunc %9
%11:i32 = zext %10
%12:i32 = or 16:i32, %11
infer %12 (demandedBits=00000000000000001111111111111111)
%13 = block 3
%14:i16 = phi %13, %1, %2, %6
%15:i32 = zext %14
%16:i32 = and 4294967293:i32, %15
%17:i32 = or 16:i32, %16
result %17
%0 = block 2
%1:i32 = select 0:i1, 16:i32, 2:i32
%2:i32 = or 32:i32, %1
%3:i32 = phi %0, %2, 2:i32
%4:i32 = select 0:i1, 128:i32, 64:i32
%5:i32 = or %3, %4
infer %5 (demandedBits=00000000000000001111111111111111)
%6 = block 2
%7:i32 = phi %6, %2, 2:i32
%8:i32 = add 64:i32, %7
result %8
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 64:i32, %1
%3:i1 = ne 0:i32, %2
pc %3 1:i1
%4:i32 = and 4294966847:i32, %1
%5:i16 = trunc %4
%6:i32 = zext %5
%7:i32 = or 128:i32, %6
%8:i16 = trunc %7
infer %8
%9:i16 = add 128:i16, %5
result %9
%0:i32 = select 1:i1, 16:i32, 2:i32
%1:i32 = or 32:i32, %0
infer %1 (demandedBits=00000000000000001111111111111111)
result 48:i32
%0 = block 1
%1:i32 = var
%2:i32 = phi %0, %1
%3:i64 = zext %2
infer %3
%4:i64 = zext %1
result %4
%0 = block 2
%1 = block 2
%2:i32 = var
%3:i32 = var
%4:i32 = phi %1, %2, %3
%5:i32 = phi %0, %4, 0:i32
%6:i32 = addnsw 1:i32, %5 (hasExternalUses)
%7:i32 = subnsw %6, 1:i32 (hasExternalUses)
%8:i1 = slt 0:i32, %7
pc %8 1:i1
%9:i64 = zext %5
infer %9
%10:i64 = sext %4
result %10
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, 0:i32
%3:i32 = and 1:i32, %2
%4:i1 = ne 0:i32, %3
infer %4
%5:i1 = trunc %2
result %5
%0:i32 = var
%1:i32 = and 1:i32, %0
infer %1 (demandedBits=11111111111111111111111111111110)
result 0:i32
%0:i32 = var (range=[0,-2147483648))
%1:i8 = var
%2:i32 = zext %1 (hasExternalUses)
%3:i1 = eq %0, %2
pc %3 0:i1
%4:i8 = var
%5:i32 = zext %4 (hasExternalUses)
%6:i1 = eq %0, %5
pc %6 0:i1
%7 = block 1
%8:i32 = phi %7, %0
%9:i1 = eq 0:i32, %8
pc %9 0:i1
%10:i32 = var
%11:i1 = eq %10, %8
infer %11
%12:i1 = eq %0, %10
result %12
%0:i16 = var
%1:i64 = sext %0
%2:i1 = ult 64:i64, %1
infer %2
%3:i1 = ult 64:i16, %0
result %3
%0 = block 2
%1 = block 2
%2:i16 = var
%3:i32 = zext %2
%4 = block 2
%5:i32 = var
%6 = block 2
%7:i64 = var
%8:i64 = phi %6, %7, 0:i64
%9:i32 = trunc %8
%10:i32 = add %5, %9
%11:i32 = phi %4, %10, %5
%12:i32 = subnsw %3, %11
%13:i32 = var
%14:i32 = phi %1, %12, %13
%15:i64 = sext %14
%16:i64 = phi %0, %15, %15
infer %16
result %15
%0:i32 = var
%1:i32 = and 8:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i8 = trunc %3 (hasExternalUses)
%5:i32 = zext %4
%6:i1 = eq 0:i32, %5
%7:i32 = zext %6
%8:i32 = mulnsw 4:i32, %7
infer %8 (demandedBits=00000000000000000000000011111111)
%9:i32 = shl 4:i32, %1
result %9
%0:i32 = var
%1:i8 = trunc %0 (hasExternalUses)
%2:i32 = sext %1
%3:i8 = trunc %2
infer %3
result %1
%0:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000) (range=[0,-15))
%1:i64 = add 16:i64, %0 (hasExternalUses)
%2 = block 1
%3:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65))
%4:i64 = addnw 1:i64, %3
%5:i64 = phi %2, %4
%6:i64 = urem %5, 16:i64
%7:i64 = sub %5, %6 (hasExternalUses)
%8:i1 = eq %1, %7
pc %8 1:i1
%9:i1 = eq %5, %7
pc %9 0:i1
%10:i64 = sub %5, %7
infer %10
%11:i64 = and 15:i64, %4
result %11
%0:i32 = var
%1:i1 = sle 0:i32, %0
pc %1 1:i1
%2 = block 1
%3:i32 = phi %2, %0
infer %3
result %0
%0:i32 = var
%1:i1 = sle 97:i32, %0
pc %1 1:i1
%2:i1 = sle %0, 102:i32
pc %2 1:i1
%3:i32 = subnsw %0, 97:i32
%4:i32 = addnsw 10:i32, %3
infer %4
%5:i32 = add 4294967209:i32, %0
result %5
%0:i32 = select 0:i1, 16:i32, 2:i32
%1:i32 = or 32:i32, %0 (hasExternalUses)
%2:i32 = and 32:i32, %1
infer %2
result 32:i32
%0:i8 = var (signBits=2) (range=[0,46))
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
infer %2
%3:i1 = slt 0:i8, %0
result %3
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 12:i32, %1
infer %2
%3:i1 = eq 12:i8, %0
result %3
%0 = block 1
%1:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i64 = phi %0, %1
%3:i32 = trunc %2
%4:i64 = zext %3
%5:i64 = shlnuw 1:i64, %4
infer %5
%6:i64 = shl 1:i64, %1
result %6
%0 = block 3
%1:i64 = var
%2:i64 = phi %0, %1, %1, %1
%3:i1 = eq 0:i64, %2
infer %3
%4:i1 = eq 0:i64, %1
result %4
%0:i32 = var
%1:i32 = mulnsw 2:i32, %0
%2:i64 = sext %1
%3:i64 = mul 8:i64, %2
%4:i64 = add 1:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = fshl %0, 271327264:i32, 4:i32
result %6
%0 = block 2
%1:i32 = select 0:i1, 128:i32, 64:i32
%2:i32 = or 16:i32, %1
%3:i32 = phi %0, 80:i32, %2
%4:i16 = trunc %3
infer %4
result 80:i16
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 1:i1
%5 = block 1
%6:i32 = phi %5, %1
%7:i32 = add 4294967295:i32, %6
infer %7
%8:i32 = add 4294967295:i32, %1
result %8
%0:i32 = var
%1:i1 = eq 5:i32, %0
pc %1 0:i1
%2:i1 = eq 0:i32, %0
pc %2 0:i1
%3:i32 = and 255:i32, %0 (hasExternalUses)
%4:i1 = eq 13:i32, %3
pc %4 0:i1
%5:i1 = eq 10:i32, %3
pc %5 0:i1
%6:i1 = eq 11:i32, %3
pc %6 0:i1
%7:i1 = ne 0:i32, %0
infer %7
result 1:i1
%0 = block 2
%1:i32 = var
%2:i32 = phi %0, %1, %1
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
infer %4 (demandedBits=11111111111111111111111111111110)
%5:i32 = add %1, %1
result %5
%0:i32 = var
%1:i32 = addnsw 1:i32, %0
%2:i32 = mulnsw 4294967295:i32, %1
infer %2
%3:i32 = sub 4294967295:i32, %0
result %3
%0:i8 = var
%1:i32 = zext %0
%2:i32 = subnsw 110:i32, %1
%3:i1 = eq 0:i32, %2
infer %3
%4:i1 = eq 110:i8, %0
result %4
%0:i16 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i1 = sle 512:i32, %1
pc %2 1:i1
%3:i1 = sle %1, 32768:i32
pc %3 1:i1
%4:i32 = subnw %1, 1:i32
%5:i32 = and %4, %1
%6:i1 = eq 0:i32, %5
pc %6 1:i1
%7:i16 = trunc %1
infer %7
result %0
%0:i8 = var (range=[1,0))
%1:i32 = zext %0
%2:i64 = zext %1
infer %2
%3:i64 = zext %0
result %3
%0:i64 = var
%1:i64 = sub %0, 8:i64
%2:i64 = sub %1, 17:i64
%3:i1 = ule %2, 0:i64
infer %3
%4:i1 = eq 25:i64, %0
result %4
%0:i32 = select 0:i1, 128:i32, 64:i32
infer %0 (demandedBits=00000000000000001111111111011111)
result 64:i32
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 108:i32, %1
infer %2
%3:i1 = eq 108:i8, %0
result %3
%0:i32 = var (signBits=30) (range=[0,4))
%1:i1 = eq 0:i32, %0
pc %1 0:i1
%2 = block 1
%3:i32 = phi %2, %0
infer %3
result %0
%0:i16 = var
%1:i32 = sext %0
%2:i1 = sle 0:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
%5:i1 = ult %0, 32768:i16
result %5
%0:i64 = var
%1:i64 = var (signBits=33) (range=[-2147483648,2147483648))
%2:i64 = add %0, %1
%3:i32 = var
%4:i64 = sext %3 (hasExternalUses)
%5:i64 = sub %2, %4 (hasExternalUses)
%6:i1 = ult 1000000000:i64, %5
pc %6 0:i1
%7:i64 = and 18374686479671623680:i64, %1
%8:i1 = ne 0:i64, %7
pc %8 1:i1
%9:i64 = lshr %1, 8:i64 (hasExternalUses)
%10:i64 = lshr %9, 7:i64 (hasExternalUses)
%11:i64 = lshr %10, 7:i64 (hasExternalUses)
%12:i64 = lshr %11, 7:i64 (hasExternalUses)
%13:i64 = lshr %12, 7:i64 (hasExternalUses)
%14:i64 = lshr %13, 7:i64 (hasExternalUses)
%15:i64 = lshr %14, 7:i64 (hasExternalUses)
%16:i64 = lshr %15, 7:i64
%17:i64 = and 127:i64, %16
infer %17 (demandedBits=0000000000000000000000000000000000000000000000000000000001111111)
result 127:i64
%0 = block 1
%1:i32 = var
%2:i16 = var
%3:i32 = zext %2
%4:i32 = subnsw %1, %3
%5:i32 = phi %0, %4
%6:i8 = trunc %5
infer %6
%7:i8 = trunc %4
result %7
%0:i32 = var
%1:i8 = trunc %0 (hasExternalUses)
%2:i32 = zext %1
infer %2 (demandedBits=00000000000000000000000011111111)
result %0
%0 = block 4
%1:i16 = var
%2 = block 2
%3:i16 = var
%4:i16 = var
%5:i16 = phi %2, %3, %4
%6:i16 = phi %0, %1, %5, %5, %5
%7:i32 = sext %6
%8:i1 = slt 0:i32, %7
infer %8
%9 = block 4
%10 = block 2
%11:i16 = phi %10, %3, %4
%12:i16 = phi %9, %1, %11, %11, %11
%13:i1 = slt 0:i16, %12
result %13
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = zext %1
%3:i64 = add 32:i64, %2
%4:i64 = add 1:i64, %3
infer %4 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%5:i64 = add 33:i64, %0
result %5
%0 = block 2
%1 = block 3
%2 = block 2
%3:i32 = phi %2, 4294967295:i32, 1:i32
%4:i32 = var
%5:i32 = var
%6:i32 = mulnsw 60:i32, %5
%7:i32 = addnsw %4, %6
%8:i32 = mulnsw %3, %7
%9:i32 = phi %1, %8, 0:i32, 0:i32
%10:i32 = phi %0, %9, 0:i32
%11:i1 = ne 0:i32, %10
%12:i32 = zext %11
%13:i8 = trunc %12
infer %13
%14:i8 = zext %11
result %14
%0 = block 3
%1:i8 = var
%2:i8 = phi %0, %1, 100:i8, 99:i8
%3:i32 = zext %2
%4:i32 = subnsw %3, 97:i32
%5:i32 = addnsw 138:i32, %4
infer %5 (demandedBits=00000000000000000000000011111111)
%6 = block 3
%7:i8 = phi %6, %1, 100:i8, 99:i8
%8:i32 = zext %7
%9:i32 = add 41:i32, %8
result %9
%0:i32 = var
%1:i32 = var
%2:i1 = ult %0, %1
pc %2 0:i1
%3:i64 = zext %0
%4:i1 = ule %3, 3968:i64
pc %4 0:i1
%5 = block 1
%6:i32 = phi %5, %1
infer %6
result %1
%0:i32 = select 0:i1, 128:i32, 64:i32
%1:i32 = or 16:i32, %0
infer %1 (demandedBits=00000000000000001111111111111111)
result 80:i32
%0:i64 = var (knownBits=00000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (signBits=32) (range=[0,4294967295))
%1:i32 = trunc %0 (hasExternalUses)
%2:i64 = zext %1
%3:i64 = mul 24:i64, %2
%4:i32 = trunc %3
infer %4
%5:i32 = mul 24:i32, %1
result %5
%0:i32 = var (signBits=10) (range=[0,1114112))
%1:i1 = ult %0, 128:i32
pc %1 0:i1
%2:i1 = ult %0, 2048:i32
pc %2 0:i1
%3:i1 = ult %0, 65536:i32
pc %3 0:i1
%4:i32 = lshr %0, 18:i32
%5:i32 = and 7:i32, %4
%6:i32 = add 240:i32, %5
infer %6 (demandedBits=00000000000000000000000011111111)
%7:i32 = add 240:i32, %4
result %7
%0:i32 = var
%1:i32 = and 2:i32, %0
%2:i1 = ne 0:i32, %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
infer %4
result %2
%0:i32 = var
%1:i32 = and 8:i32, %0
%2:i1 = eq 0:i32, %1
%3:i32 = zext %2
infer %3 (demandedBits=00000000000000001111111111111111)
%4:i32 = ashr 1:i32, %1
result %4
%0 = block 2
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = var
%3 = block 3
%4:i64 = var
%5:i32 = var
%6:i64 = sext %5
%7:i64 = addnsw %4, %6
%8:i32 = trunc %7
%9:i32 = var
%10:i32 = phi %3, %8, %9, 0:i32
%11:i32 = var (range=[-2147483647,-2147483648))
%12:i32 = subnsw %10, %11
%13:i32 = addnsw %2, %12
%14:i32 = phi %0, %1, %13
%15:i32 = select 1:i1, 1:i32, 2:i32
%16:i32 = addnsw %14, %15
infer %16
%17 = block 2
%18 = block 3
%19:i32 = phi %18, %8, %9, 0:i32
%20:i32 = subnsw %19, %11
%21:i32 = addnsw %2, %20
%22:i32 = phi %17, %1, %21
%23:i32 = add 1:i32, %22
result %23
%0:i64 = var
%1:i32 = var
%2:i64 = sext %1 (hasExternalUses)
%3:i64 = add %0, %2
%4:i32 = var
%5:i64 = sext %4 (hasExternalUses)
%6:i64 = sub %3, %5 (hasExternalUses)
%7:i1 = ult 1000000000:i64, %6
pc %7 0:i1
%8:i64 = and 18374686479671623680:i64, %2
%9:i1 = ne 0:i64, %8
infer %9
%10:i1 = ult 2147483647:i32, %1
result %10
%0 = block 2
%1 = block 2
%2:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%3:i32 = phi %1, %2, %2
%4 = block 1
%5:i32 = phi %4, %2
%6:i32 = phi %0, %3, %5
infer %6
result %2
%0:i32 = var (knownBits=00000000000000000000000000x0x00x) (nonNegative) (signBits=26) (range=[0,41))
%1:i1 = ne 0:i32, %0
%2:i32 = select %1, 116:i32, 5:i32
%3:i8 = trunc %2
infer %3
%4:i8 = select %1, 116:i8, 5:i8
result %4
%0:i32 = var
%1:i32 = subnsw %0, 1:i32 (hasExternalUses)
%2:i1 = sle 0:i32, %1
pc %2 1:i1
%3:i1 = slt %1, %0
infer %3
result 1:i1
%0:i32 = var
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 1:i1
%3:i1 = sle 0:i32, %0
pc %3 1:i1
%4:i32 = mulnw 0:i32, %1
%5:i32 = addnw %0, %4
infer %5
result %0
%0:i32 = var (signBits=10) (range=[0,1114112))
%1:i1 = ult %0, 128:i32
pc %1 0:i1
%2:i1 = ult %0, 2048:i32
pc %2 1:i1
%3:i32 = lshr %0, 6:i32
%4:i32 = and 31:i32, %3
%5:i32 = add 192:i32, %4
infer %5 (demandedBits=00000000000000000000000011111111)
%6:i32 = add 192:i32, %3
result %6
%0:i32 = var
%1:i1 = eq 145:i32, %0
pc %1 0:i1
%2 = block 1
%3:i32 = phi %2, %0
%4:i1 = eq 112:i32, %3
infer %4
%5:i1 = eq 112:i32, %0
result %5
%0 = block 4
%1:i32 = var
%2:i32 = phi %0, %1, %1, %1, %1
%3:i1 = slt 0:i32, %2
pc %3 1:i1
%4:i32 = addnsw 4294967295:i32, %2
infer %4
%5:i32 = add 4294967295:i32, %1
result %5
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967283:i32, %1
%3:i16 = trunc %2
infer %3
%4:i16 = and 65523:i16, %0
result %4
%0:i32 = var
%1:i32 = mulnsw 2:i32, %0
%2:i64 = zext %1
%3:i64 = mul 8:i64, %2
%4:i64 = add 1:i64, %3
%5:i32 = trunc %4
infer %5
%6:i32 = fshl %0, 415432704:i32, 4:i32
result %6
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (nonZero) (range=[2,-2147483648))
%1:i32 = srem %0, 2:i32
%2:i1 = ne 0:i32, %1
infer %2
%3:i1 = trunc %0
result %3
%0 = block 3
%1:i16 = var
%2:i16 = var
%3:i32 = zext %2
%4:i32 = and 4294965215:i32, %3
%5:i16 = trunc %4
%6:i16 = var
%7:i16 = phi %0, %1, %5, %6
%8:i32 = zext %7
%9:i32 = and 4294967293:i32, %8
%10:i16 = trunc %9
%11:i32 = zext %10
%12:i32 = or 16:i32, %11
infer %12 (demandedBits=00000000000000001111111111111111)
%13 = block 3
%14:i16 = phi %13, %1, %5, %6
%15:i32 = zext %14
%16:i32 = and 4294967293:i32, %15
%17:i32 = or 16:i32, %16
result %17
%0 = block 13
%1 = block 2
%2:i32 = var
%3 = block 2
%4:i32 = var
%5:i32 = addnsw 1:i32, %4
%6:i32 = phi %3, %5, %2
%7:i32 = phi %1, %2, %6
%8:i32 = phi %0, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7
infer %8
result %7
%0:i32 = var
%1:i32 = ashr %0, 16:i32
%2:i32 = and 255:i32, %1
infer %2 (demandedBits=00000000000000000000000011111111)
result %1
%0 = block 2
%1:i1 = phi %0, 1:i1, 1:i1
%2:i32 = zext %1
%3:i8 = trunc %2
infer %3
result 1:i8
%0:i64 = var
%1:i64 = and 16777215:i64, %0
%2:i1 = eq %0, %1
pc %2 1:i1
%3:i64 = addnsw 1:i64, %0 (hasExternalUses)
%4:i1 = eq 0:i64, %3
infer %4
result 0:i1
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = lshr %1, 24:i32
infer %2 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i32 = var
%1:i64 = var
%2:i32 = trunc %1
%3:i32 = addnsw %0, %2 (hasExternalUses)
%4:i64 = sext %3
%5:i1 = ult 170:i64, %4
pc %5 1:i1
%6 = block 1
%7:i32 = phi %6, %0
%8:i32 = addnsw 3:i32, %7
infer %8
%9:i32 = add 3:i32, %0
result %9
%0:i32 = var
%1:i1 = ne 0:i32, %0
pc %1 1:i1
%2 = block 1
%3:i32 = phi %2, %0
%4:i1 = eq 7:i32, %3
infer %4
%5:i1 = eq 7:i32, %0
result %5
%0 = block 1
%1:i32 = var
%2:i32 = phi %0, %1
%3:i32 = lshr %2, 24:i32
infer %3 (demandedBits=00000000000000000000000011111111)
%4:i32 = lshr %1, 24:i32
result %4
%0:i32 = var
%1:i32 = shl %0, 16:i32
%2:i64 = zext %1
%3:i64 = or 0:i64, %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %2
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
pc %2 1:i1
%3 = block 1
%4:i8 = phi %3, %0
%5:i32 = zext %4
infer %5
%6:i32 = zext %0
result %6
%0 = block 2
%1 = block 3
%2:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%3:i64 = addnw 1:i64, %2
%4:i32 = trunc %3
%5:i32 = trunc %2
%6:i32 = phi %1, %4, %5, 0:i32
%7:i32 = phi %0, 4293967296:i32, %6
%8:i32 = shlnuw 1:i32, %7
infer %8
%9 = block 3
%10:i32 = phi %9, %4, %5, 0:i32
%11:i32 = shl 1:i32, %10
result %11
%0:i64 = var (knownBits=0000000000000000000000000000000000000000000000000000000x00000000) (nonNegative) (signBits=55) (range=[256,257))
infer %0
result 256:i64
%0 = block 1
%1:i32 = var (signBits=16) (range=[1,65536))
%2:i32 = phi %0, %1
%3:i64 = zext %2
infer %3
%4:i64 = sext %1
result %4
%0 = block 3
%1:i32 = var (range=[1,-2147483648))
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = var
%4 = block 2
%5:i32 = var
%6:i32 = phi %4, %3, %5
%7:i32 = subnsw %3, %6
%8:i32 = phi %0, %2, 0:i32, %7
%9:i1 = eq 0:i32, %8
%10:i32 = zext %9
%11:i1 = ne 0:i32, %10
infer %11
result %9
%0:i16 = var
%1:i32 = zext %0
%2:i16 = var
%3:i32 = zext %2
%4:i32 = subnsw %1, %3 (hasExternalUses)
%5:i32 = subnsw %1, %4
%6:i16 = trunc %5
infer %6
result %2
%0:i8 = var
%1:i32 = zext %0
%2:i1 = ne 0:i32, %1
pc %2 0:i1
%3 = block 1
%4:i8 = phi %3, %0
%5:i64 = zext %4
infer %5
result 0:i64
%0 = block 1
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%2:i32 = phi %0, %1
infer %2
result %1
%0:i8 = var
%1:i32 = zext %0
%2:i1 = eq 49:i32, %1
infer %2
%3:i1 = eq 49:i8, %0
result %3
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,65535))
%1:i64 = addnw 1:i64, %0 (hasExternalUses)
%2:i16 = var
%3:i32 = zext %2
%4:i64 = zext %3
%5:i1 = ult %1, %4
pc %5 0:i1
%6 = block 1
%7:i16 = phi %6, %2
%8:i32 = zext %7
infer %8
result %3
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483648))
%1:i32 = var
%2:i64 = sext %1
%3:i1 = slt %0, %2
pc %3 1:i1
%4:i1 = eq 1:i64, %0
pc %4 0:i1
%5 = block 1
%6:i64 = phi %5, %0
infer %6 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
result %0
%0:i32 = var (range=[1,5))
%1:i32 = add 4294967295:i32, %0 (hasExternalUses)
%2:i1 = slt %1, 0:i32
infer %2
result 0:i1
%0:i32 = var
%1:i32 = subnuw %0, 12:i32
%2:i32 = udiv %1, 2:i32
infer %2
%3:i32 = lshr %1, 1:i32
result %3
%0:i32 = lshr 0:i32, 24:i32
infer %0 (demandedBits=00000000000000000000000011111111)
result 0:i32
%0:i32 = var
%1:i32 = subnsw %0, 1:i32
%2:i32 = sdiv %1, 8:i32
%3:i32 = mulnsw 8:i32, %2
%4:i32 = addnsw 8:i32, %3
%5:i64 = zext %4
%6:i64 = mul 40:i64, %5
%7:i32 = trunc %6
infer %7
%8:i32 = mul 40:i32, %4
result %8
%0:i16 = var
%1:i32 = zext %0
%2:i1 = slt 0:i32, %1
%3:i32 = select %2, 1:i32, 0:i32
infer %3 (demandedBits=00000000000000000000000011111111)
%4:i32 = zext %2
result %4
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294967231:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 128:i32, %4
infer %5 (demandedBits=00000000000000001111111111111111)
%6:i32 = or 128:i32, %2
result %6
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i32 = mulnsw 3:i32, %1
%3:i64 = zext %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%4:i64 = mul 3:i64, %0
result %4
%0:i32 = var
%1:i64 = sext %0
%2:i64 = mul 40:i64, %1
%3:i32 = trunc %2
infer %3
%4:i32 = mul 40:i32, %0
result %4
%0:i32 = var
%1:i32 = addnsw 4294967295:i32, %0 (hasExternalUses)
%2:i32 = addnsw 1:i32, %1
infer %2
result %0
%0 = block 2
%1:i32 = var
%2:i32 = addnsw 2:i32, %1
%3:i32 = phi %0, %2, %2
%4:i32 = var
%5:i32 = var
%6:i32 = phi %0, %4, %5
%7:i1 = slt %3, %6
pc %7 1:i1
%8:i64 = zext %3
infer %8
%9:i64 = zext %2
result %9
%0:i8 = var
%1:i32 = sext %0
%2:i1 = ne 0:i32, %1
pc %2 0:i1
%3 = block 1
%4:i8 = phi %3, %0
infer %4
result 0:i8
%0 = block 2
%1:i32 = zext 1:i1
%2:i8 = trunc %1
%3:i32 = zext %2
%4:i1 = ne 0:i32, %3
%5:i1 = phi %0, 1:i1, %4
%6:i32 = zext %5
infer %6 (demandedBits=00000000000000000000000011111111)
result 1:i32
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%1:i32 = var
%2:i1 = slt %0, %1
pc %2 0:i1
%3:i32 = and 7:i32, %1
%4:i1 = eq 0:i32, %3
pc %4 1:i1
%5:i32 = addnsw 8:i32, %1
%6:i64 = sext %5
%7:i64 = mul 40:i64, %6
%8:i32 = trunc %7
infer %8
%9:i32 = mul 40:i32, %5
result %9
%0:i32 = var
%1:i32 = var
%2:i32 = sub %0, %1 (hasExternalUses)
%3:i1 = slt 0:i32, %2
pc %3 1:i1
%4:i64 = zext %2 (hasExternalUses)
%5:i1 = ult %4, 8:i64
pc %5 0:i1
%6:i64 = urem %4, 8:i64
infer %6
%7:i64 = and 7:i64, %4
result %7
%0 = block 2
%1:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,-2147483648))
%2:i32 = addnw 1:i32, %1
%3:i32 = phi %0, %2, 0:i32
%4:i1 = slt 0:i32, %3
pc %4 1:i1
%5:i64 = zext %3
%6:i64 = mulnw 8:i64, %5
%7:i32 = trunc %6
infer %7
%8 = block 2
%9:i32 = phi %8, %2, 0:i32
%10:i32 = mul 8:i32, %9
result %10
%0:i32 = var (signBits=10) (range=[0,1114112))
%1:i1 = ult %0, 128:i32
pc %1 0:i1
%2:i1 = ult %0, 2048:i32
pc %2 0:i1
%3:i1 = ult %0, 65536:i32
pc %3 0:i1
%4:i32 = lshr %0, 18:i32
%5:i32 = and 7:i32, %4
infer %5 (demandedBits=00000000000000000000000011111111)
result %4
%0:i64 = var
%1:i32 = trunc %0 (hasExternalUses)
%2:i32 = and 1:i32, %1
%3:i1 = ne 0:i32, %2
infer %3
%4:i1 = trunc %0
result %4
%0 = block 7
%1 = block 2
%2 = block 2
%3 = block 2
%4:i64 = var
%5:i64 = var
%6:i64 = phi %3, %4, %5
%7:i64 = phi %2, 0:i64, %6
%8:i64 = phi %1, %7, 0:i64
%9:i64 = phi %0, %8, %8, %8, %8, %8, %8, %8
%10:i1 = eq 0:i64, %9
infer %10
%11 = block 2
%12 = block 2
%13 = block 2
%14:i64 = phi %13, %4, %5
%15:i64 = phi %12, 0:i64, %14
%16:i64 = phi %11, %15, 0:i64
%17:i1 = eq 0:i64, %16
result %17
%0:i32 = var
%1:i32 = and 1:i32, %0
%2:i32 = var
%3:i32 = and 2147483647:i32, %2
%4:i32 = shlnuw %3, 1:i32
%5:i32 = or %1, %4
infer %5 (demandedBits=11111111111111111111111111111110)
%6:i32 = add %2, %2
result %6
%0:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000) (range=[0,-7))
%1:i64 = add 8:i64, %0 (hasExternalUses)
%2:i32 = var (range=[1,5))
%3:i32 = add 4294967295:i32, %2
%4:i1 = slt %3, 0:i32
%5:i32 = select %4, %3, 0:i32
%6:i32 = sub %3, %5
%7:i64 = zext %6
%8:i64 = addnw 1:i64, %7 (hasExternalUses)
%9:i64 = urem %8, 8:i64
%10:i64 = sub %8, %9 (hasExternalUses)
%11:i1 = eq %1, %10
pc %11 1:i1
%12:i1 = eq %8, %10
infer %12
result 0:i1
%0:i32 = var
%1:i1 = ne 0:i32, %0
pc %1 1:i1
%2:i32 = add 1:i32, %0 (hasExternalUses)
%3:i16 = var
%4:i32 = zext %3
%5:i32 = sdiv 1073741824:i32, %4
%6:i32 = addnsw 1:i32, %5
%7:i1 = eq %2, %6
infer %7
%8:i1 = eq %0, %5
result %8
%0:i32 = var
%1:i64 = var (knownBits=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1101) (nonZero)
%2 = block 1
%3:i64 = var (nonZero)
%4:i64 = phi %2, %3
%5:i64 = sub %1, %4
%6:i32 = trunc %5
%7:i32 = subnsw %0, %6
%8:i1 = slt 0:i32, %7
pc %8 1:i1
%9:i32 = trunc %4
infer %9
%10:i32 = trunc %3
result %10
%0:i8 = var
%1:i32 = zext %0 (hasExternalUses)
%2:i32 = and 4294967279:i32, %1
%3:i8 = trunc %2
infer %3
%4:i8 = and 239:i8, %0
result %4
%0:i32 = var (signBits=25) (range=[-128,128))
%1:i1 = ne 45:i32, %0
pc %1 1:i1
%2:i1 = ne 43:i32, %0
pc %2 1:i1
%3:i1 = ne 32:i32, %0
pc %3 1:i1
%4:i1 = ne 35:i32, %0
pc %4 1:i1
%5:i1 = ne 33:i32, %0
pc %5 1:i1
%6:i1 = ne 48:i32, %0
pc %6 1:i1
%7 = block 1
%8:i32 = phi %7, %0
%9:i1 = eq 42:i32, %8
pc %9 0:i1
%10:i1 = sle %8, 57:i32
infer %10
%11:i1 = slt %0, 58:i32
result %11
%0:i16 = var
%1:i32 = zext %0
%2:i32 = and 4294966911:i32, %1
%3:i16 = trunc %2
%4:i32 = zext %3
%5:i32 = or 64:i32, %4
%6:i16 = trunc %5
infer %6
%7:i16 = or 64:i16, %3
result %7
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,32768))
%1:i16 = var
%2:i32 = sext %1
%3:i1 = slt %0, %2
pc %3 1:i1
%4:i1 = sle 0:i32, %0
infer %4
result 1:i1
%0:i8 = var
%1:i32 = sext %0
%2:i32 = shlnsw %1, 8:i32
%3:i8 = var
%4:i32 = sext %3
%5:i32 = add %2, %4 (hasExternalUses)
%6:i1 = ule 55296:i32, %5
pc %6 1:i1
%7:i1 = ult %5, 57344:i32
pc %7 1:i1
%8:i32 = and 960:i32, %5
%9:i32 = addnw 64:i32, %8
%10:i32 = shlnw %9, 10:i32
infer %10
result %4
%0:i32 = var
%1:i32 = var
%2:i1 = sle %0, %1
pc %2 1:i1
%3:i32 = addnsw 1:i32, %1 (hasExternalUses)
%4:i64 = zext %3
%5:i64 = mul 40:i64, %4
%6:i32 = trunc %5
infer %6
%7:i32 = mul 40:i32, %3
result %7
%0 = block 3
%1:i32 = var (range=[1,-2147483648))
%2:i32 = addnsw 4294967295:i32, %1
%3:i32 = var
%4 = block 2
%5:i32 = var
%6:i32 = phi %4, %5, %3
%7:i32 = subnsw %3, %6
%8:i32 = phi %0, %2, 0:i32, %7
%9:i1 = eq 0:i32, %8
%10:i32 = zext %9
%11:i1 = ne 0:i32, %10
infer %11
result %9
%0:i64 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i32 = trunc %0
%2:i1 = sle 0:i32, %1
infer %2
result 1:i1
%0:i32 = var
%1:i1 = eq 1:i32, %0
%2:i32 = select %1, 100:i32, 0:i32
%3:i8 = trunc %2
infer %3
%4:i8 = select %1, 100:i8, 0:i8
result %4
%0:i32 = var (knownBits=0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx) (nonNegative) (range=[0,2147483647))
%1:i1 = sle 0:i32, %0
infer %1
result 1:i1
%0 = block 2
%1 = block 2
%2:i32 = select 0:i1, 16:i32, 2:i32
%3:i32 = or 32:i32, %2
%4:i32 = phi %1, %3, 2:i32
%5:i32 = or 64:i32, %4
%6:i32 = select 0:i1, 128:i32, 64:i32
%7:i32 = or %4, %6
%8:i32 = phi %0, %5, %7
%9:i16 = trunc %8
infer %9
%10:i16 = trunc %5
result %10
%0:i1 = var
%1:i32 = zext %0
%2:i8 = trunc %1
infer %2
%3:i8 = zext %0
result %3
%0:i8 = var
%1:i32 = zext %0
infer %1 (demandedBits=00000000000000000000000000000000)
result 0:i32
%0:i32 = var (range=[-32896,1114112))
%1:i1 = eq 0:i32, %0
%2:i32 = select %1, 2:i32, 0:i32
%3:i64 = zext %2
infer %3 (demandedBits=0000000000000000000000000000000011111111111111111111111111111111)
%4:i64 = select %1, 2:i64, 0:i64
result %4
%0:i32 = var (range=[0,-2147483648))
%1:i8 = var
%2:i32 = zext %1 (hasExternalUses)
%3:i1 = eq %0, %2
pc %3 0:i1
%4:i8 = var
%5:i32 = zext %4 (hasExternalUses)
%6:i1 = eq %0, %5
pc %6 0:i1
%7 = block 1
%8:i32 = phi %7, %0
infer %8
result %0
